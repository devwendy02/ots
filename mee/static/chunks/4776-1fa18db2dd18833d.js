(self.webpackChunk_N_E = self.webpackChunk_N_E || []).push([
    [4776], {
        7783: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.createCurve = t.getHash = void 0; /*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
            let n = r(34374),
                i = r(17452),
                o = r(14192);

            function getHash(e) {
                return {
                    hash: e,
                    hmac: (t, ...r) => (0, n.hmac)(e, t, (0, i.concatBytes)(...r)),
                    randomBytes: i.randomBytes
                }
            }
            t.getHash = getHash, t.createCurve = function(e, t) {
                let create = t => (0, o.weierstrass)({ ...e,
                    ...getHash(t)
                });
                return Object.freeze({ ...create(t),
                    create
                })
            }
        },
        21633: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.validateBasic = t.wNAF = void 0; /*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
            let n = r(86290),
                i = r(95786),
                o = BigInt(0),
                a = BigInt(1);
            t.wNAF = function(e, t) {
                let constTimeNegate = (e, t) => {
                        let r = t.negate();
                        return e ? r : t
                    },
                    opts = e => ({
                        windows: Math.ceil(t / e) + 1,
                        windowSize: 2 ** (e - 1)
                    });
                return {
                    constTimeNegate,
                    unsafeLadder(t, r) {
                        let n = e.ZERO,
                            i = t;
                        for (; r > o;) r & a && (n = n.add(i)), i = i.double(), r >>= a;
                        return n
                    },
                    precomputeWindow(e, t) {
                        let {
                            windows: r,
                            windowSize: n
                        } = opts(t), i = [], o = e, a = o;
                        for (let e = 0; e < r; e++) {
                            a = o, i.push(a);
                            for (let e = 1; e < n; e++) a = a.add(o), i.push(a);
                            o = a.double()
                        }
                        return i
                    },
                    wNAF(t, r, n) {
                        let {
                            windows: i,
                            windowSize: o
                        } = opts(t), s = e.ZERO, c = e.BASE, u = BigInt(2 ** t - 1), l = 2 ** t, d = BigInt(t);
                        for (let e = 0; e < i; e++) {
                            let t = e * o,
                                i = Number(n & u);
                            n >>= d, i > o && (i -= l, n += a);
                            let f = t + Math.abs(i) - 1,
                                p = e % 2 != 0,
                                y = i < 0;
                            0 === i ? c = c.add(constTimeNegate(p, r[t])) : s = s.add(constTimeNegate(y, r[f]))
                        }
                        return {
                            p: s,
                            f: c
                        }
                    },
                    wNAFCached(e, t, r, n) {
                        let i = e._WINDOW_SIZE || 1,
                            o = t.get(e);
                        return o || (o = this.precomputeWindow(e, i), 1 !== i && t.set(e, n(o))), this.wNAF(i, o, r)
                    }
                }
            }, t.validateBasic = function(e) {
                return (0, n.validateField)(e.Fp), (0, i.validateObject)(e, {
                    n: "bigint",
                    h: "bigint",
                    Gx: "field",
                    Gy: "field"
                }, {
                    nBitLength: "isSafeInteger",
                    nByteLength: "isSafeInteger"
                }), Object.freeze({ ...(0, n.nLength)(e.n, e.nBitLength),
                    ...e,
                    p: e.Fp.ORDER
                })
            }
        },
        38270: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.createHasher = t.isogenyMap = t.hash_to_field = t.expand_message_xof = t.expand_message_xmd = void 0;
            let n = r(86290),
                i = r(95786),
                o = i.bytesToNumberBE;

            function i2osp(e, t) {
                if (e < 0 || e >= 1 << 8 * t) throw Error(`bad I2OSP call: value=${e} length=${t}`);
                let r = Array.from({
                    length: t
                }).fill(0);
                for (let n = t - 1; n >= 0; n--) r[n] = 255 & e, e >>>= 8;
                return new Uint8Array(r)
            }

            function isBytes(e) {
                if (!(e instanceof Uint8Array)) throw Error("Uint8Array expected")
            }

            function isNum(e) {
                if (!Number.isSafeInteger(e)) throw Error("number expected")
            }

            function expand_message_xmd(e, t, r, n) {
                isBytes(e), isBytes(t), isNum(r), t.length > 255 && (t = n((0, i.concatBytes)((0, i.utf8ToBytes)("H2C-OVERSIZE-DST-"), t)));
                let {
                    outputLen: o,
                    blockLen: a
                } = n, s = Math.ceil(r / o);
                if (s > 255) throw Error("Invalid xmd length");
                let c = (0, i.concatBytes)(t, i2osp(t.length, 1)),
                    u = i2osp(0, a),
                    l = i2osp(r, 2),
                    d = Array(s),
                    f = n((0, i.concatBytes)(u, e, l, i2osp(0, 1), c));
                d[0] = n((0, i.concatBytes)(f, i2osp(1, 1), c));
                for (let e = 1; e <= s; e++) {
                    let t = [function(e, t) {
                        let r = new Uint8Array(e.length);
                        for (let n = 0; n < e.length; n++) r[n] = e[n] ^ t[n];
                        return r
                    }(f, d[e - 1]), i2osp(e + 1, 1), c];
                    d[e] = n((0, i.concatBytes)(...t))
                }
                let p = (0, i.concatBytes)(...d);
                return p.slice(0, r)
            }

            function expand_message_xof(e, t, r, n, o) {
                if (isBytes(e), isBytes(t), isNum(r), t.length > 255 && (t = o.create({
                        dkLen: Math.ceil(2 * n / 8)
                    }).update((0, i.utf8ToBytes)("H2C-OVERSIZE-DST-")).update(t).digest()), r > 65535 || t.length > 255) throw Error("expand_message_xof: invalid lenInBytes");
                return o.create({
                    dkLen: r
                }).update(e).update(i2osp(r, 2)).update(t).update(i2osp(t.length, 1)).digest()
            }

            function hash_to_field(e, t, r) {
                let a;
                (0, i.validateObject)(r, {
                    DST: "stringOrUint8Array",
                    p: "bigint",
                    m: "isSafeInteger",
                    k: "isSafeInteger",
                    hash: "hash"
                });
                let {
                    p: s,
                    k: c,
                    m: u,
                    hash: l,
                    expand: d,
                    DST: f
                } = r;
                isBytes(e), isNum(t);
                let p = function(e) {
                        if (e instanceof Uint8Array) return e;
                        if ("string" == typeof e) return (0, i.utf8ToBytes)(e);
                        throw Error("DST must be Uint8Array or string")
                    }(f),
                    y = s.toString(2).length,
                    g = Math.ceil((y + c) / 8),
                    v = t * u * g;
                if ("xmd" === d) a = expand_message_xmd(e, p, v, l);
                else if ("xof" === d) a = expand_message_xof(e, p, v, c, l);
                else if ("_internal_pass" === d) a = e;
                else throw Error('expand must be "xmd" or "xof"');
                let E = Array(t);
                for (let e = 0; e < t; e++) {
                    let t = Array(u);
                    for (let r = 0; r < u; r++) {
                        let i = g * (r + e * u),
                            c = a.subarray(i, i + g);
                        t[r] = (0, n.mod)(o(c), s)
                    }
                    E[e] = t
                }
                return E
            }
            t.expand_message_xmd = expand_message_xmd, t.expand_message_xof = expand_message_xof, t.hash_to_field = hash_to_field, t.isogenyMap = function(e, t) {
                let r = t.map(e => Array.from(e).reverse());
                return (t, n) => {
                    let [i, o, a, s] = r.map(r => r.reduce((r, n) => e.add(e.mul(r, t), n)));
                    return {
                        x: t = e.div(i, o),
                        y: n = e.mul(n, e.div(a, s))
                    }
                }
            }, t.createHasher = function(e, t, r) {
                if ("function" != typeof t) throw Error("mapToCurve() must be defined");
                return {
                    hashToCurve(n, i) {
                        let o = hash_to_field(n, 2, { ...r,
                                DST: r.DST,
                                ...i
                            }),
                            a = e.fromAffine(t(o[0])),
                            s = e.fromAffine(t(o[1])),
                            c = a.add(s).clearCofactor();
                        return c.assertValidity(), c
                    },
                    encodeToCurve(n, i) {
                        let o = hash_to_field(n, 1, { ...r,
                                DST: r.encodeDST,
                                ...i
                            }),
                            a = e.fromAffine(t(o[0])).clearCofactor();
                        return a.assertValidity(), a
                    }
                }
            }
        },
        86290: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.mapHashToField = t.getMinHashLength = t.getFieldBytesLength = t.hashToPrivateScalar = t.FpSqrtEven = t.FpSqrtOdd = t.Field = t.nLength = t.FpIsSquare = t.FpDiv = t.FpInvertBatch = t.FpPow = t.validateField = t.isNegativeLE = t.FpSqrt = t.tonelliShanks = t.invert = t.pow2 = t.pow = t.mod = void 0; /*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
            let n = r(95786),
                i = BigInt(0),
                o = BigInt(1),
                a = BigInt(2),
                s = BigInt(3),
                c = BigInt(4),
                u = BigInt(5),
                l = BigInt(8);

            function mod(e, t) {
                let r = e % t;
                return r >= i ? r : t + r
            }

            function pow(e, t, r) {
                if (r <= i || t < i) throw Error("Expected power/modulo > 0");
                if (r === o) return i;
                let n = o;
                for (; t > i;) t & o && (n = n * e % r), e = e * e % r, t >>= o;
                return n
            }

            function invert(e, t) {
                if (e === i || t <= i) throw Error(`invert: expected positive integers, got n=${e} mod=${t}`);
                let r = mod(e, t),
                    n = t,
                    a = i,
                    s = o,
                    c = o,
                    u = i;
                for (; r !== i;) {
                    let e = n / r,
                        t = n % r,
                        i = a - c * e,
                        o = s - u * e;
                    n = r, r = t, a = c, s = u, c = i, u = o
                }
                let l = n;
                if (l !== o) throw Error("invert: does not exist");
                return mod(a, t)
            }

            function tonelliShanks(e) {
                let t, r, n;
                let s = (e - o) / a;
                for (t = e - o, r = 0; t % a === i; t /= a, r++);
                for (n = a; n < e && pow(n, s, e) !== e - o; n++);
                if (1 === r) {
                    let t = (e + o) / c;
                    return function(e, r) {
                        let n = e.pow(r, t);
                        if (!e.eql(e.sqr(n), r)) throw Error("Cannot find square root");
                        return n
                    }
                }
                let u = (t + o) / a;
                return function(e, i) {
                    if (e.pow(i, s) === e.neg(e.ONE)) throw Error("Cannot find square root");
                    let a = r,
                        c = e.pow(e.mul(e.ONE, n), t),
                        l = e.pow(i, u),
                        d = e.pow(i, t);
                    for (; !e.eql(d, e.ONE);) {
                        if (e.eql(d, e.ZERO)) return e.ZERO;
                        let t = 1;
                        for (let r = e.sqr(d); t < a && !e.eql(r, e.ONE); t++) r = e.sqr(r);
                        let r = e.pow(c, o << BigInt(a - t - 1));
                        c = e.sqr(r), l = e.mul(l, r), d = e.mul(d, c), a = t
                    }
                    return l
                }
            }

            function FpSqrt(e) {
                if (e % c === s) {
                    let t = (e + o) / c;
                    return function(e, r) {
                        let n = e.pow(r, t);
                        if (!e.eql(e.sqr(n), r)) throw Error("Cannot find square root");
                        return n
                    }
                }
                if (e % l === u) {
                    let t = (e - u) / l;
                    return function(e, r) {
                        let n = e.mul(r, a),
                            i = e.pow(n, t),
                            o = e.mul(r, i),
                            s = e.mul(e.mul(o, a), i),
                            c = e.mul(o, e.sub(s, e.ONE));
                        if (!e.eql(e.sqr(c), r)) throw Error("Cannot find square root");
                        return c
                    }
                }
                return tonelliShanks(e)
            }
            BigInt(9), BigInt(16), t.mod = mod, t.pow = pow, t.pow2 = function(e, t, r) {
                let n = e;
                for (; t-- > i;) n *= n, n %= r;
                return n
            }, t.invert = invert, t.tonelliShanks = tonelliShanks, t.FpSqrt = FpSqrt, t.isNegativeLE = (e, t) => (mod(e, t) & o) === o;
            let d = ["create", "isValid", "is0", "neg", "inv", "sqrt", "sqr", "eql", "add", "sub", "mul", "pow", "div", "addN", "subN", "mulN", "sqrN"];

            function FpPow(e, t, r) {
                if (r < i) throw Error("Expected power > 0");
                if (r === i) return e.ONE;
                if (r === o) return t;
                let n = e.ONE,
                    a = t;
                for (; r > i;) r & o && (n = e.mul(n, a)), a = e.sqr(a), r >>= o;
                return n
            }

            function FpInvertBatch(e, t) {
                let r = Array(t.length),
                    n = t.reduce((t, n, i) => e.is0(n) ? t : (r[i] = t, e.mul(t, n)), e.ONE),
                    i = e.inv(n);
                return t.reduceRight((t, n, i) => e.is0(n) ? t : (r[i] = e.mul(t, r[i]), e.mul(t, n)), i), r
            }

            function nLength(e, t) {
                let r = void 0 !== t ? t : e.toString(2).length;
                return {
                    nBitLength: r,
                    nByteLength: Math.ceil(r / 8)
                }
            }

            function getFieldBytesLength(e) {
                if ("bigint" != typeof e) throw Error("field order must be bigint");
                let t = e.toString(2).length;
                return Math.ceil(t / 8)
            }

            function getMinHashLength(e) {
                let t = getFieldBytesLength(e);
                return t + Math.ceil(t / 2)
            }
            t.validateField = function(e) {
                let t = d.reduce((e, t) => (e[t] = "function", e), {
                    ORDER: "bigint",
                    MASK: "bigint",
                    BYTES: "isSafeInteger",
                    BITS: "isSafeInteger"
                });
                return (0, n.validateObject)(e, t)
            }, t.FpPow = FpPow, t.FpInvertBatch = FpInvertBatch, t.FpDiv = function(e, t, r) {
                return e.mul(t, "bigint" == typeof r ? invert(r, e.ORDER) : e.inv(r))
            }, t.FpIsSquare = function(e) {
                let t = (e.ORDER - o) / a;
                return r => {
                    let n = e.pow(r, t);
                    return e.eql(n, e.ZERO) || e.eql(n, e.ONE)
                }
            }, t.nLength = nLength, t.Field = function(e, t, r = !1, a = {}) {
                if (e <= i) throw Error(`Expected Field ORDER > 0, got ${e}`);
                let {
                    nBitLength: s,
                    nByteLength: c
                } = nLength(e, t);
                if (c > 2048) throw Error("Field lengths over 2048 bytes are not supported");
                let u = FpSqrt(e),
                    l = Object.freeze({
                        ORDER: e,
                        BITS: s,
                        BYTES: c,
                        MASK: (0, n.bitMask)(s),
                        ZERO: i,
                        ONE: o,
                        create: t => mod(t, e),
                        isValid: t => {
                            if ("bigint" != typeof t) throw Error(`Invalid field element: expected bigint, got ${typeof t}`);
                            return i <= t && t < e
                        },
                        is0: e => e === i,
                        isOdd: e => (e & o) === o,
                        neg: t => mod(-t, e),
                        eql: (e, t) => e === t,
                        sqr: t => mod(t * t, e),
                        add: (t, r) => mod(t + r, e),
                        sub: (t, r) => mod(t - r, e),
                        mul: (t, r) => mod(t * r, e),
                        pow: (e, t) => FpPow(l, e, t),
                        div: (t, r) => mod(t * invert(r, e), e),
                        sqrN: e => e * e,
                        addN: (e, t) => e + t,
                        subN: (e, t) => e - t,
                        mulN: (e, t) => e * t,
                        inv: t => invert(t, e),
                        sqrt: a.sqrt || (e => u(l, e)),
                        invertBatch: e => FpInvertBatch(l, e),
                        cmov: (e, t, r) => r ? t : e,
                        toBytes: e => r ? (0, n.numberToBytesLE)(e, c) : (0, n.numberToBytesBE)(e, c),
                        fromBytes: e => {
                            if (e.length !== c) throw Error(`Fp.fromBytes: expected ${c}, got ${e.length}`);
                            return r ? (0, n.bytesToNumberLE)(e) : (0, n.bytesToNumberBE)(e)
                        }
                    });
                return Object.freeze(l)
            }, t.FpSqrtOdd = function(e, t) {
                if (!e.isOdd) throw Error("Field doesn't have isOdd");
                let r = e.sqrt(t);
                return e.isOdd(r) ? r : e.neg(r)
            }, t.FpSqrtEven = function(e, t) {
                if (!e.isOdd) throw Error("Field doesn't have isOdd");
                let r = e.sqrt(t);
                return e.isOdd(r) ? e.neg(r) : r
            }, t.hashToPrivateScalar = function(e, t, r = !1) {
                e = (0, n.ensureBytes)("privateHash", e);
                let i = e.length,
                    a = nLength(t).nByteLength + 8;
                if (a < 24 || i < a || i > 1024) throw Error(`hashToPrivateScalar: expected ${a}-1024 bytes of input, got ${i}`);
                let s = r ? (0, n.bytesToNumberLE)(e) : (0, n.bytesToNumberBE)(e);
                return mod(s, t - o) + o
            }, t.getFieldBytesLength = getFieldBytesLength, t.getMinHashLength = getMinHashLength, t.mapHashToField = function(e, t, r = !1) {
                let i = e.length,
                    a = getFieldBytesLength(t),
                    s = getMinHashLength(t);
                if (i < 16 || i < s || i > 1024) throw Error(`expected ${s}-1024 bytes of input, got ${i}`);
                let c = r ? (0, n.bytesToNumberBE)(e) : (0, n.bytesToNumberLE)(e),
                    u = mod(c, t - o) + o;
                return r ? (0, n.numberToBytesLE)(u, a) : (0, n.numberToBytesBE)(u, a)
            }
        },
        95786: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.validateObject = t.createHmacDrbg = t.bitMask = t.bitSet = t.bitGet = t.bitLen = t.utf8ToBytes = t.equalBytes = t.concatBytes = t.ensureBytes = t.numberToVarBytesBE = t.numberToBytesLE = t.numberToBytesBE = t.bytesToNumberLE = t.bytesToNumberBE = t.hexToBytes = t.hexToNumber = t.numberToHexUnpadded = t.bytesToHex = void 0; /*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
            let r = BigInt(0),
                n = BigInt(1),
                i = BigInt(2),
                u8a = e => e instanceof Uint8Array,
                o = Array.from({
                    length: 256
                }, (e, t) => t.toString(16).padStart(2, "0"));

            function bytesToHex(e) {
                if (!u8a(e)) throw Error("Uint8Array expected");
                let t = "";
                for (let r = 0; r < e.length; r++) t += o[e[r]];
                return t
            }

            function numberToHexUnpadded(e) {
                let t = e.toString(16);
                return 1 & t.length ? `0${t}` : t
            }

            function hexToNumber(e) {
                if ("string" != typeof e) throw Error("hex string expected, got " + typeof e);
                return BigInt("" === e ? "0" : `0x${e}`)
            }

            function hexToBytes(e) {
                if ("string" != typeof e) throw Error("hex string expected, got " + typeof e);
                let t = e.length;
                if (t % 2) throw Error("padded hex string expected, got unpadded hex of length " + t);
                let r = new Uint8Array(t / 2);
                for (let t = 0; t < r.length; t++) {
                    let n = 2 * t,
                        i = e.slice(n, n + 2),
                        o = Number.parseInt(i, 16);
                    if (Number.isNaN(o) || o < 0) throw Error("Invalid byte sequence");
                    r[t] = o
                }
                return r
            }

            function numberToBytesBE(e, t) {
                return hexToBytes(e.toString(16).padStart(2 * t, "0"))
            }

            function concatBytes(...e) {
                let t = new Uint8Array(e.reduce((e, t) => e + t.length, 0)),
                    r = 0;
                return e.forEach(e => {
                    if (!u8a(e)) throw Error("Uint8Array expected");
                    t.set(e, r), r += e.length
                }), t
            }
            t.bytesToHex = bytesToHex, t.numberToHexUnpadded = numberToHexUnpadded, t.hexToNumber = hexToNumber, t.hexToBytes = hexToBytes, t.bytesToNumberBE = function(e) {
                return hexToNumber(bytesToHex(e))
            }, t.bytesToNumberLE = function(e) {
                if (!u8a(e)) throw Error("Uint8Array expected");
                return hexToNumber(bytesToHex(Uint8Array.from(e).reverse()))
            }, t.numberToBytesBE = numberToBytesBE, t.numberToBytesLE = function(e, t) {
                return numberToBytesBE(e, t).reverse()
            }, t.numberToVarBytesBE = function(e) {
                return hexToBytes(numberToHexUnpadded(e))
            }, t.ensureBytes = function(e, t, r) {
                let n;
                if ("string" == typeof t) try {
                        n = hexToBytes(t)
                    } catch (r) {
                        throw Error(`${e} must be valid hex string, got "${t}". Cause: ${r}`)
                    } else if (u8a(t)) n = Uint8Array.from(t);
                    else throw Error(`${e} must be hex string or Uint8Array`);
                let i = n.length;
                if ("number" == typeof r && i !== r) throw Error(`${e} expected ${r} bytes, got ${i}`);
                return n
            }, t.concatBytes = concatBytes, t.equalBytes = function(e, t) {
                if (e.length !== t.length) return !1;
                for (let r = 0; r < e.length; r++)
                    if (e[r] !== t[r]) return !1;
                return !0
            }, t.utf8ToBytes = function(e) {
                if ("string" != typeof e) throw Error(`utf8ToBytes expected string, got ${typeof e}`);
                return new Uint8Array(new TextEncoder().encode(e))
            }, t.bitLen = function(e) {
                let t;
                for (t = 0; e > r; e >>= n, t += 1);
                return t
            }, t.bitGet = function(e, t) {
                return e >> BigInt(t) & n
            }, t.bitSet = (e, t, i) => e | (i ? n : r) << BigInt(t), t.bitMask = e => (i << BigInt(e - 1)) - n;
            let u8n = e => new Uint8Array(e),
                u8fr = e => Uint8Array.from(e);
            t.createHmacDrbg = function(e, t, r) {
                if ("number" != typeof e || e < 2) throw Error("hashLen must be a number");
                if ("number" != typeof t || t < 2) throw Error("qByteLen must be a number");
                if ("function" != typeof r) throw Error("hmacFn must be a function");
                let n = u8n(e),
                    i = u8n(e),
                    o = 0,
                    reset = () => {
                        n.fill(1), i.fill(0), o = 0
                    },
                    h = (...e) => r(i, n, ...e),
                    reseed = (e = u8n()) => {
                        i = h(u8fr([0]), e), n = h(), 0 !== e.length && (i = h(u8fr([1]), e), n = h())
                    },
                    gen = () => {
                        if (o++ >= 1e3) throw Error("drbg: tried 1000 values");
                        let e = 0,
                            r = [];
                        for (; e < t;) {
                            n = h();
                            let t = n.slice();
                            r.push(t), e += n.length
                        }
                        return concatBytes(...r)
                    };
                return (e, t) => {
                    let r;
                    for (reset(), reseed(e); !(r = t(gen()));) reseed();
                    return reset(), r
                }
            };
            let a = {
                bigint: e => "bigint" == typeof e,
                function: e => "function" == typeof e,
                boolean: e => "boolean" == typeof e,
                string: e => "string" == typeof e,
                stringOrUint8Array: e => "string" == typeof e || e instanceof Uint8Array,
                isSafeInteger: e => Number.isSafeInteger(e),
                array: e => Array.isArray(e),
                field: (e, t) => t.Fp.isValid(e),
                hash: e => "function" == typeof e && Number.isSafeInteger(e.outputLen)
            };
            t.validateObject = function(e, t, r = {}) {
                let checkField = (t, r, n) => {
                    let i = a[r];
                    if ("function" != typeof i) throw Error(`Invalid validator "${r}", expected function`);
                    let o = e[t];
                    if ((!n || void 0 !== o) && !i(o, e)) throw Error(`Invalid param ${String(t)}=${o} (${typeof o}), expected ${r}`)
                };
                for (let [e, r] of Object.entries(t)) checkField(e, r, !1);
                for (let [e, t] of Object.entries(r)) checkField(e, t, !0);
                return e
            }
        },
        14192: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.mapToCurveSimpleSWU = t.SWUFpSqrtRatio = t.weierstrass = t.weierstrassPoints = t.DER = void 0; /*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
            let n = r(86290),
                i = r(95786),
                o = r(95786),
                a = r(21633),
                {
                    bytesToNumberBE: s,
                    hexToBytes: c
                } = i;
            t.DER = {
                Err: class extends Error {
                    constructor(e = "") {
                        super(e)
                    }
                },
                _parseInt(e) {
                    let {
                        Err: r
                    } = t.DER;
                    if (e.length < 2 || 2 !== e[0]) throw new r("Invalid signature integer tag");
                    let n = e[1],
                        i = e.subarray(2, n + 2);
                    if (!n || i.length !== n) throw new r("Invalid signature integer: wrong length");
                    if (128 & i[0]) throw new r("Invalid signature integer: negative");
                    if (0 === i[0] && !(128 & i[1])) throw new r("Invalid signature integer: unnecessary leading zero");
                    return {
                        d: s(i),
                        l: e.subarray(n + 2)
                    }
                },
                toSig(e) {
                    let {
                        Err: r
                    } = t.DER, n = "string" == typeof e ? c(e) : e;
                    if (!(n instanceof Uint8Array)) throw Error("ui8a expected");
                    let i = n.length;
                    if (i < 2 || 48 != n[0]) throw new r("Invalid signature tag");
                    if (n[1] !== i - 2) throw new r("Invalid signature: incorrect length");
                    let {
                        d: o,
                        l: a
                    } = t.DER._parseInt(n.subarray(2)), {
                        d: s,
                        l: u
                    } = t.DER._parseInt(a);
                    if (u.length) throw new r("Invalid signature: left bytes after parsing");
                    return {
                        r: o,
                        s
                    }
                },
                hexFromSig(e) {
                    let slice = e => 8 & Number.parseInt(e[0], 16) ? "00" + e : e,
                        h = e => {
                            let t = e.toString(16);
                            return 1 & t.length ? `0${t}` : t
                        },
                        t = slice(h(e.s)),
                        r = slice(h(e.r)),
                        n = t.length / 2,
                        i = r.length / 2,
                        o = h(n),
                        a = h(i);
                    return `30${h(i+n+4)}02${a}${r}02${o}${t}`
                }
            };
            let u = BigInt(0),
                l = BigInt(1),
                d = BigInt(2),
                f = BigInt(3),
                p = BigInt(4);

            function weierstrassPoints(e) {
                let t = function(e) {
                        let t = (0, a.validateBasic)(e);
                        i.validateObject(t, {
                            a: "field",
                            b: "field"
                        }, {
                            allowedPrivateKeyLengths: "array",
                            wrapPrivateKey: "boolean",
                            isTorsionFree: "function",
                            clearCofactor: "function",
                            allowInfinityPoint: "boolean",
                            fromBytes: "function",
                            toBytes: "function"
                        });
                        let {
                            endo: r,
                            Fp: n,
                            a: o
                        } = t;
                        if (r) {
                            if (!n.eql(o, n.ZERO)) throw Error("Endomorphism can only be defined for Koblitz curves that have a=0");
                            if ("object" != typeof r || "bigint" != typeof r.beta || "function" != typeof r.splitScalar) throw Error("Expected endomorphism with beta: bigint and splitScalar: function")
                        }
                        return Object.freeze({ ...t
                        })
                    }(e),
                    {
                        Fp: r
                    } = t,
                    s = t.toBytes || ((e, t, n) => {
                        let o = t.toAffine();
                        return i.concatBytes(Uint8Array.from([4]), r.toBytes(o.x), r.toBytes(o.y))
                    }),
                    c = t.fromBytes || (e => {
                        let t = e.subarray(1),
                            n = r.fromBytes(t.subarray(0, r.BYTES)),
                            i = r.fromBytes(t.subarray(r.BYTES, 2 * r.BYTES));
                        return {
                            x: n,
                            y: i
                        }
                    });

                function weierstrassEquation(e) {
                    let {
                        a: n,
                        b: i
                    } = t, o = r.sqr(e), a = r.mul(o, e);
                    return r.add(r.add(a, r.mul(e, n)), i)
                }
                if (!r.eql(r.sqr(t.Gy), weierstrassEquation(t.Gx))) throw Error("bad generator point: equation left != right");

                function isWithinCurveOrder(e) {
                    return "bigint" == typeof e && u < e && e < t.n
                }

                function assertGE(e) {
                    if (!isWithinCurveOrder(e)) throw Error("Expected valid bigint: 0 < bigint < curve.n")
                }

                function normPrivateKeyToScalar(e) {
                    let r;
                    let {
                        allowedPrivateKeyLengths: a,
                        nByteLength: s,
                        wrapPrivateKey: c,
                        n: u
                    } = t;
                    if (a && "bigint" != typeof e) {
                        if (e instanceof Uint8Array && (e = i.bytesToHex(e)), "string" != typeof e || !a.includes(e.length)) throw Error("Invalid key");
                        e = e.padStart(2 * s, "0")
                    }
                    try {
                        r = "bigint" == typeof e ? e : i.bytesToNumberBE((0, o.ensureBytes)("private key", e, s))
                    } catch (t) {
                        throw Error(`private key must be ${s} bytes, hex or bigint, not ${typeof e}`)
                    }
                    return c && (r = n.mod(r, u)), assertGE(r), r
                }
                let d = new Map;

                function assertPrjPoint(e) {
                    if (!(e instanceof Point)) throw Error("ProjectivePoint expected")
                }
                let Point = class Point {
                    constructor(e, t, n) {
                        if (this.px = e, this.py = t, this.pz = n, null == e || !r.isValid(e)) throw Error("x required");
                        if (null == t || !r.isValid(t)) throw Error("y required");
                        if (null == n || !r.isValid(n)) throw Error("z required")
                    }
                    static fromAffine(e) {
                        let {
                            x: t,
                            y: n
                        } = e || {};
                        if (!e || !r.isValid(t) || !r.isValid(n)) throw Error("invalid affine point");
                        if (e instanceof Point) throw Error("projective point not allowed");
                        let is0 = e => r.eql(e, r.ZERO);
                        return is0(t) && is0(n) ? Point.ZERO : new Point(t, n, r.ONE)
                    }
                    get x() {
                        return this.toAffine().x
                    }
                    get y() {
                        return this.toAffine().y
                    }
                    static normalizeZ(e) {
                        let t = r.invertBatch(e.map(e => e.pz));
                        return e.map((e, r) => e.toAffine(t[r])).map(Point.fromAffine)
                    }
                    static fromHex(e) {
                        let t = Point.fromAffine(c((0, o.ensureBytes)("pointHex", e)));
                        return t.assertValidity(), t
                    }
                    static fromPrivateKey(e) {
                        return Point.BASE.multiply(normPrivateKeyToScalar(e))
                    }
                    _setWindowSize(e) {
                        this._WINDOW_SIZE = e, d.delete(this)
                    }
                    assertValidity() {
                        if (this.is0()) {
                            if (t.allowInfinityPoint && !r.is0(this.py)) return;
                            throw Error("bad point: ZERO")
                        }
                        let {
                            x: e,
                            y: n
                        } = this.toAffine();
                        if (!r.isValid(e) || !r.isValid(n)) throw Error("bad point: x or y not FE");
                        let i = r.sqr(n),
                            o = weierstrassEquation(e);
                        if (!r.eql(i, o)) throw Error("bad point: equation left != right");
                        if (!this.isTorsionFree()) throw Error("bad point: not in prime-order subgroup")
                    }
                    hasEvenY() {
                        let {
                            y: e
                        } = this.toAffine();
                        if (r.isOdd) return !r.isOdd(e);
                        throw Error("Field doesn't support isOdd")
                    }
                    equals(e) {
                        assertPrjPoint(e);
                        let {
                            px: t,
                            py: n,
                            pz: i
                        } = this, {
                            px: o,
                            py: a,
                            pz: s
                        } = e, c = r.eql(r.mul(t, s), r.mul(o, i)), u = r.eql(r.mul(n, s), r.mul(a, i));
                        return c && u
                    }
                    negate() {
                        return new Point(this.px, r.neg(this.py), this.pz)
                    }
                    double() {
                        let {
                            a: e,
                            b: n
                        } = t, i = r.mul(n, f), {
                            px: o,
                            py: a,
                            pz: s
                        } = this, c = r.ZERO, u = r.ZERO, l = r.ZERO, d = r.mul(o, o), p = r.mul(a, a), y = r.mul(s, s), g = r.mul(o, a);
                        return g = r.add(g, g), l = r.mul(o, s), l = r.add(l, l), c = r.mul(e, l), u = r.mul(i, y), u = r.add(c, u), c = r.sub(p, u), u = r.add(p, u), u = r.mul(c, u), c = r.mul(g, c), l = r.mul(i, l), y = r.mul(e, y), g = r.sub(d, y), g = r.mul(e, g), g = r.add(g, l), l = r.add(d, d), d = r.add(l, d), d = r.add(d, y), d = r.mul(d, g), u = r.add(u, d), y = r.mul(a, s), y = r.add(y, y), d = r.mul(y, g), c = r.sub(c, d), l = r.mul(y, p), l = r.add(l, l), l = r.add(l, l), new Point(c, u, l)
                    }
                    add(e) {
                        assertPrjPoint(e);
                        let {
                            px: n,
                            py: i,
                            pz: o
                        } = this, {
                            px: a,
                            py: s,
                            pz: c
                        } = e, u = r.ZERO, l = r.ZERO, d = r.ZERO, p = t.a, y = r.mul(t.b, f), g = r.mul(n, a), v = r.mul(i, s), E = r.mul(o, c), _ = r.add(n, i), P = r.add(a, s);
                        _ = r.mul(_, P), P = r.add(g, v), _ = r.sub(_, P), P = r.add(n, o);
                        let T = r.add(a, c);
                        return P = r.mul(P, T), T = r.add(g, E), P = r.sub(P, T), T = r.add(i, o), u = r.add(s, c), T = r.mul(T, u), u = r.add(v, E), T = r.sub(T, u), d = r.mul(p, P), u = r.mul(y, E), d = r.add(u, d), u = r.sub(v, d), d = r.add(v, d), l = r.mul(u, d), v = r.add(g, g), v = r.add(v, g), E = r.mul(p, E), P = r.mul(y, P), v = r.add(v, E), E = r.sub(g, E), E = r.mul(p, E), P = r.add(P, E), g = r.mul(v, P), l = r.add(l, g), g = r.mul(T, P), u = r.mul(_, u), u = r.sub(u, g), g = r.mul(_, v), d = r.mul(T, d), d = r.add(d, g), new Point(u, l, d)
                    }
                    subtract(e) {
                        return this.add(e.negate())
                    }
                    is0() {
                        return this.equals(Point.ZERO)
                    }
                    wNAF(e) {
                        return y.wNAFCached(this, d, e, e => {
                            let t = r.invertBatch(e.map(e => e.pz));
                            return e.map((e, r) => e.toAffine(t[r])).map(Point.fromAffine)
                        })
                    }
                    multiplyUnsafe(e) {
                        let n = Point.ZERO;
                        if (e === u) return n;
                        if (assertGE(e), e === l) return this;
                        let {
                            endo: i
                        } = t;
                        if (!i) return y.unsafeLadder(this, e);
                        let {
                            k1neg: o,
                            k1: a,
                            k2neg: s,
                            k2: c
                        } = i.splitScalar(e), d = n, f = n, p = this;
                        for (; a > u || c > u;) a & l && (d = d.add(p)), c & l && (f = f.add(p)), p = p.double(), a >>= l, c >>= l;
                        return o && (d = d.negate()), s && (f = f.negate()), f = new Point(r.mul(f.px, i.beta), f.py, f.pz), d.add(f)
                    }
                    multiply(e) {
                        let n, i;
                        assertGE(e);
                        let {
                            endo: o
                        } = t;
                        if (o) {
                            let {
                                k1neg: t,
                                k1: a,
                                k2neg: s,
                                k2: c
                            } = o.splitScalar(e), {
                                p: u,
                                f: l
                            } = this.wNAF(a), {
                                p: d,
                                f: f
                            } = this.wNAF(c);
                            u = y.constTimeNegate(t, u), d = y.constTimeNegate(s, d), d = new Point(r.mul(d.px, o.beta), d.py, d.pz), n = u.add(d), i = l.add(f)
                        } else {
                            let {
                                p: t,
                                f: r
                            } = this.wNAF(e);
                            n = t, i = r
                        }
                        return Point.normalizeZ([n, i])[0]
                    }
                    multiplyAndAddUnsafe(e, t, r) {
                        let n = Point.BASE,
                            mul = (e, t) => t !== u && t !== l && e.equals(n) ? e.multiply(t) : e.multiplyUnsafe(t),
                            i = mul(this, t).add(mul(e, r));
                        return i.is0() ? void 0 : i
                    }
                    toAffine(e) {
                        let {
                            px: t,
                            py: n,
                            pz: i
                        } = this, o = this.is0();
                        null == e && (e = o ? r.ONE : r.inv(i));
                        let a = r.mul(t, e),
                            s = r.mul(n, e),
                            c = r.mul(i, e);
                        if (o) return {
                            x: r.ZERO,
                            y: r.ZERO
                        };
                        if (!r.eql(c, r.ONE)) throw Error("invZ was invalid");
                        return {
                            x: a,
                            y: s
                        }
                    }
                    isTorsionFree() {
                        let {
                            h: e,
                            isTorsionFree: r
                        } = t;
                        if (e === l) return !0;
                        if (r) return r(Point, this);
                        throw Error("isTorsionFree() has not been declared for the elliptic curve")
                    }
                    clearCofactor() {
                        let {
                            h: e,
                            clearCofactor: r
                        } = t;
                        return e === l ? this : r ? r(Point, this) : this.multiplyUnsafe(t.h)
                    }
                    toRawBytes(e = !0) {
                        return this.assertValidity(), s(Point, this, e)
                    }
                    toHex(e = !0) {
                        return i.bytesToHex(this.toRawBytes(e))
                    }
                };
                Point.BASE = new Point(t.Gx, t.Gy, r.ONE), Point.ZERO = new Point(r.ZERO, r.ONE, r.ZERO);
                let p = t.nBitLength,
                    y = (0, a.wNAF)(Point, t.endo ? Math.ceil(p / 2) : p);
                return {
                    CURVE: t,
                    ProjectivePoint: Point,
                    normPrivateKeyToScalar,
                    weierstrassEquation,
                    isWithinCurveOrder
                }
            }

            function SWUFpSqrtRatio(e, t) {
                let r = e.ORDER,
                    n = u;
                for (let e = r - l; e % d === u; e /= d) n += l;
                let i = n,
                    o = d << i - l - l,
                    a = o * d,
                    s = (r - l) / a,
                    c = (s - l) / d,
                    y = a - l,
                    g = e.pow(t, s),
                    v = e.pow(t, (s + l) / d),
                    sqrtRatio = (t, r) => {
                        let n = g,
                            a = e.pow(r, y),
                            s = e.sqr(a);
                        s = e.mul(s, r);
                        let u = e.mul(t, s);
                        u = e.pow(u, c), u = e.mul(u, a), a = e.mul(u, r), s = e.mul(u, t);
                        let f = e.mul(s, a);
                        u = e.pow(f, o);
                        let p = e.eql(u, e.ONE);
                        a = e.mul(s, v), u = e.mul(f, n), s = e.cmov(a, s, p), f = e.cmov(u, f, p);
                        for (let t = i; t > l; t--) {
                            let r = t - d;
                            r = d << r - l;
                            let i = e.pow(f, r),
                                o = e.eql(i, e.ONE);
                            a = e.mul(s, n), n = e.mul(n, n), i = e.mul(f, n), s = e.cmov(a, s, o), f = e.cmov(i, f, o)
                        }
                        return {
                            isValid: p,
                            value: s
                        }
                    };
                if (e.ORDER % p === f) {
                    let r = (e.ORDER - f) / p,
                        n = e.sqrt(e.neg(t));
                    sqrtRatio = (t, i) => {
                        let o = e.sqr(i),
                            a = e.mul(t, i);
                        o = e.mul(o, a);
                        let s = e.pow(o, r);
                        s = e.mul(s, a);
                        let c = e.mul(s, n),
                            u = e.mul(e.sqr(s), i),
                            l = e.eql(u, t),
                            d = e.cmov(c, s, l);
                        return {
                            isValid: l,
                            value: d
                        }
                    }
                }
                return sqrtRatio
            }
            t.weierstrassPoints = weierstrassPoints, t.weierstrass = function(e) {
                let r = function(e) {
                        let t = (0, a.validateBasic)(e);
                        return i.validateObject(t, {
                            hash: "hash",
                            hmac: "function",
                            randomBytes: "function"
                        }, {
                            bits2int: "function",
                            bits2int_modN: "function",
                            lowS: "boolean"
                        }), Object.freeze({
                            lowS: !0,
                            ...t
                        })
                    }(e),
                    {
                        Fp: s,
                        n: c
                    } = r,
                    d = s.BYTES + 1,
                    f = 2 * s.BYTES + 1;

                function modN(e) {
                    return n.mod(e, c)
                }

                function invN(e) {
                    return n.invert(e, c)
                }
                let {
                    ProjectivePoint: p,
                    normPrivateKeyToScalar: y,
                    weierstrassEquation: g,
                    isWithinCurveOrder: v
                } = weierstrassPoints({ ...r,
                    toBytes(e, t, r) {
                        let n = t.toAffine(),
                            o = s.toBytes(n.x),
                            a = i.concatBytes;
                        return r ? a(Uint8Array.from([t.hasEvenY() ? 2 : 3]), o) : a(Uint8Array.from([4]), o, s.toBytes(n.y))
                    },
                    fromBytes(e) {
                        let t = e.length,
                            r = e[0],
                            n = e.subarray(1);
                        if (t === d && (2 === r || 3 === r)) {
                            let e = i.bytesToNumberBE(n);
                            if (!(u < e && e < s.ORDER)) throw Error("Point is not on curve");
                            let t = g(e),
                                o = s.sqrt(t),
                                a = (o & l) === l;
                            return (1 & r) == 1 !== a && (o = s.neg(o)), {
                                x: e,
                                y: o
                            }
                        }
                        if (t === f && 4 === r) {
                            let e = s.fromBytes(n.subarray(0, s.BYTES)),
                                t = s.fromBytes(n.subarray(s.BYTES, 2 * s.BYTES));
                            return {
                                x: e,
                                y: t
                            }
                        }
                        throw Error(`Point of length ${t} was invalid. Expected ${d} compressed bytes or ${f} uncompressed bytes`)
                    }
                }), numToNByteStr = e => i.bytesToHex(i.numberToBytesBE(e, r.nByteLength));

                function isBiggerThanHalfOrder(e) {
                    let t = c >> l;
                    return e > t
                }
                let slcNum = (e, t, r) => i.bytesToNumberBE(e.slice(t, r));
                let Signature = class Signature {
                    constructor(e, t, r) {
                        this.r = e, this.s = t, this.recovery = r, this.assertValidity()
                    }
                    static fromCompact(e) {
                        let t = r.nByteLength;
                        return e = (0, o.ensureBytes)("compactSignature", e, 2 * t), new Signature(slcNum(e, 0, t), slcNum(e, t, 2 * t))
                    }
                    static fromDER(e) {
                        let {
                            r,
                            s: n
                        } = t.DER.toSig((0, o.ensureBytes)("DER", e));
                        return new Signature(r, n)
                    }
                    assertValidity() {
                        if (!v(this.r)) throw Error("r must be 0 < r < CURVE.n");
                        if (!v(this.s)) throw Error("s must be 0 < s < CURVE.n")
                    }
                    addRecoveryBit(e) {
                        return new Signature(this.r, this.s, e)
                    }
                    recoverPublicKey(e) {
                        let {
                            r: t,
                            s: n,
                            recovery: i
                        } = this, a = _((0, o.ensureBytes)("msgHash", e));
                        if (null == i || ![0, 1, 2, 3].includes(i)) throw Error("recovery id invalid");
                        let c = 2 === i || 3 === i ? t + r.n : t;
                        if (c >= s.ORDER) throw Error("recovery id 2 or 3 invalid");
                        let u = (1 & i) == 0 ? "02" : "03",
                            l = p.fromHex(u + numToNByteStr(c)),
                            d = invN(c),
                            f = modN(-a * d),
                            y = modN(n * d),
                            g = p.BASE.multiplyAndAddUnsafe(l, f, y);
                        if (!g) throw Error("point at infinify");
                        return g.assertValidity(), g
                    }
                    hasHighS() {
                        return isBiggerThanHalfOrder(this.s)
                    }
                    normalizeS() {
                        return this.hasHighS() ? new Signature(this.r, modN(-this.s), this.recovery) : this
                    }
                    toDERRawBytes() {
                        return i.hexToBytes(this.toDERHex())
                    }
                    toDERHex() {
                        return t.DER.hexFromSig({
                            r: this.r,
                            s: this.s
                        })
                    }
                    toCompactRawBytes() {
                        return i.hexToBytes(this.toCompactHex())
                    }
                    toCompactHex() {
                        return numToNByteStr(this.r) + numToNByteStr(this.s)
                    }
                };

                function isProbPub(e) {
                    let t = e instanceof Uint8Array,
                        r = "string" == typeof e,
                        n = (t || r) && e.length;
                    return t ? n === d || n === f : r ? n === 2 * d || n === 2 * f : e instanceof p
                }
                let E = r.bits2int || function(e) {
                        let t = i.bytesToNumberBE(e),
                            n = 8 * e.length - r.nBitLength;
                        return n > 0 ? t >> BigInt(n) : t
                    },
                    _ = r.bits2int_modN || function(e) {
                        return modN(E(e))
                    },
                    P = i.bitMask(r.nBitLength);

                function int2octets(e) {
                    if ("bigint" != typeof e) throw Error("bigint expected");
                    if (!(u <= e && e < P)) throw Error(`bigint expected < 2^${r.nBitLength}`);
                    return i.numberToBytesBE(e, r.nByteLength)
                }
                let T = {
                        lowS: r.lowS,
                        prehash: !1
                    },
                    x = {
                        lowS: r.lowS,
                        prehash: !1
                    };
                return p.BASE._setWindowSize(8), {
                    CURVE: r,
                    getPublicKey: function(e, t = !0) {
                        return p.fromPrivateKey(e).toRawBytes(t)
                    },
                    getSharedSecret: function(e, t, r = !0) {
                        if (isProbPub(e)) throw Error("first arg must be private key");
                        if (!isProbPub(t)) throw Error("second arg must be public key");
                        let n = p.fromHex(t);
                        return n.multiply(y(e)).toRawBytes(r)
                    },
                    sign: function(e, t, n = T) {
                        let {
                            seed: a,
                            k2sig: c
                        } = function(e, t, n = T) {
                            if (["recovered", "canonical"].some(e => e in n)) throw Error("sign() legacy options not supported");
                            let {
                                hash: a,
                                randomBytes: c
                            } = r, {
                                lowS: d,
                                prehash: f,
                                extraEntropy: g
                            } = n;
                            null == d && (d = !0), e = (0, o.ensureBytes)("msgHash", e), f && (e = (0, o.ensureBytes)("prehashed msgHash", a(e)));
                            let P = _(e),
                                x = y(t),
                                A = [int2octets(x), int2octets(P)];
                            if (null != g) {
                                let e = !0 === g ? c(s.BYTES) : g;
                                A.push((0, o.ensureBytes)("extraEntropy", e))
                            }
                            let M = i.concatBytes(...A);
                            return {
                                seed: M,
                                k2sig: function(e) {
                                    let t = E(e);
                                    if (!v(t)) return;
                                    let r = invN(t),
                                        n = p.BASE.multiply(t).toAffine(),
                                        i = modN(n.x);
                                    if (i === u) return;
                                    let o = modN(r * modN(P + i * x));
                                    if (o === u) return;
                                    let a = (n.x === i ? 0 : 2) | Number(n.y & l),
                                        s = o;
                                    return d && isBiggerThanHalfOrder(o) && (s = isBiggerThanHalfOrder(o) ? modN(-o) : o, a ^= 1), new Signature(i, s, a)
                                }
                            }
                        }(e, t, n), d = i.createHmacDrbg(r.hash.outputLen, r.nByteLength, r.hmac);
                        return d(a, c)
                    },
                    verify: function(e, n, i, a = x) {
                        let s, c;
                        if (n = (0, o.ensureBytes)("msgHash", n), i = (0, o.ensureBytes)("publicKey", i), "strict" in a) throw Error("options.strict was renamed to lowS");
                        let {
                            lowS: u,
                            prehash: l
                        } = a;
                        try {
                            if ("string" == typeof e || e instanceof Uint8Array) try {
                                c = Signature.fromDER(e)
                            } catch (r) {
                                if (!(r instanceof t.DER.Err)) throw r;
                                c = Signature.fromCompact(e)
                            } else if ("object" == typeof e && "bigint" == typeof e.r && "bigint" == typeof e.s) {
                                let {
                                    r: t,
                                    s: r
                                } = e;
                                c = new Signature(t, r)
                            } else throw Error("PARSE");
                            s = p.fromHex(i)
                        } catch (e) {
                            if ("PARSE" === e.message) throw Error("signature must be Signature instance, Uint8Array or hex string");
                            return !1
                        }
                        if (u && c.hasHighS()) return !1;
                        l && (n = r.hash(n));
                        let {
                            r: d,
                            s: f
                        } = c, y = _(n), g = invN(f), v = modN(y * g), E = modN(d * g), P = p.BASE.multiplyAndAddUnsafe(s, v, E) ? .toAffine();
                        if (!P) return !1;
                        let T = modN(P.x);
                        return T === d
                    },
                    ProjectivePoint: p,
                    Signature,
                    utils: {
                        isValidPrivateKey(e) {
                            try {
                                return y(e), !0
                            } catch (e) {
                                return !1
                            }
                        },
                        normPrivateKeyToScalar: y,
                        randomPrivateKey: () => {
                            let e = n.getMinHashLength(r.n);
                            return n.mapHashToField(r.randomBytes(e), r.n)
                        },
                        precompute: (e = 8, t = p.BASE) => (t._setWindowSize(e), t.multiply(BigInt(3)), t)
                    }
                }
            }, t.SWUFpSqrtRatio = SWUFpSqrtRatio, t.mapToCurveSimpleSWU = function(e, t) {
                if (n.validateField(e), !e.isValid(t.A) || !e.isValid(t.B) || !e.isValid(t.Z)) throw Error("mapToCurveSimpleSWU: invalid opts");
                let r = SWUFpSqrtRatio(e, t.Z);
                if (!e.isOdd) throw Error("Fp.isOdd is not implemented!");
                return n => {
                    let i, o, a, s, c, u, l, d;
                    i = e.sqr(n), i = e.mul(i, t.Z), o = e.sqr(i), o = e.add(o, i), a = e.add(o, e.ONE), a = e.mul(a, t.B), s = e.cmov(t.Z, e.neg(o), !e.eql(o, e.ZERO)), s = e.mul(s, t.A), o = e.sqr(a), u = e.sqr(s), c = e.mul(u, t.A), o = e.add(o, c), o = e.mul(o, a), u = e.mul(u, s), c = e.mul(u, t.B), o = e.add(o, c), l = e.mul(i, a);
                    let {
                        isValid: f,
                        value: p
                    } = r(o, u);
                    d = e.mul(i, n), d = e.mul(d, p), l = e.cmov(l, a, f), d = e.cmov(d, p, f);
                    let y = e.isOdd(n) === e.isOdd(d);
                    return d = e.cmov(e.neg(d), d, y), {
                        x: l = e.div(l, s),
                        y: d
                    }
                }
            }
        },
        59304: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.encodeToCurve = t.hashToCurve = t.schnorr = t.secp256k1 = void 0; /*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
            let n = r(70035),
                i = r(17452),
                o = r(86290),
                a = r(14192),
                s = r(95786),
                c = r(38270),
                u = r(7783),
                l = BigInt("0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f"),
                d = BigInt("0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141"),
                f = BigInt(1),
                p = BigInt(2),
                divNearest = (e, t) => (e + t / p) / t;

            function sqrtMod(e) {
                let t = BigInt(3),
                    r = BigInt(6),
                    n = BigInt(11),
                    i = BigInt(22),
                    a = BigInt(23),
                    s = BigInt(44),
                    c = BigInt(88),
                    u = e * e * e % l,
                    d = u * u * e % l,
                    f = (0, o.pow2)(d, t, l) * d % l,
                    g = (0, o.pow2)(f, t, l) * d % l,
                    v = (0, o.pow2)(g, p, l) * u % l,
                    E = (0, o.pow2)(v, n, l) * v % l,
                    _ = (0, o.pow2)(E, i, l) * E % l,
                    P = (0, o.pow2)(_, s, l) * _ % l,
                    T = (0, o.pow2)(P, c, l) * P % l,
                    x = (0, o.pow2)(T, s, l) * _ % l,
                    A = (0, o.pow2)(x, t, l) * d % l,
                    M = (0, o.pow2)(A, a, l) * E % l,
                    B = (0, o.pow2)(M, r, l) * u % l,
                    F = (0, o.pow2)(B, p, l);
                if (!y.eql(y.sqr(F), e)) throw Error("Cannot find square root");
                return F
            }
            let y = (0, o.Field)(l, void 0, void 0, {
                sqrt: sqrtMod
            });
            t.secp256k1 = (0, u.createCurve)({
                a: BigInt(0),
                b: BigInt(7),
                Fp: y,
                n: d,
                Gx: BigInt("55066263022277343669578718895168534326250603453777594175500187360389116729240"),
                Gy: BigInt("32670510020758816978083085130507043184471273380659243275938904335757337482424"),
                h: BigInt(1),
                lowS: !0,
                endo: {
                    beta: BigInt("0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee"),
                    splitScalar: e => {
                        let t = BigInt("0x3086d221a7d46bcde86c90e49284eb15"),
                            r = -f * BigInt("0xe4437ed6010e88286f547fa90abfe4c3"),
                            n = BigInt("0x114ca50f7a8e2f3f657c1108d9d44cfd8"),
                            i = BigInt("0x100000000000000000000000000000000"),
                            a = divNearest(t * e, d),
                            s = divNearest(-r * e, d),
                            c = (0, o.mod)(e - a * t - s * n, d),
                            u = (0, o.mod)(-a * r - s * t, d),
                            l = c > i,
                            p = u > i;
                        if (l && (c = d - c), p && (u = d - u), c > i || u > i) throw Error("splitScalar: Endomorphism failed, k=" + e);
                        return {
                            k1neg: l,
                            k1: c,
                            k2neg: p,
                            k2: u
                        }
                    }
                }
            }, n.sha256);
            let g = BigInt(0),
                fe = e => "bigint" == typeof e && g < e && e < l,
                ge = e => "bigint" == typeof e && g < e && e < d,
                v = {};

            function taggedHash(e, ...t) {
                let r = v[e];
                if (void 0 === r) {
                    let t = (0, n.sha256)(Uint8Array.from(e, e => e.charCodeAt(0)));
                    r = (0, s.concatBytes)(t, t), v[e] = r
                }
                return (0, n.sha256)((0, s.concatBytes)(r, ...t))
            }
            let pointToBytes = e => e.toRawBytes(!0).slice(1),
                numTo32b = e => (0, s.numberToBytesBE)(e, 32),
                modP = e => (0, o.mod)(e, l),
                modN = e => (0, o.mod)(e, d),
                E = t.secp256k1.ProjectivePoint,
                GmulAdd = (e, t, r) => E.BASE.multiplyAndAddUnsafe(e, t, r);

            function schnorrGetExtPubKey(e) {
                let r = t.secp256k1.utils.normPrivateKeyToScalar(e),
                    n = E.fromPrivateKey(r),
                    i = n.hasEvenY() ? r : modN(-r);
                return {
                    scalar: i,
                    bytes: pointToBytes(n)
                }
            }

            function lift_x(e) {
                if (!fe(e)) throw Error("bad x: need 0 < x < p");
                let t = modP(e * e),
                    r = modP(t * e + BigInt(7)),
                    n = sqrtMod(r);
                n % p !== g && (n = modP(-n));
                let i = new E(e, n, f);
                return i.assertValidity(), i
            }

            function challenge(...e) {
                return modN((0, s.bytesToNumberBE)(taggedHash("BIP0340/challenge", ...e)))
            }

            function schnorrVerify(e, t, r) {
                let n = (0, s.ensureBytes)("signature", e, 64),
                    i = (0, s.ensureBytes)("message", t),
                    o = (0, s.ensureBytes)("publicKey", r, 32);
                try {
                    let e = lift_x((0, s.bytesToNumberBE)(o)),
                        t = (0, s.bytesToNumberBE)(n.subarray(0, 32));
                    if (!fe(t)) return !1;
                    let r = (0, s.bytesToNumberBE)(n.subarray(32, 64));
                    if (!ge(r)) return !1;
                    let a = challenge(numTo32b(t), pointToBytes(e), i),
                        c = GmulAdd(e, r, modN(-a));
                    if (!c || !c.hasEvenY() || c.toAffine().x !== t) return !1;
                    return !0
                } catch (e) {
                    return !1
                }
            }
            t.schnorr = {
                getPublicKey: function(e) {
                    return schnorrGetExtPubKey(e).bytes
                },
                sign: function(e, t, r = (0, i.randomBytes)(32)) {
                    let n = (0, s.ensureBytes)("message", e),
                        {
                            bytes: o,
                            scalar: a
                        } = schnorrGetExtPubKey(t),
                        c = (0, s.ensureBytes)("auxRand", r, 32),
                        u = numTo32b(a ^ (0, s.bytesToNumberBE)(taggedHash("BIP0340/aux", c))),
                        l = taggedHash("BIP0340/nonce", u, o, n),
                        d = modN((0, s.bytesToNumberBE)(l));
                    if (d === g) throw Error("sign failed: k is zero");
                    let {
                        bytes: f,
                        scalar: p
                    } = schnorrGetExtPubKey(d), y = challenge(f, o, n), v = new Uint8Array(64);
                    if (v.set(f, 0), v.set(numTo32b(modN(p + y * a)), 32), !schnorrVerify(v, n, o)) throw Error("sign: Invalid signature produced");
                    return v
                },
                verify: schnorrVerify,
                utils: {
                    randomPrivateKey: t.secp256k1.utils.randomPrivateKey,
                    lift_x,
                    pointToBytes,
                    numberToBytesBE: s.numberToBytesBE,
                    bytesToNumberBE: s.bytesToNumberBE,
                    taggedHash,
                    mod: o.mod
                }
            };
            let _ = (0, c.isogenyMap)(y, [
                    ["0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa8c7", "0x7d3d4c80bc321d5b9f315cea7fd44c5d595d2fc0bf63b92dfff1044f17c6581", "0x534c328d23f234e6e2a413deca25caece4506144037c40314ecbd0b53d9dd262", "0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa88c"],
                    ["0xd35771193d94918a9ca34ccbb7b640dd86cd409542f8487d9fe6b745781eb49b", "0xedadc6f64383dc1df7c4b2d51b54225406d36b641f5e41bbc52a56612a8c6d14", "0x0000000000000000000000000000000000000000000000000000000000000001"],
                    ["0x4bda12f684bda12f684bda12f684bda12f684bda12f684bda12f684b8e38e23c", "0xc75e0c32d5cb7c0fa9d0a54b12a0a6d5647ab046d686da6fdffc90fc201d71a3", "0x29a6194691f91a73715209ef6512e576722830a201be2018a765e85a9ecee931", "0x2f684bda12f684bda12f684bda12f684bda12f684bda12f684bda12f38e38d84"],
                    ["0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffff93b", "0x7a06534bb8bdb49fd5e9e6632722c2989467c1bfc8e8d978dfb425d2685c2573", "0x6484aa716545ca2cf3a70c3fa8fe337e0a3d21162f0d6299a7bf8192bfd2a76f", "0x0000000000000000000000000000000000000000000000000000000000000001"]
                ].map(e => e.map(e => BigInt(e)))),
                P = (0, a.mapToCurveSimpleSWU)(y, {
                    A: BigInt("0x3f8731abdd661adca08a5558f0f5d272e953d363cb6f0e5d405447c01a444533"),
                    B: BigInt("1771"),
                    Z: y.create(BigInt("-11"))
                }),
                T = (0, c.createHasher)(t.secp256k1.ProjectivePoint, e => {
                    let {
                        x: t,
                        y: r
                    } = P(y.create(e[0]));
                    return _(t, r)
                }, {
                    DST: "secp256k1_XMD:SHA-256_SSWU_RO_",
                    encodeDST: "secp256k1_XMD:SHA-256_SSWU_NU_",
                    p: y.ORDER,
                    m: 1,
                    k: 128,
                    expand: "xmd",
                    hash: n.sha256
                });
            t.hashToCurve = T.hashToCurve, t.encodeToCurve = T.encodeToCurve
        },
        26354: function(e, t) {
            "use strict";

            function number(e) {
                if (!Number.isSafeInteger(e) || e < 0) throw Error(`Wrong positive integer: ${e}`)
            }

            function bool(e) {
                if ("boolean" != typeof e) throw Error(`Expected boolean, not ${e}`)
            }

            function bytes(e, ...t) {
                if (!(e instanceof Uint8Array)) throw Error("Expected Uint8Array");
                if (t.length > 0 && !t.includes(e.length)) throw Error(`Expected Uint8Array of length ${t}, not of length=${e.length}`)
            }

            function hash(e) {
                if ("function" != typeof e || "function" != typeof e.create) throw Error("Hash should be wrapped by utils.wrapConstructor");
                number(e.outputLen), number(e.blockLen)
            }

            function exists(e, t = !0) {
                if (e.destroyed) throw Error("Hash instance has been destroyed");
                if (t && e.finished) throw Error("Hash#digest() has already been called")
            }

            function output(e, t) {
                bytes(e);
                let r = t.outputLen;
                if (e.length < r) throw Error(`digestInto() expects output buffer of length at least ${r}`)
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.output = t.exists = t.hash = t.bytes = t.bool = t.number = void 0, t.number = number, t.bool = bool, t.bytes = bytes, t.hash = hash, t.exists = exists, t.output = output, t.default = {
                number,
                bool,
                bytes,
                hash,
                exists,
                output
            }
        },
        93816: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.SHA2 = void 0;
            let n = r(26354),
                i = r(17452);
            let SHA2 = class SHA2 extends i.Hash {
                constructor(e, t, r, n) {
                    super(), this.blockLen = e, this.outputLen = t, this.padOffset = r, this.isLE = n, this.finished = !1, this.length = 0, this.pos = 0, this.destroyed = !1, this.buffer = new Uint8Array(e), this.view = (0, i.createView)(this.buffer)
                }
                update(e) {
                    (0, n.exists)(this);
                    let {
                        view: t,
                        buffer: r,
                        blockLen: o
                    } = this;
                    e = (0, i.toBytes)(e);
                    let a = e.length;
                    for (let n = 0; n < a;) {
                        let s = Math.min(o - this.pos, a - n);
                        if (s === o) {
                            let t = (0, i.createView)(e);
                            for (; o <= a - n; n += o) this.process(t, n);
                            continue
                        }
                        r.set(e.subarray(n, n + s), this.pos), this.pos += s, n += s, this.pos === o && (this.process(t, 0), this.pos = 0)
                    }
                    return this.length += e.length, this.roundClean(), this
                }
                digestInto(e) {
                    (0, n.exists)(this), (0, n.output)(e, this), this.finished = !0;
                    let {
                        buffer: t,
                        view: r,
                        blockLen: o,
                        isLE: a
                    } = this, {
                        pos: s
                    } = this;
                    t[s++] = 128, this.buffer.subarray(s).fill(0), this.padOffset > o - s && (this.process(r, 0), s = 0);
                    for (let e = s; e < o; e++) t[e] = 0;
                    ! function(e, t, r, n) {
                        if ("function" == typeof e.setBigUint64) return e.setBigUint64(t, r, n);
                        let i = BigInt(32),
                            o = BigInt(4294967295),
                            a = Number(r >> i & o),
                            s = Number(r & o),
                            c = n ? 4 : 0,
                            u = n ? 0 : 4;
                        e.setUint32(t + c, a, n), e.setUint32(t + u, s, n)
                    }(r, o - 8, BigInt(8 * this.length), a), this.process(r, 0);
                    let c = (0, i.createView)(e),
                        u = this.outputLen;
                    if (u % 4) throw Error("_sha2: outputLen should be aligned to 32bit");
                    let l = u / 4,
                        d = this.get();
                    if (l > d.length) throw Error("_sha2: outputLen bigger than state");
                    for (let e = 0; e < l; e++) c.setUint32(4 * e, d[e], a)
                }
                digest() {
                    let {
                        buffer: e,
                        outputLen: t
                    } = this;
                    this.digestInto(e);
                    let r = e.slice(0, t);
                    return this.destroy(), r
                }
                _cloneInto(e) {
                    e || (e = new this.constructor), e.set(...this.get());
                    let {
                        blockLen: t,
                        buffer: r,
                        length: n,
                        finished: i,
                        destroyed: o,
                        pos: a
                    } = this;
                    return e.length = n, e.pos = a, e.finished = i, e.destroyed = o, n % t && e.buffer.set(r), e
                }
            };
            t.SHA2 = SHA2
        },
        80612: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.add5L = t.add5H = t.add4H = t.add4L = t.add3H = t.add3L = t.add = t.rotlBL = t.rotlBH = t.rotlSL = t.rotlSH = t.rotr32L = t.rotr32H = t.rotrBL = t.rotrBH = t.rotrSL = t.rotrSH = t.shrSL = t.shrSH = t.toBig = t.split = t.fromBig = void 0;
            let r = BigInt(4294967296 - 1),
                n = BigInt(32);

            function fromBig(e, t = !1) {
                return t ? {
                    h: Number(e & r),
                    l: Number(e >> n & r)
                } : {
                    h: 0 | Number(e >> n & r),
                    l: 0 | Number(e & r)
                }
            }

            function split(e, t = !1) {
                let r = new Uint32Array(e.length),
                    n = new Uint32Array(e.length);
                for (let i = 0; i < e.length; i++) {
                    let {
                        h: o,
                        l: a
                    } = fromBig(e[i], t);
                    [r[i], n[i]] = [o, a]
                }
                return [r, n]
            }
            t.fromBig = fromBig, t.split = split;
            let toBig = (e, t) => BigInt(e >>> 0) << n | BigInt(t >>> 0);
            t.toBig = toBig;
            let shrSH = (e, t, r) => e >>> r;
            t.shrSH = shrSH;
            let shrSL = (e, t, r) => e << 32 - r | t >>> r;
            t.shrSL = shrSL;
            let rotrSH = (e, t, r) => e >>> r | t << 32 - r;
            t.rotrSH = rotrSH;
            let rotrSL = (e, t, r) => e << 32 - r | t >>> r;
            t.rotrSL = rotrSL;
            let rotrBH = (e, t, r) => e << 64 - r | t >>> r - 32;
            t.rotrBH = rotrBH;
            let rotrBL = (e, t, r) => e >>> r - 32 | t << 64 - r;
            t.rotrBL = rotrBL;
            let rotr32H = (e, t) => t;
            t.rotr32H = rotr32H;
            let rotr32L = (e, t) => e;
            t.rotr32L = rotr32L;
            let rotlSH = (e, t, r) => e << r | t >>> 32 - r;
            t.rotlSH = rotlSH;
            let rotlSL = (e, t, r) => t << r | e >>> 32 - r;
            t.rotlSL = rotlSL;
            let rotlBH = (e, t, r) => t << r - 32 | e >>> 64 - r;
            t.rotlBH = rotlBH;
            let rotlBL = (e, t, r) => e << r - 32 | t >>> 64 - r;

            function add(e, t, r, n) {
                let i = (t >>> 0) + (n >>> 0);
                return {
                    h: e + r + (i / 4294967296 | 0) | 0,
                    l: 0 | i
                }
            }
            t.rotlBL = rotlBL, t.add = add;
            let add3L = (e, t, r) => (e >>> 0) + (t >>> 0) + (r >>> 0);
            t.add3L = add3L;
            let add3H = (e, t, r, n) => t + r + n + (e / 4294967296 | 0) | 0;
            t.add3H = add3H;
            let add4L = (e, t, r, n) => (e >>> 0) + (t >>> 0) + (r >>> 0) + (n >>> 0);
            t.add4L = add4L;
            let add4H = (e, t, r, n, i) => t + r + n + i + (e / 4294967296 | 0) | 0;
            t.add4H = add4H;
            let add5L = (e, t, r, n, i) => (e >>> 0) + (t >>> 0) + (r >>> 0) + (n >>> 0) + (i >>> 0);
            t.add5L = add5L;
            let add5H = (e, t, r, n, i, o) => t + r + n + i + o + (e / 4294967296 | 0) | 0;
            t.add5H = add5H, t.default = {
                fromBig,
                split,
                toBig,
                shrSH,
                shrSL,
                rotrSH,
                rotrSL,
                rotrBH,
                rotrBL,
                rotr32H,
                rotr32L,
                rotlSH,
                rotlSL,
                rotlBH,
                rotlBL,
                add,
                add3L,
                add3H,
                add4L,
                add4H,
                add5H,
                add5L
            }
        },
        24545: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.crypto = void 0, t.crypto = "object" == typeof globalThis && "crypto" in globalThis ? globalThis.crypto : void 0
        },
        34374: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.hmac = t.HMAC = void 0;
            let n = r(26354),
                i = r(17452);
            let HMAC = class HMAC extends i.Hash {
                constructor(e, t) {
                    super(), this.finished = !1, this.destroyed = !1, (0, n.hash)(e);
                    let r = (0, i.toBytes)(t);
                    if (this.iHash = e.create(), "function" != typeof this.iHash.update) throw Error("Expected instance of class which extends utils.Hash");
                    this.blockLen = this.iHash.blockLen, this.outputLen = this.iHash.outputLen;
                    let o = this.blockLen,
                        a = new Uint8Array(o);
                    a.set(r.length > o ? e.create().update(r).digest() : r);
                    for (let e = 0; e < a.length; e++) a[e] ^= 54;
                    this.iHash.update(a), this.oHash = e.create();
                    for (let e = 0; e < a.length; e++) a[e] ^= 106;
                    this.oHash.update(a), a.fill(0)
                }
                update(e) {
                    return (0, n.exists)(this), this.iHash.update(e), this
                }
                digestInto(e) {
                    (0, n.exists)(this), (0, n.bytes)(e, this.outputLen), this.finished = !0, this.iHash.digestInto(e), this.oHash.update(e), this.oHash.digestInto(e), this.destroy()
                }
                digest() {
                    let e = new Uint8Array(this.oHash.outputLen);
                    return this.digestInto(e), e
                }
                _cloneInto(e) {
                    e || (e = Object.create(Object.getPrototypeOf(this), {}));
                    let {
                        oHash: t,
                        iHash: r,
                        finished: n,
                        destroyed: i,
                        blockLen: o,
                        outputLen: a
                    } = this;
                    return e.finished = n, e.destroyed = i, e.blockLen = o, e.outputLen = a, e.oHash = t._cloneInto(e.oHash), e.iHash = r._cloneInto(e.iHash), e
                }
                destroy() {
                    this.destroyed = !0, this.oHash.destroy(), this.iHash.destroy()
                }
            };
            t.HMAC = HMAC, t.hmac = (e, t, r) => new HMAC(e, t).update(r).digest(), t.hmac.create = (e, t) => new HMAC(e, t)
        },
        70035: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.sha224 = t.sha256 = void 0;
            let n = r(93816),
                i = r(17452),
                Chi = (e, t, r) => e & t ^ ~e & r,
                Maj = (e, t, r) => e & t ^ e & r ^ t & r,
                o = new Uint32Array([1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298]),
                a = new Uint32Array([1779033703, 3144134277, 1013904242, 2773480762, 1359893119, 2600822924, 528734635, 1541459225]),
                s = new Uint32Array(64);
            let SHA256 = class SHA256 extends n.SHA2 {
                constructor() {
                    super(64, 32, 8, !1), this.A = 0 | a[0], this.B = 0 | a[1], this.C = 0 | a[2], this.D = 0 | a[3], this.E = 0 | a[4], this.F = 0 | a[5], this.G = 0 | a[6], this.H = 0 | a[7]
                }
                get() {
                    let {
                        A: e,
                        B: t,
                        C: r,
                        D: n,
                        E: i,
                        F: o,
                        G: a,
                        H: s
                    } = this;
                    return [e, t, r, n, i, o, a, s]
                }
                set(e, t, r, n, i, o, a, s) {
                    this.A = 0 | e, this.B = 0 | t, this.C = 0 | r, this.D = 0 | n, this.E = 0 | i, this.F = 0 | o, this.G = 0 | a, this.H = 0 | s
                }
                process(e, t) {
                    for (let r = 0; r < 16; r++, t += 4) s[r] = e.getUint32(t, !1);
                    for (let e = 16; e < 64; e++) {
                        let t = s[e - 15],
                            r = s[e - 2],
                            n = (0, i.rotr)(t, 7) ^ (0, i.rotr)(t, 18) ^ t >>> 3,
                            o = (0, i.rotr)(r, 17) ^ (0, i.rotr)(r, 19) ^ r >>> 10;
                        s[e] = o + s[e - 7] + n + s[e - 16] | 0
                    }
                    let {
                        A: r,
                        B: n,
                        C: a,
                        D: c,
                        E: u,
                        F: l,
                        G: d,
                        H: f
                    } = this;
                    for (let e = 0; e < 64; e++) {
                        let t = (0, i.rotr)(u, 6) ^ (0, i.rotr)(u, 11) ^ (0, i.rotr)(u, 25),
                            p = f + t + Chi(u, l, d) + o[e] + s[e] | 0,
                            y = (0, i.rotr)(r, 2) ^ (0, i.rotr)(r, 13) ^ (0, i.rotr)(r, 22),
                            g = y + Maj(r, n, a) | 0;
                        f = d, d = l, l = u, u = c + p | 0, c = a, a = n, n = r, r = p + g | 0
                    }
                    r = r + this.A | 0, n = n + this.B | 0, a = a + this.C | 0, c = c + this.D | 0, u = u + this.E | 0, l = l + this.F | 0, d = d + this.G | 0, f = f + this.H | 0, this.set(r, n, a, c, u, l, d, f)
                }
                roundClean() {
                    s.fill(0)
                }
                destroy() {
                    this.set(0, 0, 0, 0, 0, 0, 0, 0), this.buffer.fill(0)
                }
            };
            let SHA224 = class SHA224 extends SHA256 {
                constructor() {
                    super(), this.A = -1056596264, this.B = 914150663, this.C = 812702999, this.D = -150054599, this.E = -4191439, this.F = 1750603025, this.G = 1694076839, this.H = -1090891868, this.outputLen = 28
                }
            };
            t.sha256 = (0, i.wrapConstructor)(() => new SHA256), t.sha224 = (0, i.wrapConstructor)(() => new SHA224)
        },
        29749: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.shake256 = t.shake128 = t.keccak_512 = t.keccak_384 = t.keccak_256 = t.keccak_224 = t.sha3_512 = t.sha3_384 = t.sha3_256 = t.sha3_224 = t.Keccak = t.keccakP = void 0;
            let n = r(26354),
                i = r(80612),
                o = r(17452),
                [a, s, c] = [
                    [],
                    [],
                    []
                ],
                u = BigInt(0),
                l = BigInt(1),
                d = BigInt(2),
                f = BigInt(7),
                p = BigInt(256),
                y = BigInt(113);
            for (let e = 0, t = l, r = 1, n = 0; e < 24; e++) {
                [r, n] = [n, (2 * r + 3 * n) % 5], a.push(2 * (5 * n + r)), s.push((e + 1) * (e + 2) / 2 % 64);
                let i = u;
                for (let e = 0; e < 7; e++)(t = (t << l ^ (t >> f) * y) % p) & d && (i ^= l << (l << BigInt(e)) - l);
                c.push(i)
            }
            let [g, v] = (0, i.split)(c, !0), rotlH = (e, t, r) => r > 32 ? (0, i.rotlBH)(e, t, r) : (0, i.rotlSH)(e, t, r), rotlL = (e, t, r) => r > 32 ? (0, i.rotlBL)(e, t, r) : (0, i.rotlSL)(e, t, r);

            function keccakP(e, t = 24) {
                let r = new Uint32Array(10);
                for (let n = 24 - t; n < 24; n++) {
                    for (let t = 0; t < 10; t++) r[t] = e[t] ^ e[t + 10] ^ e[t + 20] ^ e[t + 30] ^ e[t + 40];
                    for (let t = 0; t < 10; t += 2) {
                        let n = (t + 8) % 10,
                            i = (t + 2) % 10,
                            o = r[i],
                            a = r[i + 1],
                            s = rotlH(o, a, 1) ^ r[n],
                            c = rotlL(o, a, 1) ^ r[n + 1];
                        for (let r = 0; r < 50; r += 10) e[t + r] ^= s, e[t + r + 1] ^= c
                    }
                    let t = e[2],
                        i = e[3];
                    for (let r = 0; r < 24; r++) {
                        let n = s[r],
                            o = rotlH(t, i, n),
                            c = rotlL(t, i, n),
                            u = a[r];
                        t = e[u], i = e[u + 1], e[u] = o, e[u + 1] = c
                    }
                    for (let t = 0; t < 50; t += 10) {
                        for (let n = 0; n < 10; n++) r[n] = e[t + n];
                        for (let n = 0; n < 10; n++) e[t + n] ^= ~r[(n + 2) % 10] & r[(n + 4) % 10]
                    }
                    e[0] ^= g[n], e[1] ^= v[n]
                }
                r.fill(0)
            }
            t.keccakP = keccakP;
            let Keccak = class Keccak extends o.Hash {
                constructor(e, t, r, i = !1, a = 24) {
                    if (super(), this.blockLen = e, this.suffix = t, this.outputLen = r, this.enableXOF = i, this.rounds = a, this.pos = 0, this.posOut = 0, this.finished = !1, this.destroyed = !1, (0, n.number)(r), 0 >= this.blockLen || this.blockLen >= 200) throw Error("Sha3 supports only keccak-f1600 function");
                    this.state = new Uint8Array(200), this.state32 = (0, o.u32)(this.state)
                }
                keccak() {
                    keccakP(this.state32, this.rounds), this.posOut = 0, this.pos = 0
                }
                update(e) {
                    (0, n.exists)(this);
                    let {
                        blockLen: t,
                        state: r
                    } = this;
                    e = (0, o.toBytes)(e);
                    let i = e.length;
                    for (let n = 0; n < i;) {
                        let o = Math.min(t - this.pos, i - n);
                        for (let t = 0; t < o; t++) r[this.pos++] ^= e[n++];
                        this.pos === t && this.keccak()
                    }
                    return this
                }
                finish() {
                    if (this.finished) return;
                    this.finished = !0;
                    let {
                        state: e,
                        suffix: t,
                        pos: r,
                        blockLen: n
                    } = this;
                    e[r] ^= t, (128 & t) != 0 && r === n - 1 && this.keccak(), e[n - 1] ^= 128, this.keccak()
                }
                writeInto(e) {
                    (0, n.exists)(this, !1), (0, n.bytes)(e), this.finish();
                    let t = this.state,
                        {
                            blockLen: r
                        } = this;
                    for (let n = 0, i = e.length; n < i;) {
                        this.posOut >= r && this.keccak();
                        let o = Math.min(r - this.posOut, i - n);
                        e.set(t.subarray(this.posOut, this.posOut + o), n), this.posOut += o, n += o
                    }
                    return e
                }
                xofInto(e) {
                    if (!this.enableXOF) throw Error("XOF is not possible for this instance");
                    return this.writeInto(e)
                }
                xof(e) {
                    return (0, n.number)(e), this.xofInto(new Uint8Array(e))
                }
                digestInto(e) {
                    if ((0, n.output)(e, this), this.finished) throw Error("digest() was already called");
                    return this.writeInto(e), this.destroy(), e
                }
                digest() {
                    return this.digestInto(new Uint8Array(this.outputLen))
                }
                destroy() {
                    this.destroyed = !0, this.state.fill(0)
                }
                _cloneInto(e) {
                    let {
                        blockLen: t,
                        suffix: r,
                        outputLen: n,
                        rounds: i,
                        enableXOF: o
                    } = this;
                    return e || (e = new Keccak(t, r, n, o, i)), e.state32.set(this.state32), e.pos = this.pos, e.posOut = this.posOut, e.finished = this.finished, e.rounds = i, e.suffix = r, e.outputLen = n, e.enableXOF = o, e.destroyed = this.destroyed, e
                }
            };
            t.Keccak = Keccak;
            let gen = (e, t, r) => (0, o.wrapConstructor)(() => new Keccak(t, e, r));
            t.sha3_224 = gen(6, 144, 28), t.sha3_256 = gen(6, 136, 32), t.sha3_384 = gen(6, 104, 48), t.sha3_512 = gen(6, 72, 64), t.keccak_224 = gen(1, 144, 28), t.keccak_256 = gen(1, 136, 32), t.keccak_384 = gen(1, 104, 48), t.keccak_512 = gen(1, 72, 64);
            let genShake = (e, t, r) => (0, o.wrapXOFConstructorWithOpts)((n = {}) => new Keccak(t, e, void 0 === n.dkLen ? r : n.dkLen, !0));
            t.shake128 = genShake(31, 168, 16), t.shake256 = genShake(31, 136, 32)
        },
        17452: function(e, t, r) {
            "use strict"; /*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.randomBytes = t.wrapXOFConstructorWithOpts = t.wrapConstructorWithOpts = t.wrapConstructor = t.checkOpts = t.Hash = t.concatBytes = t.toBytes = t.utf8ToBytes = t.asyncLoop = t.nextTick = t.hexToBytes = t.bytesToHex = t.isLE = t.rotr = t.createView = t.u32 = t.u8 = void 0;
            let n = r(24545),
                u8a = e => e instanceof Uint8Array;
            if (t.u8 = e => new Uint8Array(e.buffer, e.byteOffset, e.byteLength), t.u32 = e => new Uint32Array(e.buffer, e.byteOffset, Math.floor(e.byteLength / 4)), t.createView = e => new DataView(e.buffer, e.byteOffset, e.byteLength), t.rotr = (e, t) => e << 32 - t | e >>> t, t.isLE = 68 === new Uint8Array(new Uint32Array([287454020]).buffer)[0], !t.isLE) throw Error("Non little-endian hardware is not supported");
            let i = Array.from({
                length: 256
            }, (e, t) => t.toString(16).padStart(2, "0"));
            t.bytesToHex = function(e) {
                if (!u8a(e)) throw Error("Uint8Array expected");
                let t = "";
                for (let r = 0; r < e.length; r++) t += i[e[r]];
                return t
            }, t.hexToBytes = function(e) {
                if ("string" != typeof e) throw Error("hex string expected, got " + typeof e);
                let t = e.length;
                if (t % 2) throw Error("padded hex string expected, got unpadded hex of length " + t);
                let r = new Uint8Array(t / 2);
                for (let t = 0; t < r.length; t++) {
                    let n = 2 * t,
                        i = e.slice(n, n + 2),
                        o = Number.parseInt(i, 16);
                    if (Number.isNaN(o) || o < 0) throw Error("Invalid byte sequence");
                    r[t] = o
                }
                return r
            };
            let nextTick = async () => {};
            async function asyncLoop(e, r, n) {
                let i = Date.now();
                for (let o = 0; o < e; o++) {
                    n(o);
                    let e = Date.now() - i;
                    e >= 0 && e < r || (await (0, t.nextTick)(), i += e)
                }
            }

            function utf8ToBytes(e) {
                if ("string" != typeof e) throw Error(`utf8ToBytes expected string, got ${typeof e}`);
                return new Uint8Array(new TextEncoder().encode(e))
            }

            function toBytes(e) {
                if ("string" == typeof e && (e = utf8ToBytes(e)), !u8a(e)) throw Error(`expected Uint8Array, got ${typeof e}`);
                return e
            }
            t.nextTick = nextTick, t.asyncLoop = asyncLoop, t.utf8ToBytes = utf8ToBytes, t.toBytes = toBytes, t.concatBytes = function(...e) {
                let t = new Uint8Array(e.reduce((e, t) => e + t.length, 0)),
                    r = 0;
                return e.forEach(e => {
                    if (!u8a(e)) throw Error("Uint8Array expected");
                    t.set(e, r), r += e.length
                }), t
            }, t.Hash = class {
                clone() {
                    return this._cloneInto()
                }
            };
            let o = {}.toString;
            t.checkOpts = function(e, t) {
                if (void 0 !== t && "[object Object]" !== o.call(t)) throw Error("Options should be object or undefined");
                let r = Object.assign(e, t);
                return r
            }, t.wrapConstructor = function(e) {
                let hashC = t => e().update(toBytes(t)).digest(),
                    t = e();
                return hashC.outputLen = t.outputLen, hashC.blockLen = t.blockLen, hashC.create = () => e(), hashC
            }, t.wrapConstructorWithOpts = function(e) {
                let hashC = (t, r) => e(r).update(toBytes(t)).digest(),
                    t = e({});
                return hashC.outputLen = t.outputLen, hashC.blockLen = t.blockLen, hashC.create = t => e(t), hashC
            }, t.wrapXOFConstructorWithOpts = function(e) {
                let hashC = (t, r) => e(r).update(toBytes(t)).digest(),
                    t = e({});
                return hashC.outputLen = t.outputLen, hashC.blockLen = t.blockLen, hashC.create = t => e(t), hashC
            }, t.randomBytes = function(e = 32) {
                if (n.crypto && "function" == typeof n.crypto.getRandomValues) return n.crypto.getRandomValues(new Uint8Array(e));
                throw Error("crypto.getRandomValues must be defined")
            }
        },
        63531: function(e, t, r) {
            "use strict";
            t.N = void 0;
            var n = r(93918);
            Object.defineProperty(t, "N", {
                enumerable: !0,
                get: function() {
                    return n.SafeAppProvider
                }
            })
        },
        93918: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.SafeAppProvider = void 0;
            let n = r(512),
                i = r(36192);
            let SafeAppProvider = class SafeAppProvider extends n.EventEmitter {
                constructor(e, t) {
                    super(), this.submittedTxs = new Map, this.safe = e, this.sdk = t
                }
                async connect() {
                    this.emit("connect", {
                        chainId: this.chainId
                    })
                }
                async disconnect() {}
                get chainId() {
                    return this.safe.chainId
                }
                async request(e) {
                    let {
                        method: t,
                        params: r = []
                    } = e;
                    switch (t) {
                        case "eth_accounts":
                            return [this.safe.safeAddress];
                        case "net_version":
                        case "eth_chainId":
                            return `0x${this.chainId.toString(16)}`;
                        case "personal_sign":
                            {
                                let [e, t] = r;
                                if (this.safe.safeAddress.toLowerCase() !== t.toLowerCase()) throw Error("The address or message hash is invalid");
                                let n = await this.sdk.txs.signMessage(e),
                                    i = "signature" in n ? n.signature : void 0;
                                return i || "0x"
                            }
                        case "eth_sign":
                            {
                                let [e, t] = r;
                                if (this.safe.safeAddress.toLowerCase() !== e.toLowerCase() || !t.startsWith("0x")) throw Error("The address or message hash is invalid");
                                let n = await this.sdk.txs.signMessage(t),
                                    i = "signature" in n ? n.signature : void 0;
                                return i || "0x"
                            }
                        case "eth_signTypedData":
                        case "eth_signTypedData_v4":
                            {
                                let [e, t] = r,
                                n = "string" == typeof t ? JSON.parse(t) : t;
                                if (this.safe.safeAddress.toLowerCase() !== e.toLowerCase()) throw Error("The address is invalid");
                                let i = await this.sdk.txs.signTypedMessage(n),
                                    o = "signature" in i ? i.signature : void 0;
                                return o || "0x"
                            }
                        case "eth_sendTransaction":
                            let n = Object.assign({
                                value: "0",
                                data: "0x"
                            }, r[0]);
                            "string" == typeof n.gas && n.gas.startsWith("0x") && (n.gas = parseInt(n.gas, 16));
                            let o = await this.sdk.txs.send({
                                txs: [n],
                                params: {
                                    safeTxGas: n.gas
                                }
                            });
                            return this.submittedTxs.set(o.safeTxHash, {
                                from: this.safe.safeAddress,
                                hash: o.safeTxHash,
                                gas: 0,
                                gasPrice: "0x00",
                                nonce: 0,
                                input: n.data,
                                value: n.value,
                                to: n.to,
                                blockHash: null,
                                blockNumber: null,
                                transactionIndex: null
                            }), o.safeTxHash;
                        case "eth_blockNumber":
                            let a = await this.sdk.eth.getBlockByNumber(["latest"]);
                            return a.number;
                        case "eth_getBalance":
                            return this.sdk.eth.getBalance([(0, i.getLowerCase)(r[0]), r[1]]);
                        case "eth_getCode":
                            return this.sdk.eth.getCode([(0, i.getLowerCase)(r[0]), r[1]]);
                        case "eth_getTransactionCount":
                            return this.sdk.eth.getTransactionCount([(0, i.getLowerCase)(r[0]), r[1]]);
                        case "eth_getStorageAt":
                            return this.sdk.eth.getStorageAt([(0, i.getLowerCase)(r[0]), r[1], r[2]]);
                        case "eth_getBlockByNumber":
                            return this.sdk.eth.getBlockByNumber([r[0], r[1]]);
                        case "eth_getBlockByHash":
                            return this.sdk.eth.getBlockByHash([r[0], r[1]]);
                        case "eth_getTransactionByHash":
                            let s = r[0];
                            try {
                                let e = await this.sdk.txs.getBySafeTxHash(s);
                                s = e.txHash || s
                            } catch (e) {}
                            if (this.submittedTxs.has(s)) return this.submittedTxs.get(s);
                            return this.sdk.eth.getTransactionByHash([s]).then(e => (e && (e.hash = r[0]), e));
                        case "eth_getTransactionReceipt":
                            {
                                let e = r[0];
                                try {
                                    let t = await this.sdk.txs.getBySafeTxHash(e);
                                    e = t.txHash || e
                                } catch (e) {}
                                return this.sdk.eth.getTransactionReceipt([e]).then(e => (e && (e.transactionHash = r[0]), e))
                            }
                        case "eth_estimateGas":
                            return this.sdk.eth.getEstimateGas(r[0]);
                        case "eth_call":
                            return this.sdk.eth.call([r[0], r[1]]);
                        case "eth_getLogs":
                            return this.sdk.eth.getPastLogs([r[0]]);
                        case "eth_gasPrice":
                            return this.sdk.eth.getGasPrice();
                        case "wallet_getPermissions":
                            return this.sdk.wallet.getPermissions();
                        case "wallet_requestPermissions":
                            return this.sdk.wallet.requestPermissions(r[0]);
                        case "safe_setSettings":
                            return this.sdk.eth.setSafeSettings([r[0]]);
                        default:
                            throw Error(`"${e.method}" not implemented`)
                    }
                }
                send(e, t) {
                    e || t("Undefined request"), this.request(e).then(r => t(null, {
                        jsonrpc: "2.0",
                        id: e.id,
                        result: r
                    })).catch(e => t(e, null))
                }
            };
            t.SafeAppProvider = SafeAppProvider
        },
        36192: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getLowerCase = void 0, t.getLowerCase = function(e) {
                return e ? e.toLowerCase() : e
            }
        },
        50053: function(e, t, r) {
            "use strict";
            var n = this && this.__createBinding || (Object.create ? function(e, t, r, n) {
                    void 0 === n && (n = r);
                    var i = Object.getOwnPropertyDescriptor(t, r);
                    (!i || ("get" in i ? !t.__esModule : i.writable || i.configurable)) && (i = {
                        enumerable: !0,
                        get: function() {
                            return t[r]
                        }
                    }), Object.defineProperty(e, n, i)
                } : function(e, t, r, n) {
                    void 0 === n && (n = r), e[n] = t[r]
                }),
                i = this && this.__exportStar || function(e, t) {
                    for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || n(t, e, r)
                };
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            let o = r(10794);
            t.default = class {
                constructor(e = null, t = !1) {
                    this.allowedOrigins = null, this.callbacks = new Map, this.debugMode = !1, this.isServer = "undefined" == typeof window, this.isValidMessage = ({
                        origin: e,
                        data: t,
                        source: r
                    }) => {
                        let n = !this.isServer && r === window.parent,
                            i = void 0 !== t.version && parseInt(t.version.split(".")[0]),
                            o = !0;
                        return Array.isArray(this.allowedOrigins) && (o = void 0 !== this.allowedOrigins.find(t => t.test(e))), !!t && n && i >= 1 && o
                    }, this.logIncomingMessage = e => {
                        console.info(`Safe Apps SDK v1: A message was received from origin ${e.origin}. `, e.data)
                    }, this.onParentMessage = e => {
                        this.isValidMessage(e) && (this.debugMode && this.logIncomingMessage(e), this.handleIncomingMessage(e.data))
                    }, this.handleIncomingMessage = e => {
                        let {
                            id: t
                        } = e, r = this.callbacks.get(t);
                        r && (r(e), this.callbacks.delete(t))
                    }, this.send = (e, t) => {
                        let r = o.MessageFormatter.makeRequest(e, t);
                        if (this.isServer) throw Error("Window doesn't exist");
                        return window.parent.postMessage(r, "*"), new Promise((e, t) => {
                            this.callbacks.set(r.id, r => {
                                if (!r.success) {
                                    t(Error(r.error));
                                    return
                                }
                                e(r)
                            })
                        })
                    }, this.allowedOrigins = e, this.debugMode = t, this.isServer || window.addEventListener("message", this.onParentMessage)
                }
            }, i(r(60304), t)
        },
        10794: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.MessageFormatter = void 0;
            let n = r(41980),
                i = r(87243);
            let MessageFormatter = class MessageFormatter {};
            t.MessageFormatter = MessageFormatter, MessageFormatter.makeRequest = (e, t) => {
                let r = (0, i.generateRequestId)();
                return {
                    id: r,
                    method: e,
                    params: t,
                    env: {
                        sdkVersion: (0, n.getSDKVersion)()
                    }
                }
            }, MessageFormatter.makeResponse = (e, t, r) => ({
                id: e,
                success: !0,
                version: r,
                data: t
            }), MessageFormatter.makeErrorResponse = (e, t, r) => ({
                id: e,
                success: !1,
                error: t,
                version: r
            })
        },
        60304: function(e, t) {
            "use strict";
            var r;
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.RestrictedMethods = t.Methods = void 0, (r = t.Methods || (t.Methods = {})).sendTransactions = "sendTransactions", r.rpcCall = "rpcCall", r.getChainInfo = "getChainInfo", r.getSafeInfo = "getSafeInfo", r.getTxBySafeTxHash = "getTxBySafeTxHash", r.getSafeBalances = "getSafeBalances", r.signMessage = "signMessage", r.signTypedMessage = "signTypedMessage", r.getEnvironmentInfo = "getEnvironmentInfo", r.getOffChainSignature = "getOffChainSignature", r.requestAddressBook = "requestAddressBook", r.wallet_getPermissions = "wallet_getPermissions", r.wallet_requestPermissions = "wallet_requestPermissions", (t.RestrictedMethods || (t.RestrictedMethods = {})).requestAddressBook = "requestAddressBook"
        },
        87243: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.generateRequestId = void 0;
            let dec2hex = e => e.toString(16).padStart(2, "0"),
                generateId = e => {
                    let t = new Uint8Array((e || 40) / 2);
                    return window.crypto.getRandomValues(t), Array.from(t, dec2hex).join("")
                };
            t.generateRequestId = () => "undefined" != typeof window ? generateId(10) : new Date().getTime().toString(36)
        },
        59507: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            let n = r(40249),
                i = r(80031),
                hasPermission = (e, t) => t.some(t => t.parentCapability === e);
            t.default = () => (e, t, r) => {
                let o = r.value;
                return r.value = async function() {
                    let e = new n.Wallet(this.communicator),
                        r = await e.getPermissions();
                    if (hasPermission(t, r) || (r = await e.requestPermissions([{
                            [t]: {}
                        }])), !hasPermission(t, r)) throw new i.PermissionsError("Permissions rejected", i.PERMISSIONS_REQUEST_REJECTED);
                    return o.apply(this)
                }, r
            }
        },
        78139: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.RPC_CALLS = void 0, t.RPC_CALLS = {
                eth_call: "eth_call",
                eth_gasPrice: "eth_gasPrice",
                eth_getLogs: "eth_getLogs",
                eth_getBalance: "eth_getBalance",
                eth_getCode: "eth_getCode",
                eth_getBlockByHash: "eth_getBlockByHash",
                eth_getBlockByNumber: "eth_getBlockByNumber",
                eth_getStorageAt: "eth_getStorageAt",
                eth_getTransactionByHash: "eth_getTransactionByHash",
                eth_getTransactionReceipt: "eth_getTransactionReceipt",
                eth_getTransactionCount: "eth_getTransactionCount",
                eth_estimateGas: "eth_estimateGas",
                safe_setSettings: "safe_setSettings"
            }
        },
        22584: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.Eth = void 0;
            let n = r(78139),
                i = r(60304),
                o = {
                    defaultBlockParam: (e = "latest") => e,
                    returnFullTxObjectParam: (e = !1) => e,
                    blockNumberToHex: e => Number.isInteger(e) ? `0x${e.toString(16)}` : e
                };
            t.Eth = class {
                constructor(e) {
                    this.communicator = e, this.call = this.buildRequest({
                        call: n.RPC_CALLS.eth_call,
                        formatters: [null, o.defaultBlockParam]
                    }), this.getBalance = this.buildRequest({
                        call: n.RPC_CALLS.eth_getBalance,
                        formatters: [null, o.defaultBlockParam]
                    }), this.getCode = this.buildRequest({
                        call: n.RPC_CALLS.eth_getCode,
                        formatters: [null, o.defaultBlockParam]
                    }), this.getStorageAt = this.buildRequest({
                        call: n.RPC_CALLS.eth_getStorageAt,
                        formatters: [null, o.blockNumberToHex, o.defaultBlockParam]
                    }), this.getPastLogs = this.buildRequest({
                        call: n.RPC_CALLS.eth_getLogs
                    }), this.getBlockByHash = this.buildRequest({
                        call: n.RPC_CALLS.eth_getBlockByHash,
                        formatters: [null, o.returnFullTxObjectParam]
                    }), this.getBlockByNumber = this.buildRequest({
                        call: n.RPC_CALLS.eth_getBlockByNumber,
                        formatters: [o.blockNumberToHex, o.returnFullTxObjectParam]
                    }), this.getTransactionByHash = this.buildRequest({
                        call: n.RPC_CALLS.eth_getTransactionByHash
                    }), this.getTransactionReceipt = this.buildRequest({
                        call: n.RPC_CALLS.eth_getTransactionReceipt
                    }), this.getTransactionCount = this.buildRequest({
                        call: n.RPC_CALLS.eth_getTransactionCount,
                        formatters: [null, o.defaultBlockParam]
                    }), this.getGasPrice = this.buildRequest({
                        call: n.RPC_CALLS.eth_gasPrice
                    }), this.getEstimateGas = e => this.buildRequest({
                        call: n.RPC_CALLS.eth_estimateGas
                    })([e]), this.setSafeSettings = this.buildRequest({
                        call: n.RPC_CALLS.safe_setSettings
                    })
                }
                buildRequest(e) {
                    let {
                        call: t,
                        formatters: r
                    } = e;
                    return async e => {
                        r && Array.isArray(e) && r.forEach((t, r) => {
                            t && (e[r] = t(e[r]))
                        });
                        let n = await this.communicator.send(i.Methods.rpcCall, {
                            call: t,
                            params: e || []
                        });
                        return n.data
                    }
                }
            }
        },
        44378: function(e, t, r) {
            "use strict";
            var n = this && this.__createBinding || (Object.create ? function(e, t, r, n) {
                    void 0 === n && (n = r);
                    var i = Object.getOwnPropertyDescriptor(t, r);
                    (!i || ("get" in i ? !t.__esModule : i.writable || i.configurable)) && (i = {
                        enumerable: !0,
                        get: function() {
                            return t[r]
                        }
                    }), Object.defineProperty(e, n, i)
                } : function(e, t, r, n) {
                    void 0 === n && (n = r), e[n] = t[r]
                }),
                i = this && this.__exportStar || function(e, t) {
                    for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || n(t, e, r)
                },
                o = this && this.__importDefault || function(e) {
                    return e && e.__esModule ? e : {
                        default: e
                    }
                };
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getSDKVersion = void 0;
            let a = o(r(72778));
            t.default = a.default, i(r(72778), t), i(r(75650), t), i(r(60304), t), i(r(10794), t);
            var s = r(41980);
            Object.defineProperty(t, "getSDKVersion", {
                enumerable: !0,
                get: function() {
                    return s.getSDKVersion
                }
            })
        },
        16708: function(e, t, r) {
            "use strict";
            var n = this && this.__decorate || function(e, t, r, n) {
                    var i, o = arguments.length,
                        a = o < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, r) : n;
                    if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, r, n);
                    else
                        for (var s = e.length - 1; s >= 0; s--)(i = e[s]) && (a = (o < 3 ? i(a) : o > 3 ? i(t, r, a) : i(t, r)) || a);
                    return o > 3 && a && Object.defineProperty(t, r, a), a
                },
                i = this && this.__importDefault || function(e) {
                    return e && e.__esModule ? e : {
                        default: e
                    }
                };
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.Safe = void 0;
            let o = r(33122),
                a = r(4756),
                s = r(60304),
                c = r(78139),
                u = r(75650),
                l = i(r(59507));
            let Safe = class Safe {
                constructor(e) {
                    this.communicator = e
                }
                async getChainInfo() {
                    let e = await this.communicator.send(s.Methods.getChainInfo, void 0);
                    return e.data
                }
                async getInfo() {
                    let e = await this.communicator.send(s.Methods.getSafeInfo, void 0);
                    return e.data
                }
                async experimental_getBalances({
                    currency: e = "usd"
                } = {}) {
                    let t = await this.communicator.send(s.Methods.getSafeBalances, {
                        currency: e
                    });
                    return t.data
                }
                async check1271Signature(e, t = "0x") {
                    let r = await this.getInfo(),
                        n = (0, o.encodeFunctionData)({
                            abi: [{
                                constant: !1,
                                inputs: [{
                                    name: "_dataHash",
                                    type: "bytes32"
                                }, {
                                    name: "_signature",
                                    type: "bytes"
                                }],
                                name: "isValidSignature",
                                outputs: [{
                                    name: "",
                                    type: "bytes4"
                                }],
                                payable: !1,
                                stateMutability: "nonpayable",
                                type: "function"
                            }],
                            functionName: "isValidSignature",
                            args: [e, t]
                        }),
                        i = {
                            call: c.RPC_CALLS.eth_call,
                            params: [{
                                to: r.safeAddress,
                                data: n
                            }, "latest"]
                        };
                    try {
                        let e = await this.communicator.send(s.Methods.rpcCall, i);
                        return e.data.slice(0, 10).toLowerCase() === a.MAGIC_VALUE
                    } catch (e) {
                        return !1
                    }
                }
                async check1271SignatureBytes(e, t = "0x") {
                    let r = await this.getInfo(),
                        n = (0, o.encodeFunctionData)({
                            abi: [{
                                constant: !1,
                                inputs: [{
                                    name: "_data",
                                    type: "bytes"
                                }, {
                                    name: "_signature",
                                    type: "bytes"
                                }],
                                name: "isValidSignature",
                                outputs: [{
                                    name: "",
                                    type: "bytes4"
                                }],
                                payable: !1,
                                stateMutability: "nonpayable",
                                type: "function"
                            }],
                            functionName: "isValidSignature",
                            args: [e, t]
                        }),
                        i = {
                            call: c.RPC_CALLS.eth_call,
                            params: [{
                                to: r.safeAddress,
                                data: n
                            }, "latest"]
                        };
                    try {
                        let e = await this.communicator.send(s.Methods.rpcCall, i);
                        return e.data.slice(0, 10).toLowerCase() === a.MAGIC_VALUE_BYTES
                    } catch (e) {
                        return !1
                    }
                }
                calculateMessageHash(e) {
                    return (0, o.hashMessage)(e)
                }
                calculateTypedMessageHash(e) {
                    let t = "object" == typeof e.domain.chainId ? e.domain.chainId.toNumber() : Number(e.domain.chainId),
                        r = e.primaryType;
                    if (!r) {
                        let t = Object.values(e.types),
                            n = Object.keys(e.types).filter(e => t.every(t => t.every(({
                                type: t
                            }) => t.replace("[", "").replace("]", "") !== e)));
                        if (0 === n.length || n.length > 1) throw Error("Please specify primaryType");
                        r = n[0]
                    }
                    return (0, o.hashTypedData)({
                        message: e.message,
                        domain: Object.assign(Object.assign({}, e.domain), {
                            chainId: t,
                            verifyingContract: e.domain.verifyingContract,
                            salt: e.domain.salt
                        }),
                        types: e.types,
                        primaryType: r
                    })
                }
                async getOffChainSignature(e) {
                    let t = await this.communicator.send(s.Methods.getOffChainSignature, e);
                    return t.data
                }
                async isMessageSigned(e, t = "0x") {
                    let r;
                    if ("string" == typeof e && (r = async () => {
                            let r = this.calculateMessageHash(e),
                                n = await this.isMessageHashSigned(r, t);
                            return n
                        }), (0, u.isObjectEIP712TypedData)(e) && (r = async () => {
                            let r = this.calculateTypedMessageHash(e),
                                n = await this.isMessageHashSigned(r, t);
                            return n
                        }), r) {
                        let e = await r();
                        return e
                    }
                    throw Error("Invalid message type")
                }
                async isMessageHashSigned(e, t = "0x") {
                    let r = [this.check1271Signature.bind(this), this.check1271SignatureBytes.bind(this)];
                    for (let n of r) {
                        let r = await n(e, t);
                        if (r) return !0
                    }
                    return !1
                }
                async getEnvironmentInfo() {
                    let e = await this.communicator.send(s.Methods.getEnvironmentInfo, void 0);
                    return e.data
                }
                async requestAddressBook() {
                    let e = await this.communicator.send(s.Methods.requestAddressBook, void 0);
                    return e.data
                }
            };
            n([(0, l.default)()], Safe.prototype, "requestAddressBook", null), t.Safe = Safe
        },
        4756: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.MAGIC_VALUE_BYTES = t.MAGIC_VALUE = void 0, t.MAGIC_VALUE = "0x1626ba7e", t.MAGIC_VALUE_BYTES = "0x20c13b0b"
        },
        72778: function(e, t, r) {
            "use strict";
            var n = this && this.__importDefault || function(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            };
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            let i = n(r(50053)),
                o = r(93683),
                a = r(22584),
                s = r(16708),
                c = r(40249);
            t.default = class {
                constructor(e = {}) {
                    let {
                        allowedDomains: t = null,
                        debug: r = !1
                    } = e;
                    this.communicator = new i.default(t, r), this.eth = new a.Eth(this.communicator), this.txs = new o.TXs(this.communicator), this.safe = new s.Safe(this.communicator), this.wallet = new c.Wallet(this.communicator)
                }
            }
        },
        93683: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.TXs = void 0;
            let n = r(60304),
                i = r(75650);
            t.TXs = class {
                constructor(e) {
                    this.communicator = e
                }
                async getBySafeTxHash(e) {
                    if (!e) throw Error("Invalid safeTxHash");
                    let t = await this.communicator.send(n.Methods.getTxBySafeTxHash, {
                        safeTxHash: e
                    });
                    return t.data
                }
                async signMessage(e) {
                    let t = await this.communicator.send(n.Methods.signMessage, {
                        message: e
                    });
                    return t.data
                }
                async signTypedMessage(e) {
                    if (!(0, i.isObjectEIP712TypedData)(e)) throw Error("Invalid typed data");
                    let t = await this.communicator.send(n.Methods.signTypedMessage, {
                        typedData: e
                    });
                    return t.data
                }
                async send({
                    txs: e,
                    params: t
                }) {
                    if (!e || !e.length) throw Error("No transactions were passed");
                    let r = await this.communicator.send(n.Methods.sendTransactions, {
                        txs: e,
                        params: t
                    });
                    return r.data
                }
            }
        },
        23093: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.TransferDirection = t.TransactionStatus = t.TokenType = t.Operation = void 0;
            var n = r(29323);
            Object.defineProperty(t, "Operation", {
                enumerable: !0,
                get: function() {
                    return n.Operation
                }
            }), Object.defineProperty(t, "TokenType", {
                enumerable: !0,
                get: function() {
                    return n.TokenType
                }
            }), Object.defineProperty(t, "TransactionStatus", {
                enumerable: !0,
                get: function() {
                    return n.TransactionStatus
                }
            }), Object.defineProperty(t, "TransferDirection", {
                enumerable: !0,
                get: function() {
                    return n.TransferDirection
                }
            })
        },
        75650: function(e, t, r) {
            "use strict";
            var n = this && this.__createBinding || (Object.create ? function(e, t, r, n) {
                    void 0 === n && (n = r);
                    var i = Object.getOwnPropertyDescriptor(t, r);
                    (!i || ("get" in i ? !t.__esModule : i.writable || i.configurable)) && (i = {
                        enumerable: !0,
                        get: function() {
                            return t[r]
                        }
                    }), Object.defineProperty(e, n, i)
                } : function(e, t, r, n) {
                    void 0 === n && (n = r), e[n] = t[r]
                }),
                i = this && this.__exportStar || function(e, t) {
                    for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || n(t, e, r)
                };
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), i(r(86726), t), i(r(27441), t), i(r(23093), t), i(r(84747), t)
        },
        84747: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), r(60304)
        },
        80031: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.PermissionsError = t.PERMISSIONS_REQUEST_REJECTED = void 0, t.PERMISSIONS_REQUEST_REJECTED = 4001;
            let PermissionsError = class PermissionsError extends Error {
                constructor(e, t, r) {
                    super(e), this.code = t, this.data = r, Object.setPrototypeOf(this, PermissionsError.prototype)
                }
            };
            t.PermissionsError = PermissionsError
        },
        27441: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            })
        },
        86726: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.isObjectEIP712TypedData = void 0, t.isObjectEIP712TypedData = e => "object" == typeof e && null != e && "domain" in e && "types" in e && "message" in e
        },
        41980: function(e, t, r) {
            "use strict";
            var n = this && this.__importDefault || function(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            };
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getSDKVersion = void 0;
            let i = n(r(69292));
            t.getSDKVersion = () => i.default.version.split("-")[0]
        },
        40249: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.Wallet = void 0;
            let n = r(60304),
                i = r(80031);
            t.Wallet = class {
                constructor(e) {
                    this.communicator = e
                }
                async getPermissions() {
                    let e = await this.communicator.send(n.Methods.wallet_getPermissions, void 0);
                    return e.data
                }
                async requestPermissions(e) {
                    if (!this.isPermissionRequestValid(e)) throw new i.PermissionsError("Permissions request is invalid", i.PERMISSIONS_REQUEST_REJECTED);
                    try {
                        let t = await this.communicator.send(n.Methods.wallet_requestPermissions, e);
                        return t.data
                    } catch (e) {
                        throw new i.PermissionsError("Permissions rejected", i.PERMISSIONS_REQUEST_REJECTED)
                    }
                }
                isPermissionRequestValid(e) {
                    return e.every(e => "object" == typeof e && Object.keys(e).every(e => !!Object.values(n.RestrictedMethods).includes(e)))
                }
            }
        },
        47073: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.DEFAULT_BASE_URL = void 0, t.DEFAULT_BASE_URL = "https://safe-client.safe.global"
        },
        7637: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.deleteEndpoint = t.getEndpoint = t.postEndpoint = void 0;
            let n = r(93340);

            function makeUrl(e, t, r, i) {
                let o = (0, n.insertParams)(t, r),
                    a = (0, n.stringifyQuery)(i);
                return `${e}${o}${a}`
            }
            t.postEndpoint = function(e, t, r) {
                let i = makeUrl(e, t, null == r ? void 0 : r.path, null == r ? void 0 : r.query);
                return (0, n.fetchData)(i, null == r ? void 0 : r.body)
            }, t.getEndpoint = function(e, t, r, i) {
                if (i) return (0, n.fetchData)(i);
                let o = makeUrl(e, t, null == r ? void 0 : r.path, null == r ? void 0 : r.query);
                return (0, n.fetchData)(o)
            }, t.deleteEndpoint = function(e, t, r) {
                let i = makeUrl(e, t, null == r ? void 0 : r.path);
                return (0, n.deleteData)(i)
            }
        },
        29323: function(e, t, r) {
            "use strict";
            var n = this && this.__createBinding || (Object.create ? function(e, t, r, n) {
                    void 0 === n && (n = r);
                    var i = Object.getOwnPropertyDescriptor(t, r);
                    (!i || ("get" in i ? !t.__esModule : i.writable || i.configurable)) && (i = {
                        enumerable: !0,
                        get: function() {
                            return t[r]
                        }
                    }), Object.defineProperty(e, n, i)
                } : function(e, t, r, n) {
                    void 0 === n && (n = r), e[n] = t[r]
                }),
                i = this && this.__exportStar || function(e, t) {
                    for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || n(t, e, r)
                };
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.unregisterDevice = t.unregisterSafe = t.registerDevice = t.getDelegates = t.confirmSafeMessage = t.proposeSafeMessage = t.getSafeMessage = t.getSafeMessages = t.getDecodedData = t.getMasterCopies = t.getSafeApps = t.getChainConfig = t.getChainsConfig = t.proposeTransaction = t.getNonces = t.postSafeGasEstimation = t.getTransactionDetails = t.getTransactionQueue = t.getTransactionHistory = t.getCollectiblesPage = t.getCollectibles = t.getOwnedSafes = t.getFiatCurrencies = t.getBalances = t.getMultisigTransactions = t.getModuleTransactions = t.getIncomingTransfers = t.getSafeInfo = t.setBaseUrl = void 0;
            let o = r(7637),
                a = r(47073);
            i(r(39468), t), i(r(55517), t), i(r(41471), t), i(r(41621), t), i(r(94969), t), i(r(5012), t), i(r(83015), t), i(r(99005), t), i(r(71091), t);
            let s = a.DEFAULT_BASE_URL;
            t.setBaseUrl = e => {
                s = e
            }, t.getSafeInfo = function(e, t) {
                return (0, o.getEndpoint)(s, "/v1/chains/{chainId}/safes/{address}", {
                    path: {
                        chainId: e,
                        address: t
                    }
                })
            }, t.getIncomingTransfers = function(e, t, r, n) {
                return (0, o.getEndpoint)(s, "/v1/chains/{chainId}/safes/{address}/incoming-transfers/", {
                    path: {
                        chainId: e,
                        address: t
                    },
                    query: r
                }, n)
            }, t.getModuleTransactions = function(e, t, r, n) {
                return (0, o.getEndpoint)(s, "/v1/chains/{chainId}/safes/{address}/module-transactions/", {
                    path: {
                        chainId: e,
                        address: t
                    },
                    query: r
                }, n)
            }, t.getMultisigTransactions = function(e, t, r, n) {
                return (0, o.getEndpoint)(s, "/v1/chains/{chainId}/safes/{address}/multisig-transactions/", {
                    path: {
                        chainId: e,
                        address: t
                    },
                    query: r
                }, n)
            }, t.getBalances = function(e, t, r = "usd", n = {}) {
                return (0, o.getEndpoint)(s, "/v1/chains/{chainId}/safes/{address}/balances/{currency}", {
                    path: {
                        chainId: e,
                        address: t,
                        currency: r
                    },
                    query: n
                })
            }, t.getFiatCurrencies = function() {
                return (0, o.getEndpoint)(s, "/v1/balances/supported-fiat-codes")
            }, t.getOwnedSafes = function(e, t) {
                return (0, o.getEndpoint)(s, "/v1/chains/{chainId}/owners/{address}/safes", {
                    path: {
                        chainId: e,
                        address: t
                    }
                })
            }, t.getCollectibles = function(e, t, r = {}) {
                return (0, o.getEndpoint)(s, "/v1/chains/{chainId}/safes/{address}/collectibles", {
                    path: {
                        chainId: e,
                        address: t
                    },
                    query: r
                })
            }, t.getCollectiblesPage = function(e, t, r = {}, n) {
                return (0, o.getEndpoint)(s, "/v2/chains/{chainId}/safes/{address}/collectibles", {
                    path: {
                        chainId: e,
                        address: t
                    },
                    query: r
                }, n)
            }, t.getTransactionHistory = function(e, t, r) {
                return (0, o.getEndpoint)(s, "/v1/chains/{chainId}/safes/{safe_address}/transactions/history", {
                    path: {
                        chainId: e,
                        safe_address: t
                    },
                    query: {}
                }, r)
            }, t.getTransactionQueue = function(e, t, r, n) {
                return (0, o.getEndpoint)(s, "/v1/chains/{chainId}/safes/{safe_address}/transactions/queued", {
                    path: {
                        chainId: e,
                        safe_address: t
                    },
                    query: {
                        trusted: n
                    }
                }, r)
            }, t.getTransactionDetails = function(e, t) {
                return (0, o.getEndpoint)(s, "/v1/chains/{chainId}/transactions/{transactionId}", {
                    path: {
                        chainId: e,
                        transactionId: t
                    }
                })
            }, t.postSafeGasEstimation = function(e, t, r) {
                return (0, o.postEndpoint)(s, "/v2/chains/{chainId}/safes/{safe_address}/multisig-transactions/estimations", {
                    path: {
                        chainId: e,
                        safe_address: t
                    },
                    body: r
                })
            }, t.getNonces = function(e, t) {
                return (0, o.getEndpoint)(s, "/v1/chains/{chainId}/safes/{safe_address}/nonces", {
                    path: {
                        chainId: e,
                        safe_address: t
                    }
                })
            }, t.proposeTransaction = function(e, t, r) {
                return (0, o.postEndpoint)(s, "/v1/chains/{chainId}/transactions/{safe_address}/propose", {
                    path: {
                        chainId: e,
                        safe_address: t
                    },
                    body: r
                })
            }, t.getChainsConfig = function(e) {
                return (0, o.getEndpoint)(s, "/v1/chains", {
                    query: e
                })
            }, t.getChainConfig = function(e) {
                return (0, o.getEndpoint)(s, "/v1/chains/{chainId}", {
                    path: {
                        chainId: e
                    }
                })
            }, t.getSafeApps = function(e, t = {}) {
                return (0, o.getEndpoint)(s, "/v1/chains/{chainId}/safe-apps", {
                    path: {
                        chainId: e
                    },
                    query: t
                })
            }, t.getMasterCopies = function(e) {
                return (0, o.getEndpoint)(s, "/v1/chains/{chainId}/about/master-copies", {
                    path: {
                        chainId: e
                    }
                })
            }, t.getDecodedData = function(e, t, r) {
                return (0, o.postEndpoint)(s, "/v1/chains/{chainId}/data-decoder", {
                    path: {
                        chainId: e
                    },
                    body: {
                        data: t,
                        to: r
                    }
                })
            }, t.getSafeMessages = function(e, t, r) {
                return (0, o.getEndpoint)(s, "/v1/chains/{chainId}/safes/{safe_address}/messages", {
                    path: {
                        chainId: e,
                        safe_address: t
                    },
                    query: {}
                }, r)
            }, t.getSafeMessage = function(e, t) {
                return (0, o.getEndpoint)(s, "/v1/chains/{chainId}/messages/{message_hash}", {
                    path: {
                        chainId: e,
                        message_hash: t
                    }
                })
            }, t.proposeSafeMessage = function(e, t, r) {
                return (0, o.postEndpoint)(s, "/v1/chains/{chainId}/safes/{safe_address}/messages", {
                    path: {
                        chainId: e,
                        safe_address: t
                    },
                    body: r
                })
            }, t.confirmSafeMessage = function(e, t, r) {
                return (0, o.postEndpoint)(s, "/v1/chains/{chainId}/messages/{message_hash}/signatures", {
                    path: {
                        chainId: e,
                        message_hash: t
                    },
                    body: r
                })
            }, t.getDelegates = function(e, t = {}) {
                return (0, o.getEndpoint)(s, "/v1/chains/{chainId}/delegates", {
                    path: {
                        chainId: e
                    },
                    query: t
                })
            }, t.registerDevice = function(e) {
                return (0, o.postEndpoint)(s, "/v1/register/notifications", {
                    body: e
                })
            }, t.unregisterSafe = function(e, t, r) {
                return (0, o.deleteEndpoint)(s, "/v1/chains/{chainId}/notifications/devices/{uuid}/safes/{safe_address}", {
                    path: {
                        chainId: e,
                        safe_address: t,
                        uuid: r
                    }
                })
            }, t.unregisterDevice = function(e, t) {
                return (0, o.deleteEndpoint)(s, "/v1/chains/{chainId}/notifications/devices/{uuid}", {
                    path: {
                        chainId: e,
                        uuid: t
                    }
                })
            }
        },
        41621: function(e, t) {
            "use strict";
            var r, n, i;
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.FEATURES = t.GAS_PRICE_TYPE = t.RPC_AUTHENTICATION = void 0, (r = t.RPC_AUTHENTICATION || (t.RPC_AUTHENTICATION = {})).API_KEY_PATH = "API_KEY_PATH", r.NO_AUTHENTICATION = "NO_AUTHENTICATION", r.UNKNOWN = "UNKNOWN", (n = t.GAS_PRICE_TYPE || (t.GAS_PRICE_TYPE = {})).ORACLE = "ORACLE", n.FIXED = "FIXED", n.FIXED_1559 = "FIXED1559", n.UNKNOWN = "UNKNOWN", (i = t.FEATURES || (t.FEATURES = {})).ERC721 = "ERC721", i.SAFE_APPS = "SAFE_APPS", i.CONTRACT_INTERACTION = "CONTRACT_INTERACTION", i.DOMAIN_LOOKUP = "DOMAIN_LOOKUP", i.SPENDING_LIMIT = "SPENDING_LIMIT", i.EIP1559 = "EIP1559", i.SAFE_TX_GAS_OPTIONAL = "SAFE_TX_GAS_OPTIONAL", i.TX_SIMULATION = "TX_SIMULATION", i.EIP1271 = "EIP1271"
        },
        94969: function(e, t) {
            "use strict";
            var r;
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.TokenType = void 0, (r = t.TokenType || (t.TokenType = {})).ERC20 = "ERC20", r.ERC721 = "ERC721", r.NATIVE_TOKEN = "NATIVE_TOKEN"
        },
        83015: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            })
        },
        5012: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            })
        },
        71091: function(e, t) {
            "use strict";
            var r;
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.DeviceType = void 0, (r = t.DeviceType || (t.DeviceType = {})).ANDROID = "ANDROID", r.IOS = "IOS", r.WEB = "WEB"
        },
        55517: function(e, t) {
            "use strict";
            var r, n;
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.SafeAppSocialPlatforms = t.SafeAppFeatures = t.SafeAppAccessPolicyTypes = void 0, (r = t.SafeAppAccessPolicyTypes || (t.SafeAppAccessPolicyTypes = {})).NoRestrictions = "NO_RESTRICTIONS", r.DomainAllowlist = "DOMAIN_ALLOWLIST", (t.SafeAppFeatures || (t.SafeAppFeatures = {})).BATCHED_TRANSACTIONS = "BATCHED_TRANSACTIONS", (n = t.SafeAppSocialPlatforms || (t.SafeAppSocialPlatforms = {})).TWITTER = "TWITTER", n.GITHUB = "GITHUB", n.DISCORD = "DISCORD"
        },
        39468: function(e, t) {
            "use strict";
            var r;
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.ImplementationVersionState = void 0, (r = t.ImplementationVersionState || (t.ImplementationVersionState = {})).UP_TO_DATE = "UP_TO_DATE", r.OUTDATED = "OUTDATED", r.UNKNOWN = "UNKNOWN"
        },
        99005: function(e, t) {
            "use strict";
            var r, n;
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.SafeMessageStatus = t.SafeMessageListItemType = void 0, (r = t.SafeMessageListItemType || (t.SafeMessageListItemType = {})).DATE_LABEL = "DATE_LABEL", r.MESSAGE = "MESSAGE", (n = t.SafeMessageStatus || (t.SafeMessageStatus = {})).NEEDS_CONFIRMATION = "NEEDS_CONFIRMATION", n.CONFIRMED = "CONFIRMED"
        },
        41471: function(e, t) {
            "use strict";
            var r, n, i, o, a, s, c, u, l, d;
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.LabelValue = t.DetailedExecutionInfoType = t.TransactionListItemType = t.ConflictType = t.TransactionInfoType = t.SettingsInfoType = t.TransactionTokenType = t.TransferDirection = t.TransactionStatus = t.Operation = void 0, (r = t.Operation || (t.Operation = {}))[r.CALL = 0] = "CALL", r[r.DELEGATE = 1] = "DELEGATE", (n = t.TransactionStatus || (t.TransactionStatus = {})).AWAITING_CONFIRMATIONS = "AWAITING_CONFIRMATIONS", n.AWAITING_EXECUTION = "AWAITING_EXECUTION", n.CANCELLED = "CANCELLED", n.FAILED = "FAILED", n.SUCCESS = "SUCCESS", (i = t.TransferDirection || (t.TransferDirection = {})).INCOMING = "INCOMING", i.OUTGOING = "OUTGOING", i.UNKNOWN = "UNKNOWN", (o = t.TransactionTokenType || (t.TransactionTokenType = {})).ERC20 = "ERC20", o.ERC721 = "ERC721", o.NATIVE_COIN = "NATIVE_COIN", (a = t.SettingsInfoType || (t.SettingsInfoType = {})).SET_FALLBACK_HANDLER = "SET_FALLBACK_HANDLER", a.ADD_OWNER = "ADD_OWNER", a.REMOVE_OWNER = "REMOVE_OWNER", a.SWAP_OWNER = "SWAP_OWNER", a.CHANGE_THRESHOLD = "CHANGE_THRESHOLD", a.CHANGE_IMPLEMENTATION = "CHANGE_IMPLEMENTATION", a.ENABLE_MODULE = "ENABLE_MODULE", a.DISABLE_MODULE = "DISABLE_MODULE", a.SET_GUARD = "SET_GUARD", a.DELETE_GUARD = "DELETE_GUARD", (s = t.TransactionInfoType || (t.TransactionInfoType = {})).TRANSFER = "Transfer", s.SETTINGS_CHANGE = "SettingsChange", s.CUSTOM = "Custom", s.CREATION = "Creation", (c = t.ConflictType || (t.ConflictType = {})).NONE = "None", c.HAS_NEXT = "HasNext", c.END = "End", (u = t.TransactionListItemType || (t.TransactionListItemType = {})).TRANSACTION = "TRANSACTION", u.LABEL = "LABEL", u.CONFLICT_HEADER = "CONFLICT_HEADER", u.DATE_LABEL = "DATE_LABEL", (l = t.DetailedExecutionInfoType || (t.DetailedExecutionInfoType = {})).MULTISIG = "MULTISIG", l.MODULE = "MODULE", (d = t.LabelValue || (t.LabelValue = {})).Queued = "Queued", d.Next = "Next"
        },
        93340: function(e, t) {
            "use strict";
            var r = this && this.__awaiter || function(e, t, r, n) {
                return new(r || (r = Promise))(function(i, o) {
                    function fulfilled(e) {
                        try {
                            step(n.next(e))
                        } catch (e) {
                            o(e)
                        }
                    }

                    function rejected(e) {
                        try {
                            step(n.throw(e))
                        } catch (e) {
                            o(e)
                        }
                    }

                    function step(e) {
                        var t;
                        e.done ? i(e.value) : ((t = e.value) instanceof r ? t : new r(function(e) {
                            e(t)
                        })).then(fulfilled, rejected)
                    }
                    step((n = n.apply(e, t || [])).next())
                })
            };
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.deleteData = t.fetchData = t.stringifyQuery = t.insertParams = void 0;
            let isErrorResponse = e => "object" == typeof e && null !== e && "code" in e && "message" in e;

            function parseResponse(e) {
                return r(this, void 0, void 0, function*() {
                    let t;
                    try {
                        t = yield e.json()
                    } catch (t) {
                        if (e.headers && "0" !== e.headers.get("content-length")) throw Error(`Invalid response content: ${e.statusText}`)
                    }
                    if (!e.ok) {
                        let r = isErrorResponse(t) ? `${t.code}: ${t.message}` : e.statusText;
                        throw Error(r)
                    }
                    return t
                })
            }
            t.insertParams = function(e, t) {
                return t ? Object.keys(t).reduce((e, r) => {
                    var n;
                    return n = String(t[r]), e.replace(RegExp(`\\{${r}\\}`, "g"), n)
                }, e) : e
            }, t.stringifyQuery = function(e) {
                if (!e) return "";
                let t = new URLSearchParams;
                Object.keys(e).forEach(r => {
                    null != e[r] && t.append(r, String(e[r]))
                });
                let r = t.toString();
                return r ? `?${r}` : ""
            }, t.fetchData = function(e, t) {
                return r(this, void 0, void 0, function*() {
                    let r;
                    null != t && (r = {
                        method: "POST",
                        body: "string" == typeof t ? t : JSON.stringify(t),
                        headers: {
                            "Content-Type": "application/json"
                        }
                    });
                    let n = yield fetch(e, r);
                    return parseResponse(n)
                })
            }, t.deleteData = function(e) {
                return r(this, void 0, void 0, function*() {
                    let t = yield fetch(e, {
                        method: "DELETE"
                    });
                    return parseResponse(t)
                })
            }
        },
        34310: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            var n = r(62140);

            function writeUint16BE(e, t, r) {
                return void 0 === t && (t = new Uint8Array(2)), void 0 === r && (r = 0), t[r + 0] = e >>> 8, t[r + 1] = e >>> 0, t
            }

            function writeUint16LE(e, t, r) {
                return void 0 === t && (t = new Uint8Array(2)), void 0 === r && (r = 0), t[r + 0] = e >>> 0, t[r + 1] = e >>> 8, t
            }

            function readInt32BE(e, t) {
                return void 0 === t && (t = 0), e[t] << 24 | e[t + 1] << 16 | e[t + 2] << 8 | e[t + 3]
            }

            function readUint32BE(e, t) {
                return void 0 === t && (t = 0), (e[t] << 24 | e[t + 1] << 16 | e[t + 2] << 8 | e[t + 3]) >>> 0
            }

            function readInt32LE(e, t) {
                return void 0 === t && (t = 0), e[t + 3] << 24 | e[t + 2] << 16 | e[t + 1] << 8 | e[t]
            }

            function readUint32LE(e, t) {
                return void 0 === t && (t = 0), (e[t + 3] << 24 | e[t + 2] << 16 | e[t + 1] << 8 | e[t]) >>> 0
            }

            function writeUint32BE(e, t, r) {
                return void 0 === t && (t = new Uint8Array(4)), void 0 === r && (r = 0), t[r + 0] = e >>> 24, t[r + 1] = e >>> 16, t[r + 2] = e >>> 8, t[r + 3] = e >>> 0, t
            }

            function writeUint32LE(e, t, r) {
                return void 0 === t && (t = new Uint8Array(4)), void 0 === r && (r = 0), t[r + 0] = e >>> 0, t[r + 1] = e >>> 8, t[r + 2] = e >>> 16, t[r + 3] = e >>> 24, t
            }

            function writeUint64BE(e, t, r) {
                return void 0 === t && (t = new Uint8Array(8)), void 0 === r && (r = 0), writeUint32BE(e / 4294967296 >>> 0, t, r), writeUint32BE(e >>> 0, t, r + 4), t
            }

            function writeUint64LE(e, t, r) {
                return void 0 === t && (t = new Uint8Array(8)), void 0 === r && (r = 0), writeUint32LE(e >>> 0, t, r), writeUint32LE(e / 4294967296 >>> 0, t, r + 4), t
            }
            t.readInt16BE = function(e, t) {
                return void 0 === t && (t = 0), (e[t + 0] << 8 | e[t + 1]) << 16 >> 16
            }, t.readUint16BE = function(e, t) {
                return void 0 === t && (t = 0), (e[t + 0] << 8 | e[t + 1]) >>> 0
            }, t.readInt16LE = function(e, t) {
                return void 0 === t && (t = 0), (e[t + 1] << 8 | e[t]) << 16 >> 16
            }, t.readUint16LE = function(e, t) {
                return void 0 === t && (t = 0), (e[t + 1] << 8 | e[t]) >>> 0
            }, t.writeUint16BE = writeUint16BE, t.writeInt16BE = writeUint16BE, t.writeUint16LE = writeUint16LE, t.writeInt16LE = writeUint16LE, t.readInt32BE = readInt32BE, t.readUint32BE = readUint32BE, t.readInt32LE = readInt32LE, t.readUint32LE = readUint32LE, t.writeUint32BE = writeUint32BE, t.writeInt32BE = writeUint32BE, t.writeUint32LE = writeUint32LE, t.writeInt32LE = writeUint32LE, t.readInt64BE = function(e, t) {
                void 0 === t && (t = 0);
                var r = readInt32BE(e, t),
                    n = readInt32BE(e, t + 4);
                return 4294967296 * r + n - (n >> 31) * 4294967296
            }, t.readUint64BE = function(e, t) {
                return void 0 === t && (t = 0), 4294967296 * readUint32BE(e, t) + readUint32BE(e, t + 4)
            }, t.readInt64LE = function(e, t) {
                void 0 === t && (t = 0);
                var r = readInt32LE(e, t);
                return 4294967296 * readInt32LE(e, t + 4) + r - (r >> 31) * 4294967296
            }, t.readUint64LE = function(e, t) {
                void 0 === t && (t = 0);
                var r = readUint32LE(e, t);
                return 4294967296 * readUint32LE(e, t + 4) + r
            }, t.writeUint64BE = writeUint64BE, t.writeInt64BE = writeUint64BE, t.writeUint64LE = writeUint64LE, t.writeInt64LE = writeUint64LE, t.readUintBE = function(e, t, r) {
                if (void 0 === r && (r = 0), e % 8 != 0) throw Error("readUintBE supports only bitLengths divisible by 8");
                if (e / 8 > t.length - r) throw Error("readUintBE: array is too short for the given bitLength");
                for (var n = 0, i = 1, o = e / 8 + r - 1; o >= r; o--) n += t[o] * i, i *= 256;
                return n
            }, t.readUintLE = function(e, t, r) {
                if (void 0 === r && (r = 0), e % 8 != 0) throw Error("readUintLE supports only bitLengths divisible by 8");
                if (e / 8 > t.length - r) throw Error("readUintLE: array is too short for the given bitLength");
                for (var n = 0, i = 1, o = r; o < r + e / 8; o++) n += t[o] * i, i *= 256;
                return n
            }, t.writeUintBE = function(e, t, r, i) {
                if (void 0 === r && (r = new Uint8Array(e / 8)), void 0 === i && (i = 0), e % 8 != 0) throw Error("writeUintBE supports only bitLengths divisible by 8");
                if (!n.isSafeInteger(t)) throw Error("writeUintBE value must be an integer");
                for (var o = 1, a = e / 8 + i - 1; a >= i; a--) r[a] = t / o & 255, o *= 256;
                return r
            }, t.writeUintLE = function(e, t, r, i) {
                if (void 0 === r && (r = new Uint8Array(e / 8)), void 0 === i && (i = 0), e % 8 != 0) throw Error("writeUintLE supports only bitLengths divisible by 8");
                if (!n.isSafeInteger(t)) throw Error("writeUintLE value must be an integer");
                for (var o = 1, a = i; a < i + e / 8; a++) r[a] = t / o & 255, o *= 256;
                return r
            }, t.readFloat32BE = function(e, t) {
                return void 0 === t && (t = 0), new DataView(e.buffer, e.byteOffset, e.byteLength).getFloat32(t)
            }, t.readFloat32LE = function(e, t) {
                return void 0 === t && (t = 0), new DataView(e.buffer, e.byteOffset, e.byteLength).getFloat32(t, !0)
            }, t.readFloat64BE = function(e, t) {
                return void 0 === t && (t = 0), new DataView(e.buffer, e.byteOffset, e.byteLength).getFloat64(t)
            }, t.readFloat64LE = function(e, t) {
                return void 0 === t && (t = 0), new DataView(e.buffer, e.byteOffset, e.byteLength).getFloat64(t, !0)
            }, t.writeFloat32BE = function(e, t, r) {
                return void 0 === t && (t = new Uint8Array(4)), void 0 === r && (r = 0), new DataView(t.buffer, t.byteOffset, t.byteLength).setFloat32(r, e), t
            }, t.writeFloat32LE = function(e, t, r) {
                return void 0 === t && (t = new Uint8Array(4)), void 0 === r && (r = 0), new DataView(t.buffer, t.byteOffset, t.byteLength).setFloat32(r, e, !0), t
            }, t.writeFloat64BE = function(e, t, r) {
                return void 0 === t && (t = new Uint8Array(8)), void 0 === r && (r = 0), new DataView(t.buffer, t.byteOffset, t.byteLength).setFloat64(r, e), t
            }, t.writeFloat64LE = function(e, t, r) {
                return void 0 === t && (t = new Uint8Array(8)), void 0 === r && (r = 0), new DataView(t.buffer, t.byteOffset, t.byteLength).setFloat64(r, e, !0), t
            }
        },
        48733: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            var n = r(34310),
                i = r(55277);

            function streamXOR(e, t, r, o, a) {
                if (void 0 === a && (a = 0), 32 !== e.length) throw Error("ChaCha: key size must be 32 bytes");
                if (o.length < r.length) throw Error("ChaCha: destination is shorter than source");
                if (0 === a) {
                    if (8 !== t.length && 12 !== t.length) throw Error("ChaCha nonce must be 8 or 12 bytes");
                    c = (s = new Uint8Array(16)).length - t.length, s.set(t, c)
                } else {
                    if (16 !== t.length) throw Error("ChaCha nonce with counter must be 16 bytes");
                    s = t, c = a
                }
                for (var s, c, u = new Uint8Array(64), l = 0; l < r.length; l += 64) {
                    ! function(e, t, r) {
                        for (var i = r[3] << 24 | r[2] << 16 | r[1] << 8 | r[0], o = r[7] << 24 | r[6] << 16 | r[5] << 8 | r[4], a = r[11] << 24 | r[10] << 16 | r[9] << 8 | r[8], s = r[15] << 24 | r[14] << 16 | r[13] << 8 | r[12], c = r[19] << 24 | r[18] << 16 | r[17] << 8 | r[16], u = r[23] << 24 | r[22] << 16 | r[21] << 8 | r[20], l = r[27] << 24 | r[26] << 16 | r[25] << 8 | r[24], d = r[31] << 24 | r[30] << 16 | r[29] << 8 | r[28], f = t[3] << 24 | t[2] << 16 | t[1] << 8 | t[0], p = t[7] << 24 | t[6] << 16 | t[5] << 8 | t[4], y = t[11] << 24 | t[10] << 16 | t[9] << 8 | t[8], g = t[15] << 24 | t[14] << 16 | t[13] << 8 | t[12], v = 1634760805, E = 857760878, _ = 2036477234, P = 1797285236, T = i, x = o, A = a, M = s, B = c, F = u, N = l, L = d, U = f, z = p, G = y, W = g, V = 0; V < 20; V += 2) U ^= v = v + T | 0, T ^= B = B + (U = U >>> 16 | U << 16) | 0, T = T >>> 20 | T << 12, z ^= E = E + x | 0, x ^= F = F + (z = z >>> 16 | z << 16) | 0, x = x >>> 20 | x << 12, G ^= _ = _ + A | 0, A ^= N = N + (G = G >>> 16 | G << 16) | 0, A = A >>> 20 | A << 12, W ^= P = P + M | 0, M ^= L = L + (W = W >>> 16 | W << 16) | 0, M = M >>> 20 | M << 12, G ^= _ = _ + A | 0, A ^= N = N + (G = G >>> 24 | G << 8) | 0, A = A >>> 25 | A << 7, W ^= P = P + M | 0, M ^= L = L + (W = W >>> 24 | W << 8) | 0, M = M >>> 25 | M << 7, z ^= E = E + x | 0, x ^= F = F + (z = z >>> 24 | z << 8) | 0, x = x >>> 25 | x << 7, U ^= v = v + T | 0, T ^= B = B + (U = U >>> 24 | U << 8) | 0, T = T >>> 25 | T << 7, W ^= v = v + x | 0, x ^= N = N + (W = W >>> 16 | W << 16) | 0, x = x >>> 20 | x << 12, U ^= E = E + A | 0, A ^= L = L + (U = U >>> 16 | U << 16) | 0, A = A >>> 20 | A << 12, z ^= _ = _ + M | 0, M ^= B = B + (z = z >>> 16 | z << 16) | 0, M = M >>> 20 | M << 12, G ^= P = P + T | 0, T ^= F = F + (G = G >>> 16 | G << 16) | 0, T = T >>> 20 | T << 12, z ^= _ = _ + M | 0, M ^= B = B + (z = z >>> 24 | z << 8) | 0, M = M >>> 25 | M << 7, G ^= P = P + T | 0, T ^= F = F + (G = G >>> 24 | G << 8) | 0, T = T >>> 25 | T << 7, U ^= E = E + A | 0, A ^= L = L + (U = U >>> 24 | U << 8) | 0, A = A >>> 25 | A << 7, W ^= v = v + x | 0, x ^= N = N + (W = W >>> 24 | W << 8) | 0, x = x >>> 25 | x << 7;
                        n.writeUint32LE(v + 1634760805 | 0, e, 0), n.writeUint32LE(E + 857760878 | 0, e, 4), n.writeUint32LE(_ + 2036477234 | 0, e, 8), n.writeUint32LE(P + 1797285236 | 0, e, 12), n.writeUint32LE(T + i | 0, e, 16), n.writeUint32LE(x + o | 0, e, 20), n.writeUint32LE(A + a | 0, e, 24), n.writeUint32LE(M + s | 0, e, 28), n.writeUint32LE(B + c | 0, e, 32), n.writeUint32LE(F + u | 0, e, 36), n.writeUint32LE(N + l | 0, e, 40), n.writeUint32LE(L + d | 0, e, 44), n.writeUint32LE(U + f | 0, e, 48), n.writeUint32LE(z + p | 0, e, 52), n.writeUint32LE(G + y | 0, e, 56), n.writeUint32LE(W + g | 0, e, 60)
                    }(u, s, e);
                    for (var d = l; d < l + 64 && d < r.length; d++) o[d] = r[d] ^ u[d - l];
                    ! function(e, t, r) {
                        for (var n = 1; r--;) n = n + (255 & e[t]) | 0, e[t] = 255 & n, n >>>= 8, t++;
                        if (n > 0) throw Error("ChaCha: counter overflow")
                    }(s, 0, c)
                }
                return i.wipe(u), 0 === a && i.wipe(s), o
            }
            t.streamXOR = streamXOR, t.stream = function(e, t, r, n) {
                return void 0 === n && (n = 0), i.wipe(r), streamXOR(e, t, r, r, n)
            }
        },
        51040: function(e, t, r) {
            "use strict";
            var n = r(48733),
                i = r(66508),
                o = r(55277),
                a = r(34310),
                s = r(51448);
            t.Cv = 32, t.WH = 12, t.pg = 16;
            var c = new Uint8Array(16),
                u = function() {
                    function ChaCha20Poly1305(e) {
                        if (this.nonceLength = t.WH, this.tagLength = t.pg, e.length !== t.Cv) throw Error("ChaCha20Poly1305 needs 32-byte key");
                        this._key = new Uint8Array(e)
                    }
                    return ChaCha20Poly1305.prototype.seal = function(e, t, r, i) {
                        if (e.length > 16) throw Error("ChaCha20Poly1305: incorrect nonce length");
                        var a, s = new Uint8Array(16);
                        s.set(e, s.length - e.length);
                        var c = new Uint8Array(32);
                        n.stream(this._key, s, c, 4);
                        var u = t.length + this.tagLength;
                        if (i) {
                            if (i.length !== u) throw Error("ChaCha20Poly1305: incorrect destination length");
                            a = i
                        } else a = new Uint8Array(u);
                        return n.streamXOR(this._key, s, t, a, 4), this._authenticate(a.subarray(a.length - this.tagLength, a.length), c, a.subarray(0, a.length - this.tagLength), r), o.wipe(s), a
                    }, ChaCha20Poly1305.prototype.open = function(e, t, r, i) {
                        if (e.length > 16) throw Error("ChaCha20Poly1305: incorrect nonce length");
                        if (t.length < this.tagLength) return null;
                        var a, c = new Uint8Array(16);
                        c.set(e, c.length - e.length);
                        var u = new Uint8Array(32);
                        n.stream(this._key, c, u, 4);
                        var l = new Uint8Array(this.tagLength);
                        if (this._authenticate(l, u, t.subarray(0, t.length - this.tagLength), r), !s.equal(l, t.subarray(t.length - this.tagLength, t.length))) return null;
                        var d = t.length - this.tagLength;
                        if (i) {
                            if (i.length !== d) throw Error("ChaCha20Poly1305: incorrect destination length");
                            a = i
                        } else a = new Uint8Array(d);
                        return n.streamXOR(this._key, c, t.subarray(0, t.length - this.tagLength), a, 4), o.wipe(c), a
                    }, ChaCha20Poly1305.prototype.clean = function() {
                        return o.wipe(this._key), this
                    }, ChaCha20Poly1305.prototype._authenticate = function(e, t, r, n) {
                        var s = new i.Poly1305(t);
                        n && (s.update(n), n.length % 16 > 0 && s.update(c.subarray(n.length % 16))), s.update(r), r.length % 16 > 0 && s.update(c.subarray(r.length % 16));
                        var u = new Uint8Array(8);
                        n && a.writeUint64LE(n.length, u), s.update(u), a.writeUint64LE(r.length, u), s.update(u);
                        for (var l = s.digest(), d = 0; d < l.length; d++) e[d] = l[d];
                        s.clean(), o.wipe(l), o.wipe(u)
                    }, ChaCha20Poly1305
                }();
            t.OK = u
        },
        51448: function(e, t) {
            "use strict";

            function compare(e, t) {
                if (e.length !== t.length) return 0;
                for (var r = 0, n = 0; n < e.length; n++) r |= e[n] ^ t[n];
                return 1 & r - 1 >>> 8
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.select = function(e, t, r) {
                return ~(e - 1) & t | e - 1 & r
            }, t.lessOrEqual = function(e, t) {
                return (0 | e) - (0 | t) - 1 >>> 31 & 1
            }, t.compare = compare, t.equal = function(e, t) {
                return 0 !== e.length && 0 !== t.length && 0 !== compare(e, t)
            }
        },
        12621: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.isSerializableHash = function(e) {
                return void 0 !== e.saveState && void 0 !== e.restoreState && void 0 !== e.cleanSavedState
            }
        },
        20342: function(e, t, r) {
            "use strict";
            var n = r(9922),
                i = r(55277),
                o = function() {
                    function HKDF(e, t, r, i) {
                        void 0 === r && (r = new Uint8Array(0)), this._counter = new Uint8Array(1), this._hash = e, this._info = i;
                        var o = n.hmac(this._hash, r, t);
                        this._hmac = new n.HMAC(e, o), this._buffer = new Uint8Array(this._hmac.digestLength), this._bufpos = this._buffer.length
                    }
                    return HKDF.prototype._fillBuffer = function() {
                        this._counter[0]++;
                        var e = this._counter[0];
                        if (0 === e) throw Error("hkdf: cannot expand more");
                        this._hmac.reset(), e > 1 && this._hmac.update(this._buffer), this._info && this._hmac.update(this._info), this._hmac.update(this._counter), this._hmac.finish(this._buffer), this._bufpos = 0
                    }, HKDF.prototype.expand = function(e) {
                        for (var t = new Uint8Array(e), r = 0; r < t.length; r++) this._bufpos === this._buffer.length && this._fillBuffer(), t[r] = this._buffer[this._bufpos++];
                        return t
                    }, HKDF.prototype.clean = function() {
                        this._hmac.clean(), i.wipe(this._buffer), i.wipe(this._counter), this._bufpos = 0
                    }, HKDF
                }();
            t.t = o
        },
        9922: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            var n = r(12621),
                i = r(51448),
                o = r(55277),
                a = function() {
                    function HMAC(e, t) {
                        this._finished = !1, this._inner = new e, this._outer = new e, this.blockSize = this._outer.blockSize, this.digestLength = this._outer.digestLength;
                        var r = new Uint8Array(this.blockSize);
                        t.length > this.blockSize ? this._inner.update(t).finish(r).clean() : r.set(t);
                        for (var i = 0; i < r.length; i++) r[i] ^= 54;
                        this._inner.update(r);
                        for (var i = 0; i < r.length; i++) r[i] ^= 106;
                        this._outer.update(r), n.isSerializableHash(this._inner) && n.isSerializableHash(this._outer) && (this._innerKeyedState = this._inner.saveState(), this._outerKeyedState = this._outer.saveState()), o.wipe(r)
                    }
                    return HMAC.prototype.reset = function() {
                        if (!n.isSerializableHash(this._inner) || !n.isSerializableHash(this._outer)) throw Error("hmac: can't reset() because hash doesn't implement restoreState()");
                        return this._inner.restoreState(this._innerKeyedState), this._outer.restoreState(this._outerKeyedState), this._finished = !1, this
                    }, HMAC.prototype.clean = function() {
                        n.isSerializableHash(this._inner) && this._inner.cleanSavedState(this._innerKeyedState), n.isSerializableHash(this._outer) && this._outer.cleanSavedState(this._outerKeyedState), this._inner.clean(), this._outer.clean()
                    }, HMAC.prototype.update = function(e) {
                        return this._inner.update(e), this
                    }, HMAC.prototype.finish = function(e) {
                        return this._finished ? this._outer.finish(e) : (this._inner.finish(e), this._outer.update(e.subarray(0, this.digestLength)).finish(e), this._finished = !0), this
                    }, HMAC.prototype.digest = function() {
                        var e = new Uint8Array(this.digestLength);
                        return this.finish(e), e
                    }, HMAC.prototype.saveState = function() {
                        if (!n.isSerializableHash(this._inner)) throw Error("hmac: can't saveState() because hash doesn't implement it");
                        return this._inner.saveState()
                    }, HMAC.prototype.restoreState = function(e) {
                        if (!n.isSerializableHash(this._inner) || !n.isSerializableHash(this._outer)) throw Error("hmac: can't restoreState() because hash doesn't implement it");
                        return this._inner.restoreState(e), this._outer.restoreState(this._outerKeyedState), this._finished = !1, this
                    }, HMAC.prototype.cleanSavedState = function(e) {
                        if (!n.isSerializableHash(this._inner)) throw Error("hmac: can't cleanSavedState() because hash doesn't implement it");
                        this._inner.cleanSavedState(e)
                    }, HMAC
                }();
            t.HMAC = a, t.hmac = function(e, t, r) {
                var n = new a(e, t);
                n.update(r);
                var i = n.digest();
                return n.clean(), i
            }, t.equal = i.equal
        },
        62140: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.mul = Math.imul || function(e, t) {
                var r = 65535 & e,
                    n = 65535 & t;
                return r * n + ((e >>> 16 & 65535) * n + r * (t >>> 16 & 65535) << 16 >>> 0) | 0
            }, t.add = function(e, t) {
                return e + t | 0
            }, t.sub = function(e, t) {
                return e - t | 0
            }, t.rotl = function(e, t) {
                return e << t | e >>> 32 - t
            }, t.rotr = function(e, t) {
                return e << 32 - t | e >>> t
            }, t.isInteger = Number.isInteger || function(e) {
                return "number" == typeof e && isFinite(e) && Math.floor(e) === e
            }, t.MAX_SAFE_INTEGER = 9007199254740991, t.isSafeInteger = function(e) {
                return t.isInteger(e) && e >= -t.MAX_SAFE_INTEGER && e <= t.MAX_SAFE_INTEGER
            }
        },
        66508: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            var n = r(51448),
                i = r(55277);
            t.DIGEST_LENGTH = 16;
            var o = function() {
                function Poly1305(e) {
                    this.digestLength = t.DIGEST_LENGTH, this._buffer = new Uint8Array(16), this._r = new Uint16Array(10), this._h = new Uint16Array(10), this._pad = new Uint16Array(8), this._leftover = 0, this._fin = 0, this._finished = !1;
                    var r = e[0] | e[1] << 8;
                    this._r[0] = 8191 & r;
                    var n = e[2] | e[3] << 8;
                    this._r[1] = (r >>> 13 | n << 3) & 8191;
                    var i = e[4] | e[5] << 8;
                    this._r[2] = (n >>> 10 | i << 6) & 7939;
                    var o = e[6] | e[7] << 8;
                    this._r[3] = (i >>> 7 | o << 9) & 8191;
                    var a = e[8] | e[9] << 8;
                    this._r[4] = (o >>> 4 | a << 12) & 255, this._r[5] = a >>> 1 & 8190;
                    var s = e[10] | e[11] << 8;
                    this._r[6] = (a >>> 14 | s << 2) & 8191;
                    var c = e[12] | e[13] << 8;
                    this._r[7] = (s >>> 11 | c << 5) & 8065;
                    var u = e[14] | e[15] << 8;
                    this._r[8] = (c >>> 8 | u << 8) & 8191, this._r[9] = u >>> 5 & 127, this._pad[0] = e[16] | e[17] << 8, this._pad[1] = e[18] | e[19] << 8, this._pad[2] = e[20] | e[21] << 8, this._pad[3] = e[22] | e[23] << 8, this._pad[4] = e[24] | e[25] << 8, this._pad[5] = e[26] | e[27] << 8, this._pad[6] = e[28] | e[29] << 8, this._pad[7] = e[30] | e[31] << 8
                }
                return Poly1305.prototype._blocks = function(e, t, r) {
                    for (var n = this._fin ? 0 : 2048, i = this._h[0], o = this._h[1], a = this._h[2], s = this._h[3], c = this._h[4], u = this._h[5], l = this._h[6], d = this._h[7], f = this._h[8], p = this._h[9], y = this._r[0], g = this._r[1], v = this._r[2], E = this._r[3], _ = this._r[4], P = this._r[5], T = this._r[6], x = this._r[7], A = this._r[8], M = this._r[9]; r >= 16;) {
                        var B, F = e[t + 0] | e[t + 1] << 8;
                        i += 8191 & F;
                        var N = e[t + 2] | e[t + 3] << 8;
                        o += (F >>> 13 | N << 3) & 8191;
                        var L = e[t + 4] | e[t + 5] << 8;
                        a += (N >>> 10 | L << 6) & 8191;
                        var U = e[t + 6] | e[t + 7] << 8;
                        s += (L >>> 7 | U << 9) & 8191;
                        var z = e[t + 8] | e[t + 9] << 8;
                        c += (U >>> 4 | z << 12) & 8191, u += z >>> 1 & 8191;
                        var G = e[t + 10] | e[t + 11] << 8;
                        l += (z >>> 14 | G << 2) & 8191;
                        var W = e[t + 12] | e[t + 13] << 8;
                        d += (G >>> 11 | W << 5) & 8191;
                        var V = e[t + 14] | e[t + 15] << 8;
                        f += (W >>> 8 | V << 8) & 8191, p += V >>> 5 | n;
                        var Q = 0;
                        Q = (B = 0 + i * y + o * (5 * M) + a * (5 * A) + s * (5 * x) + c * (5 * T)) >>> 13, B &= 8191, B += u * (5 * P) + l * (5 * _) + d * (5 * E) + f * (5 * v) + p * (5 * g), Q += B >>> 13, B &= 8191;
                        var K = Q;
                        K += i * g + o * y + a * (5 * M) + s * (5 * A) + c * (5 * x), Q = K >>> 13, K &= 8191, K += u * (5 * T) + l * (5 * P) + d * (5 * _) + f * (5 * E) + p * (5 * v), Q += K >>> 13, K &= 8191;
                        var Y = Q;
                        Y += i * v + o * g + a * y + s * (5 * M) + c * (5 * A), Q = Y >>> 13, Y &= 8191, Y += u * (5 * x) + l * (5 * T) + d * (5 * P) + f * (5 * _) + p * (5 * E), Q += Y >>> 13, Y &= 8191;
                        var J = Q;
                        J += i * E + o * v + a * g + s * y + c * (5 * M), Q = J >>> 13, J &= 8191, J += u * (5 * A) + l * (5 * x) + d * (5 * T) + f * (5 * P) + p * (5 * _), Q += J >>> 13, J &= 8191;
                        var X = Q;
                        X += i * _ + o * E + a * v + s * g + c * y, Q = X >>> 13, X &= 8191, X += u * (5 * M) + l * (5 * A) + d * (5 * x) + f * (5 * T) + p * (5 * P), Q += X >>> 13, X &= 8191;
                        var er = Q;
                        er += i * P + o * _ + a * E + s * v + c * g, Q = er >>> 13, er &= 8191, er += u * y + l * (5 * M) + d * (5 * A) + f * (5 * x) + p * (5 * T), Q += er >>> 13, er &= 8191;
                        var en = Q;
                        en += i * T + o * P + a * _ + s * E + c * v, Q = en >>> 13, en &= 8191, en += u * g + l * y + d * (5 * M) + f * (5 * A) + p * (5 * x), Q += en >>> 13, en &= 8191;
                        var ei = Q;
                        ei += i * x + o * T + a * P + s * _ + c * E, Q = ei >>> 13, ei &= 8191, ei += u * v + l * g + d * y + f * (5 * M) + p * (5 * A), Q += ei >>> 13, ei &= 8191;
                        var eo = Q;
                        eo += i * A + o * x + a * T + s * P + c * _, Q = eo >>> 13, eo &= 8191, eo += u * E + l * v + d * g + f * y + p * (5 * M), Q += eo >>> 13, eo &= 8191;
                        var ea = Q;
                        ea += i * M + o * A + a * x + s * T + c * P, Q = ea >>> 13, ea &= 8191, ea += u * _ + l * E + d * v + f * g + p * y, Q += ea >>> 13, ea &= 8191, B = 8191 & (Q = (Q = (Q << 2) + Q | 0) + B | 0), Q >>>= 13, K += Q, i = B, o = K, a = Y, s = J, c = X, u = er, l = en, d = ei, f = eo, p = ea, t += 16, r -= 16
                    }
                    this._h[0] = i, this._h[1] = o, this._h[2] = a, this._h[3] = s, this._h[4] = c, this._h[5] = u, this._h[6] = l, this._h[7] = d, this._h[8] = f, this._h[9] = p
                }, Poly1305.prototype.finish = function(e, t) {
                    void 0 === t && (t = 0);
                    var r, n, i, o, a = new Uint16Array(10);
                    if (this._leftover) {
                        for (o = this._leftover, this._buffer[o++] = 1; o < 16; o++) this._buffer[o] = 0;
                        this._fin = 1, this._blocks(this._buffer, 0, 16)
                    }
                    for (r = this._h[1] >>> 13, this._h[1] &= 8191, o = 2; o < 10; o++) this._h[o] += r, r = this._h[o] >>> 13, this._h[o] &= 8191;
                    for (this._h[0] += 5 * r, r = this._h[0] >>> 13, this._h[0] &= 8191, this._h[1] += r, r = this._h[1] >>> 13, this._h[1] &= 8191, this._h[2] += r, a[0] = this._h[0] + 5, r = a[0] >>> 13, a[0] &= 8191, o = 1; o < 10; o++) a[o] = this._h[o] + r, r = a[o] >>> 13, a[o] &= 8191;
                    for (a[9] -= 8192, n = (1 ^ r) - 1, o = 0; o < 10; o++) a[o] &= n;
                    for (o = 0, n = ~n; o < 10; o++) this._h[o] = this._h[o] & n | a[o];
                    for (o = 1, this._h[0] = (this._h[0] | this._h[1] << 13) & 65535, this._h[1] = (this._h[1] >>> 3 | this._h[2] << 10) & 65535, this._h[2] = (this._h[2] >>> 6 | this._h[3] << 7) & 65535, this._h[3] = (this._h[3] >>> 9 | this._h[4] << 4) & 65535, this._h[4] = (this._h[4] >>> 12 | this._h[5] << 1 | this._h[6] << 14) & 65535, this._h[5] = (this._h[6] >>> 2 | this._h[7] << 11) & 65535, this._h[6] = (this._h[7] >>> 5 | this._h[8] << 8) & 65535, this._h[7] = (this._h[8] >>> 8 | this._h[9] << 5) & 65535, i = this._h[0] + this._pad[0], this._h[0] = 65535 & i; o < 8; o++) i = (this._h[o] + this._pad[o] | 0) + (i >>> 16) | 0, this._h[o] = 65535 & i;
                    return e[t + 0] = this._h[0] >>> 0, e[t + 1] = this._h[0] >>> 8, e[t + 2] = this._h[1] >>> 0, e[t + 3] = this._h[1] >>> 8, e[t + 4] = this._h[2] >>> 0, e[t + 5] = this._h[2] >>> 8, e[t + 6] = this._h[3] >>> 0, e[t + 7] = this._h[3] >>> 8, e[t + 8] = this._h[4] >>> 0, e[t + 9] = this._h[4] >>> 8, e[t + 10] = this._h[5] >>> 0, e[t + 11] = this._h[5] >>> 8, e[t + 12] = this._h[6] >>> 0, e[t + 13] = this._h[6] >>> 8, e[t + 14] = this._h[7] >>> 0, e[t + 15] = this._h[7] >>> 8, this._finished = !0, this
                }, Poly1305.prototype.update = function(e) {
                    var t, r = 0,
                        n = e.length;
                    if (this._leftover) {
                        (t = 16 - this._leftover) > n && (t = n);
                        for (var i = 0; i < t; i++) this._buffer[this._leftover + i] = e[r + i];
                        if (n -= t, r += t, this._leftover += t, this._leftover < 16) return this;
                        this._blocks(this._buffer, 0, 16), this._leftover = 0
                    }
                    if (n >= 16 && (t = n - n % 16, this._blocks(e, r, t), r += t, n -= t), n) {
                        for (var i = 0; i < n; i++) this._buffer[this._leftover + i] = e[r + i];
                        this._leftover += n
                    }
                    return this
                }, Poly1305.prototype.digest = function() {
                    if (this._finished) throw Error("Poly1305 was finished");
                    var e = new Uint8Array(16);
                    return this.finish(e), e
                }, Poly1305.prototype.clean = function() {
                    return i.wipe(this._buffer), i.wipe(this._r), i.wipe(this._h), i.wipe(this._pad), this._leftover = 0, this._fin = 0, this._finished = !0, this
                }, Poly1305
            }();
            t.Poly1305 = o, t.oneTimeAuth = function(e, t) {
                var r = new o(e);
                r.update(t);
                var n = r.digest();
                return r.clean(), n
            }, t.equal = function(e, r) {
                return e.length === t.DIGEST_LENGTH && r.length === t.DIGEST_LENGTH && n.equal(e, r)
            }
        },
        35077: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.randomStringForEntropy = t.randomString = t.randomUint32 = t.randomBytes = t.defaultRandomSource = void 0;
            let n = r(62739),
                i = r(34310),
                o = r(55277);

            function randomBytes(e, r = t.defaultRandomSource) {
                return r.randomBytes(e)
            }
            t.defaultRandomSource = new n.SystemRandomSource, t.randomBytes = randomBytes, t.randomUint32 = function(e = t.defaultRandomSource) {
                let r = randomBytes(4, e),
                    n = (0, i.readUint32LE)(r);
                return (0, o.wipe)(r), n
            };
            let a = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";

            function randomString(e, r = a, n = t.defaultRandomSource) {
                if (r.length < 2) throw Error("randomString charset is too short");
                if (r.length > 256) throw Error("randomString charset is too long");
                let i = "",
                    s = r.length,
                    c = 256 - 256 % s;
                for (; e > 0;) {
                    let t = randomBytes(Math.ceil(256 * e / c), n);
                    for (let n = 0; n < t.length && e > 0; n++) {
                        let o = t[n];
                        o < c && (i += r.charAt(o % s), e--)
                    }(0, o.wipe)(t)
                }
                return i
            }
            t.randomString = randomString, t.randomStringForEntropy = function(e, r = a, n = t.defaultRandomSource) {
                let i = Math.ceil(e / (Math.log(r.length) / Math.LN2));
                return randomString(i, r, n)
            }
        },
        85183: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.BrowserRandomSource = void 0, t.BrowserRandomSource = class {
                constructor() {
                    this.isAvailable = !1, this.isInstantiated = !1;
                    let e = "undefined" != typeof self ? self.crypto || self.msCrypto : null;
                    e && void 0 !== e.getRandomValues && (this._crypto = e, this.isAvailable = !0, this.isInstantiated = !0)
                }
                randomBytes(e) {
                    if (!this.isAvailable || !this._crypto) throw Error("Browser random byte generator is not available.");
                    let t = new Uint8Array(e);
                    for (let e = 0; e < t.length; e += 65536) this._crypto.getRandomValues(t.subarray(e, e + Math.min(t.length - e, 65536)));
                    return t
                }
            }
        },
        32586: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.NodeRandomSource = void 0;
            let n = r(55277);
            t.NodeRandomSource = class {
                constructor() {
                    this.isAvailable = !1, this.isInstantiated = !1; {
                        let e = r(35883);
                        e && e.randomBytes && (this._crypto = e, this.isAvailable = !0, this.isInstantiated = !0)
                    }
                }
                randomBytes(e) {
                    if (!this.isAvailable || !this._crypto) throw Error("Node.js random byte generator is not available.");
                    let t = this._crypto.randomBytes(e);
                    if (t.length !== e) throw Error("NodeRandomSource: got fewer bytes than requested");
                    let r = new Uint8Array(e);
                    for (let e = 0; e < r.length; e++) r[e] = t[e];
                    return (0, n.wipe)(t), r
                }
            }
        },
        62739: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.SystemRandomSource = void 0;
            let n = r(85183),
                i = r(32586);
            t.SystemRandomSource = class {
                constructor() {
                    if (this.isAvailable = !1, this.name = "", this._source = new n.BrowserRandomSource, this._source.isAvailable) {
                        this.isAvailable = !0, this.name = "Browser";
                        return
                    }
                    if (this._source = new i.NodeRandomSource, this._source.isAvailable) {
                        this.isAvailable = !0, this.name = "Node";
                        return
                    }
                }
                randomBytes(e) {
                    if (!this.isAvailable) throw Error("System random byte generator is not available.");
                    return this._source.randomBytes(e)
                }
            }
        },
        87853: function(e, t, r) {
            "use strict";
            var n = r(34310),
                i = r(55277);
            t.k = 32, t.cn = 64;
            var o = function() {
                function SHA256() {
                    this.digestLength = t.k, this.blockSize = t.cn, this._state = new Int32Array(8), this._temp = new Int32Array(64), this._buffer = new Uint8Array(128), this._bufferLength = 0, this._bytesHashed = 0, this._finished = !1, this.reset()
                }
                return SHA256.prototype._initState = function() {
                    this._state[0] = 1779033703, this._state[1] = 3144134277, this._state[2] = 1013904242, this._state[3] = 2773480762, this._state[4] = 1359893119, this._state[5] = 2600822924, this._state[6] = 528734635, this._state[7] = 1541459225
                }, SHA256.prototype.reset = function() {
                    return this._initState(), this._bufferLength = 0, this._bytesHashed = 0, this._finished = !1, this
                }, SHA256.prototype.clean = function() {
                    i.wipe(this._buffer), i.wipe(this._temp), this.reset()
                }, SHA256.prototype.update = function(e, t) {
                    if (void 0 === t && (t = e.length), this._finished) throw Error("SHA256: can't update because hash was finished.");
                    var r = 0;
                    if (this._bytesHashed += t, this._bufferLength > 0) {
                        for (; this._bufferLength < this.blockSize && t > 0;) this._buffer[this._bufferLength++] = e[r++], t--;
                        this._bufferLength === this.blockSize && (hashBlocks(this._temp, this._state, this._buffer, 0, this.blockSize), this._bufferLength = 0)
                    }
                    for (t >= this.blockSize && (r = hashBlocks(this._temp, this._state, e, r, t), t %= this.blockSize); t > 0;) this._buffer[this._bufferLength++] = e[r++], t--;
                    return this
                }, SHA256.prototype.finish = function(e) {
                    if (!this._finished) {
                        var t = this._bytesHashed,
                            r = this._bufferLength,
                            i = t % 64 < 56 ? 64 : 128;
                        this._buffer[r] = 128;
                        for (var o = r + 1; o < i - 8; o++) this._buffer[o] = 0;
                        n.writeUint32BE(t / 536870912 | 0, this._buffer, i - 8), n.writeUint32BE(t << 3, this._buffer, i - 4), hashBlocks(this._temp, this._state, this._buffer, 0, i), this._finished = !0
                    }
                    for (var o = 0; o < this.digestLength / 4; o++) n.writeUint32BE(this._state[o], e, 4 * o);
                    return this
                }, SHA256.prototype.digest = function() {
                    var e = new Uint8Array(this.digestLength);
                    return this.finish(e), e
                }, SHA256.prototype.saveState = function() {
                    if (this._finished) throw Error("SHA256: cannot save finished state");
                    return {
                        state: new Int32Array(this._state),
                        buffer: this._bufferLength > 0 ? new Uint8Array(this._buffer) : void 0,
                        bufferLength: this._bufferLength,
                        bytesHashed: this._bytesHashed
                    }
                }, SHA256.prototype.restoreState = function(e) {
                    return this._state.set(e.state), this._bufferLength = e.bufferLength, e.buffer && this._buffer.set(e.buffer), this._bytesHashed = e.bytesHashed, this._finished = !1, this
                }, SHA256.prototype.cleanSavedState = function(e) {
                    i.wipe(e.state), e.buffer && i.wipe(e.buffer), e.bufferLength = 0, e.bytesHashed = 0
                }, SHA256
            }();
            t.mE = o;
            var a = new Int32Array([1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298]);

            function hashBlocks(e, t, r, i, o) {
                for (; o >= 64;) {
                    for (var s = t[0], c = t[1], u = t[2], l = t[3], d = t[4], f = t[5], p = t[6], y = t[7], g = 0; g < 16; g++) {
                        var v = i + 4 * g;
                        e[g] = n.readUint32BE(r, v)
                    }
                    for (var g = 16; g < 64; g++) {
                        var E = e[g - 2],
                            _ = (E >>> 17 | E << 15) ^ (E >>> 19 | E << 13) ^ E >>> 10,
                            P = ((E = e[g - 15]) >>> 7 | E << 25) ^ (E >>> 18 | E << 14) ^ E >>> 3;
                        e[g] = (_ + e[g - 7] | 0) + (P + e[g - 16] | 0)
                    }
                    for (var g = 0; g < 64; g++) {
                        var _ = (((d >>> 6 | d << 26) ^ (d >>> 11 | d << 21) ^ (d >>> 25 | d << 7)) + (d & f ^ ~d & p) | 0) + (y + (a[g] + e[g] | 0) | 0) | 0,
                            P = ((s >>> 2 | s << 30) ^ (s >>> 13 | s << 19) ^ (s >>> 22 | s << 10)) + (s & c ^ s & u ^ c & u) | 0;
                        y = p, p = f, f = d, d = l + _ | 0, l = u, u = c, c = s, s = _ + P | 0
                    }
                    t[0] += s, t[1] += c, t[2] += u, t[3] += l, t[4] += d, t[5] += f, t[6] += p, t[7] += y, i += 64, o -= 64
                }
                return i
            }
            t.vp = function(e) {
                var t = new o;
                t.update(e);
                var r = t.digest();
                return t.clean(), r
            }
        },
        55277: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.wipe = function(e) {
                for (var t = 0; t < e.length; t++) e[t] = 0;
                return e
            }
        },
        38195: function(e, t, r) {
            "use strict";
            t.gi = t.Au = t.KS = t.kz = void 0;
            let n = r(35077),
                i = r(55277);

            function gf(e) {
                let t = new Float64Array(16);
                if (e)
                    for (let r = 0; r < e.length; r++) t[r] = e[r];
                return t
            }
            t.kz = 32, t.KS = 32;
            let o = new Uint8Array(32);
            o[0] = 9;
            let a = gf([56129, 1]);

            function car25519(e) {
                let t = 1;
                for (let r = 0; r < 16; r++) {
                    let n = e[r] + t + 65535;
                    t = Math.floor(n / 65536), e[r] = n - 65536 * t
                }
                e[0] += t - 1 + 37 * (t - 1)
            }

            function sel25519(e, t, r) {
                let n = ~(r - 1);
                for (let r = 0; r < 16; r++) {
                    let i = n & (e[r] ^ t[r]);
                    e[r] ^= i, t[r] ^= i
                }
            }

            function add(e, t, r) {
                for (let n = 0; n < 16; n++) e[n] = t[n] + r[n]
            }

            function sub(e, t, r) {
                for (let n = 0; n < 16; n++) e[n] = t[n] - r[n]
            }

            function mul(e, t, r) {
                let n, i, o = 0,
                    a = 0,
                    s = 0,
                    c = 0,
                    u = 0,
                    l = 0,
                    d = 0,
                    f = 0,
                    p = 0,
                    y = 0,
                    g = 0,
                    v = 0,
                    E = 0,
                    _ = 0,
                    P = 0,
                    T = 0,
                    x = 0,
                    A = 0,
                    M = 0,
                    B = 0,
                    F = 0,
                    N = 0,
                    L = 0,
                    U = 0,
                    z = 0,
                    G = 0,
                    W = 0,
                    V = 0,
                    Q = 0,
                    K = 0,
                    Y = 0,
                    J = r[0],
                    X = r[1],
                    er = r[2],
                    en = r[3],
                    ei = r[4],
                    eo = r[5],
                    ea = r[6],
                    es = r[7],
                    ec = r[8],
                    eu = r[9],
                    el = r[10],
                    ed = r[11],
                    ef = r[12],
                    ep = r[13],
                    eh = r[14],
                    em = r[15];
                o += (n = t[0]) * J, a += n * X, s += n * er, c += n * en, u += n * ei, l += n * eo, d += n * ea, f += n * es, p += n * ec, y += n * eu, g += n * el, v += n * ed, E += n * ef, _ += n * ep, P += n * eh, T += n * em, a += (n = t[1]) * J, s += n * X, c += n * er, u += n * en, l += n * ei, d += n * eo, f += n * ea, p += n * es, y += n * ec, g += n * eu, v += n * el, E += n * ed, _ += n * ef, P += n * ep, T += n * eh, x += n * em, s += (n = t[2]) * J, c += n * X, u += n * er, l += n * en, d += n * ei, f += n * eo, p += n * ea, y += n * es, g += n * ec, v += n * eu, E += n * el, _ += n * ed, P += n * ef, T += n * ep, x += n * eh, A += n * em, c += (n = t[3]) * J, u += n * X, l += n * er, d += n * en, f += n * ei, p += n * eo, y += n * ea, g += n * es, v += n * ec, E += n * eu, _ += n * el, P += n * ed, T += n * ef, x += n * ep, A += n * eh, M += n * em, u += (n = t[4]) * J, l += n * X, d += n * er, f += n * en, p += n * ei, y += n * eo, g += n * ea, v += n * es, E += n * ec, _ += n * eu, P += n * el, T += n * ed, x += n * ef, A += n * ep, M += n * eh, B += n * em, l += (n = t[5]) * J, d += n * X, f += n * er, p += n * en, y += n * ei, g += n * eo, v += n * ea, E += n * es, _ += n * ec, P += n * eu, T += n * el, x += n * ed, A += n * ef, M += n * ep, B += n * eh, F += n * em, d += (n = t[6]) * J, f += n * X, p += n * er, y += n * en, g += n * ei, v += n * eo, E += n * ea, _ += n * es, P += n * ec, T += n * eu, x += n * el, A += n * ed, M += n * ef, B += n * ep, F += n * eh, N += n * em, f += (n = t[7]) * J, p += n * X, y += n * er, g += n * en, v += n * ei, E += n * eo, _ += n * ea, P += n * es, T += n * ec, x += n * eu, A += n * el, M += n * ed, B += n * ef, F += n * ep, N += n * eh, L += n * em, p += (n = t[8]) * J, y += n * X, g += n * er, v += n * en, E += n * ei, _ += n * eo, P += n * ea, T += n * es, x += n * ec, A += n * eu, M += n * el, B += n * ed, F += n * ef, N += n * ep, L += n * eh, U += n * em, y += (n = t[9]) * J, g += n * X, v += n * er, E += n * en, _ += n * ei, P += n * eo, T += n * ea, x += n * es, A += n * ec, M += n * eu, B += n * el, F += n * ed, N += n * ef, L += n * ep, U += n * eh, z += n * em, g += (n = t[10]) * J, v += n * X, E += n * er, _ += n * en, P += n * ei, T += n * eo, x += n * ea, A += n * es, M += n * ec, B += n * eu, F += n * el, N += n * ed, L += n * ef, U += n * ep, z += n * eh, G += n * em, v += (n = t[11]) * J, E += n * X, _ += n * er, P += n * en, T += n * ei, x += n * eo, A += n * ea, M += n * es, B += n * ec, F += n * eu, N += n * el, L += n * ed, U += n * ef, z += n * ep, G += n * eh, W += n * em, E += (n = t[12]) * J, _ += n * X, P += n * er, T += n * en, x += n * ei, A += n * eo, M += n * ea, B += n * es, F += n * ec, N += n * eu, L += n * el, U += n * ed, z += n * ef, G += n * ep, W += n * eh, V += n * em, _ += (n = t[13]) * J, P += n * X, T += n * er, x += n * en, A += n * ei, M += n * eo, B += n * ea, F += n * es, N += n * ec, L += n * eu, U += n * el, z += n * ed, G += n * ef, W += n * ep, V += n * eh, Q += n * em, P += (n = t[14]) * J, T += n * X, x += n * er, A += n * en, M += n * ei, B += n * eo, F += n * ea, N += n * es, L += n * ec, U += n * eu, z += n * el, G += n * ed, W += n * ef, V += n * ep, Q += n * eh, K += n * em, T += (n = t[15]) * J, x += n * X, A += n * er, M += n * en, B += n * ei, F += n * eo, N += n * ea, L += n * es, U += n * ec, z += n * eu, G += n * el, W += n * ed, V += n * ef, Q += n * ep, K += n * eh, Y += n * em, o += 38 * x, a += 38 * A, s += 38 * M, c += 38 * B, u += 38 * F, l += 38 * N, d += 38 * L, f += 38 * U, p += 38 * z, y += 38 * G, g += 38 * W, v += 38 * V, E += 38 * Q, _ += 38 * K, P += 38 * Y, i = Math.floor((n = o + (i = 1) + 65535) / 65536), o = n - 65536 * i, i = Math.floor((n = a + i + 65535) / 65536), a = n - 65536 * i, i = Math.floor((n = s + i + 65535) / 65536), s = n - 65536 * i, i = Math.floor((n = c + i + 65535) / 65536), c = n - 65536 * i, i = Math.floor((n = u + i + 65535) / 65536), u = n - 65536 * i, i = Math.floor((n = l + i + 65535) / 65536), l = n - 65536 * i, i = Math.floor((n = d + i + 65535) / 65536), d = n - 65536 * i, i = Math.floor((n = f + i + 65535) / 65536), f = n - 65536 * i, i = Math.floor((n = p + i + 65535) / 65536), p = n - 65536 * i, i = Math.floor((n = y + i + 65535) / 65536), y = n - 65536 * i, i = Math.floor((n = g + i + 65535) / 65536), g = n - 65536 * i, i = Math.floor((n = v + i + 65535) / 65536), v = n - 65536 * i, i = Math.floor((n = E + i + 65535) / 65536), E = n - 65536 * i, i = Math.floor((n = _ + i + 65535) / 65536), _ = n - 65536 * i, i = Math.floor((n = P + i + 65535) / 65536), P = n - 65536 * i, i = Math.floor((n = T + i + 65535) / 65536), T = n - 65536 * i, o += i - 1 + 37 * (i - 1), i = Math.floor((n = o + (i = 1) + 65535) / 65536), o = n - 65536 * i, i = Math.floor((n = a + i + 65535) / 65536), a = n - 65536 * i, i = Math.floor((n = s + i + 65535) / 65536), s = n - 65536 * i, i = Math.floor((n = c + i + 65535) / 65536), c = n - 65536 * i, i = Math.floor((n = u + i + 65535) / 65536), u = n - 65536 * i, i = Math.floor((n = l + i + 65535) / 65536), l = n - 65536 * i, i = Math.floor((n = d + i + 65535) / 65536), d = n - 65536 * i, i = Math.floor((n = f + i + 65535) / 65536), f = n - 65536 * i, i = Math.floor((n = p + i + 65535) / 65536), p = n - 65536 * i, i = Math.floor((n = y + i + 65535) / 65536), y = n - 65536 * i, i = Math.floor((n = g + i + 65535) / 65536), g = n - 65536 * i, i = Math.floor((n = v + i + 65535) / 65536), v = n - 65536 * i, i = Math.floor((n = E + i + 65535) / 65536), E = n - 65536 * i, i = Math.floor((n = _ + i + 65535) / 65536), _ = n - 65536 * i, i = Math.floor((n = P + i + 65535) / 65536), P = n - 65536 * i, i = Math.floor((n = T + i + 65535) / 65536), T = n - 65536 * i, o += i - 1 + 37 * (i - 1), e[0] = o, e[1] = a, e[2] = s, e[3] = c, e[4] = u, e[5] = l, e[6] = d, e[7] = f, e[8] = p, e[9] = y, e[10] = g, e[11] = v, e[12] = E, e[13] = _, e[14] = P, e[15] = T
            }

            function scalarMult(e, t) {
                let r = new Uint8Array(32),
                    n = new Float64Array(80),
                    i = gf(),
                    o = gf(),
                    s = gf(),
                    c = gf(),
                    u = gf(),
                    l = gf();
                for (let t = 0; t < 31; t++) r[t] = e[t];
                r[31] = 127 & e[31] | 64, r[0] &= 248,
                    function(e, t) {
                        for (let r = 0; r < 16; r++) e[r] = t[2 * r] + (t[2 * r + 1] << 8);
                        e[15] &= 32767
                    }(n, t);
                for (let e = 0; e < 16; e++) o[e] = n[e];
                i[0] = c[0] = 1;
                for (let e = 254; e >= 0; --e) {
                    let t = r[e >>> 3] >>> (7 & e) & 1;
                    sel25519(i, o, t), sel25519(s, c, t), add(u, i, s), sub(i, i, s), add(s, o, c), sub(o, o, c), mul(c, u, u), mul(l, i, i), mul(i, s, i), mul(s, o, u), add(u, i, s), sub(i, i, s), mul(o, i, i), sub(s, c, l), mul(i, s, a), add(i, i, c), mul(s, s, i), mul(i, c, l), mul(c, o, n), mul(o, u, u), sel25519(i, o, t), sel25519(s, c, t)
                }
                for (let e = 0; e < 16; e++) n[e + 16] = i[e], n[e + 32] = s[e], n[e + 48] = o[e], n[e + 64] = c[e];
                let d = n.subarray(32),
                    f = n.subarray(16);
                ! function(e, t) {
                    let r = gf();
                    for (let e = 0; e < 16; e++) r[e] = t[e];
                    for (let e = 253; e >= 0; e--) mul(r, r, r), 2 !== e && 4 !== e && mul(r, r, t);
                    for (let t = 0; t < 16; t++) e[t] = r[t]
                }(d, d), mul(f, f, d);
                let p = new Uint8Array(32);
                return ! function(e, t) {
                    let r = gf(),
                        n = gf();
                    for (let e = 0; e < 16; e++) n[e] = t[e];
                    car25519(n), car25519(n), car25519(n);
                    for (let e = 0; e < 2; e++) {
                        r[0] = n[0] - 65517;
                        for (let e = 1; e < 15; e++) r[e] = n[e] - 65535 - (r[e - 1] >> 16 & 1), r[e - 1] &= 65535;
                        r[15] = n[15] - 32767 - (r[14] >> 16 & 1);
                        let e = r[15] >> 16 & 1;
                        r[14] &= 65535, sel25519(n, r, 1 - e)
                    }
                    for (let t = 0; t < 16; t++) e[2 * t] = 255 & n[t], e[2 * t + 1] = n[t] >> 8
                }(p, f), p
            }
            t.Au = function(e) {
                let r = (0, n.randomBytes)(32, e),
                    a = function(e) {
                        if (e.length !== t.KS) throw Error(`x25519: seed must be ${t.KS} bytes`);
                        let r = new Uint8Array(e),
                            n = scalarMult(r, o);
                        return {
                            publicKey: n,
                            secretKey: r
                        }
                    }(r);
                return (0, i.wipe)(r), a
            }, t.gi = function(e, r, n = !1) {
                if (e.length !== t.kz) throw Error("X25519: incorrect secret key length");
                if (r.length !== t.kz) throw Error("X25519: incorrect public key length");
                let i = scalarMult(e, r);
                if (n) {
                    let e = 0;
                    for (let t = 0; t < i.length; t++) e |= i[t];
                    if (0 === e) throw Error("X25519: invalid shared key")
                }
                return i
            }
        },
        24584: function() {},
        72852: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            let n = r(1812);
            n.__exportStar(r(53248), t), n.__exportStar(r(38520), t)
        },
        53248: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.ONE_THOUSAND = t.ONE_HUNDRED = void 0, t.ONE_HUNDRED = 100, t.ONE_THOUSAND = 1e3
        },
        38520: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.ONE_YEAR = t.FOUR_WEEKS = t.THREE_WEEKS = t.TWO_WEEKS = t.ONE_WEEK = t.THIRTY_DAYS = t.SEVEN_DAYS = t.FIVE_DAYS = t.THREE_DAYS = t.ONE_DAY = t.TWENTY_FOUR_HOURS = t.TWELVE_HOURS = t.SIX_HOURS = t.THREE_HOURS = t.ONE_HOUR = t.SIXTY_MINUTES = t.THIRTY_MINUTES = t.TEN_MINUTES = t.FIVE_MINUTES = t.ONE_MINUTE = t.SIXTY_SECONDS = t.THIRTY_SECONDS = t.TEN_SECONDS = t.FIVE_SECONDS = t.ONE_SECOND = void 0, t.ONE_SECOND = 1, t.FIVE_SECONDS = 5, t.TEN_SECONDS = 10, t.THIRTY_SECONDS = 30, t.SIXTY_SECONDS = 60, t.ONE_MINUTE = t.SIXTY_SECONDS, t.FIVE_MINUTES = 5 * t.ONE_MINUTE, t.TEN_MINUTES = 10 * t.ONE_MINUTE, t.THIRTY_MINUTES = 30 * t.ONE_MINUTE, t.SIXTY_MINUTES = 60 * t.ONE_MINUTE, t.ONE_HOUR = t.SIXTY_MINUTES, t.THREE_HOURS = 3 * t.ONE_HOUR, t.SIX_HOURS = 6 * t.ONE_HOUR, t.TWELVE_HOURS = 12 * t.ONE_HOUR, t.TWENTY_FOUR_HOURS = 24 * t.ONE_HOUR, t.ONE_DAY = t.TWENTY_FOUR_HOURS, t.THREE_DAYS = 3 * t.ONE_DAY, t.FIVE_DAYS = 5 * t.ONE_DAY, t.SEVEN_DAYS = 7 * t.ONE_DAY, t.THIRTY_DAYS = 30 * t.ONE_DAY, t.ONE_WEEK = t.SEVEN_DAYS, t.TWO_WEEKS = 2 * t.ONE_WEEK, t.THREE_WEEKS = 3 * t.ONE_WEEK, t.FOUR_WEEKS = 4 * t.ONE_WEEK, t.ONE_YEAR = 365 * t.ONE_DAY
        },
        58619: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            let n = r(1812);
            n.__exportStar(r(6954), t), n.__exportStar(r(91895), t), n.__exportStar(r(21087), t), n.__exportStar(r(72852), t)
        },
        21087: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            let n = r(1812);
            n.__exportStar(r(36448), t)
        },
        36448: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.IWatch = void 0, t.IWatch = class {}
        },
        89893: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.fromMiliseconds = t.toMiliseconds = void 0;
            let n = r(72852);
            t.toMiliseconds = function(e) {
                return e * n.ONE_THOUSAND
            }, t.fromMiliseconds = function(e) {
                return Math.floor(e / n.ONE_THOUSAND)
            }
        },
        18995: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.delay = void 0, t.delay = function(e) {
                return new Promise(t => {
                    setTimeout(() => {
                        t(!0)
                    }, e)
                })
            }
        },
        6954: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            let n = r(1812);
            n.__exportStar(r(18995), t), n.__exportStar(r(89893), t)
        },
        91895: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.Watch = void 0;
            let Watch = class Watch {
                constructor() {
                    this.timestamps = new Map
                }
                start(e) {
                    if (this.timestamps.has(e)) throw Error(`Watch already started for label: ${e}`);
                    this.timestamps.set(e, {
                        started: Date.now()
                    })
                }
                stop(e) {
                    let t = this.get(e);
                    if (void 0 !== t.elapsed) throw Error(`Watch already stopped for label: ${e}`);
                    let r = Date.now() - t.started;
                    this.timestamps.set(e, {
                        started: t.started,
                        elapsed: r
                    })
                }
                get(e) {
                    let t = this.timestamps.get(e);
                    if (void 0 === t) throw Error(`No timestamp found for label: ${e}`);
                    return t
                }
                elapsed(e) {
                    let t = this.get(e),
                        r = t.elapsed || Date.now() - t.started;
                    return r
                }
            };
            t.Watch = Watch, t.default = Watch
        },
        1812: function(e, t, r) {
            "use strict";
            r.r(t), r.d(t, {
                __assign: function() {
                    return __assign
                },
                __asyncDelegator: function() {
                    return __asyncDelegator
                },
                __asyncGenerator: function() {
                    return __asyncGenerator
                },
                __asyncValues: function() {
                    return __asyncValues
                },
                __await: function() {
                    return __await
                },
                __awaiter: function() {
                    return __awaiter
                },
                __classPrivateFieldGet: function() {
                    return __classPrivateFieldGet
                },
                __classPrivateFieldSet: function() {
                    return __classPrivateFieldSet
                },
                __createBinding: function() {
                    return __createBinding
                },
                __decorate: function() {
                    return __decorate
                },
                __exportStar: function() {
                    return __exportStar
                },
                __extends: function() {
                    return __extends
                },
                __generator: function() {
                    return __generator
                },
                __importDefault: function() {
                    return __importDefault
                },
                __importStar: function() {
                    return __importStar
                },
                __makeTemplateObject: function() {
                    return __makeTemplateObject
                },
                __metadata: function() {
                    return __metadata
                },
                __param: function() {
                    return __param
                },
                __read: function() {
                    return __read
                },
                __rest: function() {
                    return __rest
                },
                __spread: function() {
                    return __spread
                },
                __spreadArrays: function() {
                    return __spreadArrays
                },
                __values: function() {
                    return __values
                }
            });
            /*! *****************************************************************************
            Copyright (c) Microsoft Corporation.

            Permission to use, copy, modify, and/or distribute this software for any
            purpose with or without fee is hereby granted.

            THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
            REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
            AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
            INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
            LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
            OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
            PERFORMANCE OF THIS SOFTWARE.
            ***************************************************************************** */
            var extendStatics = function(e, t) {
                return (extendStatics = Object.setPrototypeOf || ({
                    __proto__: []
                }) instanceof Array && function(e, t) {
                    e.__proto__ = t
                } || function(e, t) {
                    for (var r in t) t.hasOwnProperty(r) && (e[r] = t[r])
                })(e, t)
            };

            function __extends(e, t) {
                function __() {
                    this.constructor = e
                }
                extendStatics(e, t), e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype, new __)
            }
            var __assign = function() {
                return (__assign = Object.assign || function(e) {
                    for (var t, r = 1, n = arguments.length; r < n; r++)
                        for (var i in t = arguments[r]) Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i]);
                    return e
                }).apply(this, arguments)
            };

            function __rest(e, t) {
                var r = {};
                for (var n in e) Object.prototype.hasOwnProperty.call(e, n) && 0 > t.indexOf(n) && (r[n] = e[n]);
                if (null != e && "function" == typeof Object.getOwnPropertySymbols)
                    for (var i = 0, n = Object.getOwnPropertySymbols(e); i < n.length; i++) 0 > t.indexOf(n[i]) && Object.prototype.propertyIsEnumerable.call(e, n[i]) && (r[n[i]] = e[n[i]]);
                return r
            }

            function __decorate(e, t, r, n) {
                var i, o = arguments.length,
                    a = o < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, r) : n;
                if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, r, n);
                else
                    for (var s = e.length - 1; s >= 0; s--)(i = e[s]) && (a = (o < 3 ? i(a) : o > 3 ? i(t, r, a) : i(t, r)) || a);
                return o > 3 && a && Object.defineProperty(t, r, a), a
            }

            function __param(e, t) {
                return function(r, n) {
                    t(r, n, e)
                }
            }

            function __metadata(e, t) {
                if ("object" == typeof Reflect && "function" == typeof Reflect.metadata) return Reflect.metadata(e, t)
            }

            function __awaiter(e, t, r, n) {
                return new(r || (r = Promise))(function(i, o) {
                    function fulfilled(e) {
                        try {
                            step(n.next(e))
                        } catch (e) {
                            o(e)
                        }
                    }

                    function rejected(e) {
                        try {
                            step(n.throw(e))
                        } catch (e) {
                            o(e)
                        }
                    }

                    function step(e) {
                        var t;
                        e.done ? i(e.value) : ((t = e.value) instanceof r ? t : new r(function(e) {
                            e(t)
                        })).then(fulfilled, rejected)
                    }
                    step((n = n.apply(e, t || [])).next())
                })
            }

            function __generator(e, t) {
                var r, n, i, o, a = {
                    label: 0,
                    sent: function() {
                        if (1 & i[0]) throw i[1];
                        return i[1]
                    },
                    trys: [],
                    ops: []
                };
                return o = {
                    next: verb(0),
                    throw: verb(1),
                    return: verb(2)
                }, "function" == typeof Symbol && (o[Symbol.iterator] = function() {
                    return this
                }), o;

                function verb(o) {
                    return function(s) {
                        return function(o) {
                            if (r) throw TypeError("Generator is already executing.");
                            for (; a;) try {
                                if (r = 1, n && (i = 2 & o[0] ? n.return : o[0] ? n.throw || ((i = n.return) && i.call(n), 0) : n.next) && !(i = i.call(n, o[1])).done) return i;
                                switch (n = 0, i && (o = [2 & o[0], i.value]), o[0]) {
                                    case 0:
                                    case 1:
                                        i = o;
                                        break;
                                    case 4:
                                        return a.label++, {
                                            value: o[1],
                                            done: !1
                                        };
                                    case 5:
                                        a.label++, n = o[1], o = [0];
                                        continue;
                                    case 7:
                                        o = a.ops.pop(), a.trys.pop();
                                        continue;
                                    default:
                                        if (!(i = (i = a.trys).length > 0 && i[i.length - 1]) && (6 === o[0] || 2 === o[0])) {
                                            a = 0;
                                            continue
                                        }
                                        if (3 === o[0] && (!i || o[1] > i[0] && o[1] < i[3])) {
                                            a.label = o[1];
                                            break
                                        }
                                        if (6 === o[0] && a.label < i[1]) {
                                            a.label = i[1], i = o;
                                            break
                                        }
                                        if (i && a.label < i[2]) {
                                            a.label = i[2], a.ops.push(o);
                                            break
                                        }
                                        i[2] && a.ops.pop(), a.trys.pop();
                                        continue
                                }
                                o = t.call(e, a)
                            } catch (e) {
                                o = [6, e], n = 0
                            } finally {
                                r = i = 0
                            }
                            if (5 & o[0]) throw o[1];
                            return {
                                value: o[0] ? o[1] : void 0,
                                done: !0
                            }
                        }([o, s])
                    }
                }
            }

            function __createBinding(e, t, r, n) {
                void 0 === n && (n = r), e[n] = t[r]
            }

            function __exportStar(e, t) {
                for (var r in e) "default" === r || t.hasOwnProperty(r) || (t[r] = e[r])
            }

            function __values(e) {
                var t = "function" == typeof Symbol && Symbol.iterator,
                    r = t && e[t],
                    n = 0;
                if (r) return r.call(e);
                if (e && "number" == typeof e.length) return {
                    next: function() {
                        return e && n >= e.length && (e = void 0), {
                            value: e && e[n++],
                            done: !e
                        }
                    }
                };
                throw TypeError(t ? "Object is not iterable." : "Symbol.iterator is not defined.")
            }

            function __read(e, t) {
                var r = "function" == typeof Symbol && e[Symbol.iterator];
                if (!r) return e;
                var n, i, o = r.call(e),
                    a = [];
                try {
                    for (;
                        (void 0 === t || t-- > 0) && !(n = o.next()).done;) a.push(n.value)
                } catch (e) {
                    i = {
                        error: e
                    }
                } finally {
                    try {
                        n && !n.done && (r = o.return) && r.call(o)
                    } finally {
                        if (i) throw i.error
                    }
                }
                return a
            }

            function __spread() {
                for (var e = [], t = 0; t < arguments.length; t++) e = e.concat(__read(arguments[t]));
                return e
            }

            function __spreadArrays() {
                for (var e = 0, t = 0, r = arguments.length; t < r; t++) e += arguments[t].length;
                for (var n = Array(e), i = 0, t = 0; t < r; t++)
                    for (var o = arguments[t], a = 0, s = o.length; a < s; a++, i++) n[i] = o[a];
                return n
            }

            function __await(e) {
                return this instanceof __await ? (this.v = e, this) : new __await(e)
            }

            function __asyncGenerator(e, t, r) {
                if (!Symbol.asyncIterator) throw TypeError("Symbol.asyncIterator is not defined.");
                var n, i = r.apply(e, t || []),
                    o = [];
                return n = {}, verb("next"), verb("throw"), verb("return"), n[Symbol.asyncIterator] = function() {
                    return this
                }, n;

                function verb(e) {
                    i[e] && (n[e] = function(t) {
                        return new Promise(function(r, n) {
                            o.push([e, t, r, n]) > 1 || resume(e, t)
                        })
                    })
                }

                function resume(e, t) {
                    try {
                        var r;
                        (r = i[e](t)).value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(o[0][2], r)
                    } catch (e) {
                        settle(o[0][3], e)
                    }
                }

                function fulfill(e) {
                    resume("next", e)
                }

                function reject(e) {
                    resume("throw", e)
                }

                function settle(e, t) {
                    e(t), o.shift(), o.length && resume(o[0][0], o[0][1])
                }
            }

            function __asyncDelegator(e) {
                var t, r;
                return t = {}, verb("next"), verb("throw", function(e) {
                    throw e
                }), verb("return"), t[Symbol.iterator] = function() {
                    return this
                }, t;

                function verb(n, i) {
                    t[n] = e[n] ? function(t) {
                        return (r = !r) ? {
                            value: __await(e[n](t)),
                            done: "return" === n
                        } : i ? i(t) : t
                    } : i
                }
            }

            function __asyncValues(e) {
                if (!Symbol.asyncIterator) throw TypeError("Symbol.asyncIterator is not defined.");
                var t, r = e[Symbol.asyncIterator];
                return r ? r.call(e) : (e = __values(e), t = {}, verb("next"), verb("throw"), verb("return"), t[Symbol.asyncIterator] = function() {
                    return this
                }, t);

                function verb(r) {
                    t[r] = e[r] && function(t) {
                        return new Promise(function(n, i) {
                            ! function(e, t, r, n) {
                                Promise.resolve(n).then(function(t) {
                                    e({
                                        value: t,
                                        done: r
                                    })
                                }, t)
                            }(n, i, (t = e[r](t)).done, t.value)
                        })
                    }
                }
            }

            function __makeTemplateObject(e, t) {
                return Object.defineProperty ? Object.defineProperty(e, "raw", {
                    value: t
                }) : e.raw = t, e
            }

            function __importStar(e) {
                if (e && e.__esModule) return e;
                var t = {};
                if (null != e)
                    for (var r in e) Object.hasOwnProperty.call(e, r) && (t[r] = e[r]);
                return t.default = e, t
            }

            function __importDefault(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }

            function __classPrivateFieldGet(e, t) {
                if (!t.has(e)) throw TypeError("attempted to get private field on non-instance");
                return t.get(e)
            }

            function __classPrivateFieldSet(e, t, r) {
                if (!t.has(e)) throw TypeError("attempted to set private field on non-instance");
                return t.set(e, r), r
            }
        },
        3537: function(e, t, r) {
            "use strict";
            r.d(t, {
                AW: function() {
                    return E
                },
                rV: function() {
                    return T
                },
                gn: function() {
                    return ot
                },
                H1: function() {
                    return Xn
                },
                hF: function() {
                    return et
                },
                WG: function() {
                    return $
                },
                pe: function() {
                    return Cn
                },
                m$: function() {
                    return Un
                },
                vB: function() {
                    return Z
                },
                HI: function() {
                    return jn
                },
                E0: function() {
                    return it
                },
                Gq: function() {
                    return tt
                },
                $0: function() {
                    return qn
                },
                Z4: function() {
                    return nt
                },
                Bv: function() {
                    return yt
                },
                Au: function() {
                    return wn
                },
                jd: function() {
                    return An
                },
                gu: function() {
                    return On
                },
                D: function() {
                    return Fn
                },
                Z7: function() {
                    return b
                },
                cO: function() {
                    return ut
                },
                _H: function() {
                    return at
                },
                fc: function() {
                    return St
                },
                D6: function() {
                    return w
                },
                Hh: function() {
                    return ct
                },
                Ym: function() {
                    return _n
                },
                rj: function() {
                    return $n
                },
                jU: function() {
                    return je
                },
                gp: function() {
                    return te
                },
                rF: function() {
                    return an
                },
                Bw: function() {
                    return st
                },
                UG: function() {
                    return ee
                },
                xW: function() {
                    return At
                },
                b$: function() {
                    return $e
                },
                Ih: function() {
                    return Rt
                },
                h1: function() {
                    return Ut
                },
                Q8: function() {
                    return Vn
                },
                o8: function() {
                    return I
                },
                qt: function() {
                    return C
                },
                Dd: function() {
                    return _t
                },
                $t: function() {
                    return Vt
                },
                nf: function() {
                    return Kt
                },
                Q0: function() {
                    return Ct
                },
                in: function() {
                    return sn
                },
                p8: function() {
                    return Lt
                },
                sI: function() {
                    return Ft
                },
                al: function() {
                    return xt
                },
                L5: function() {
                    return H
                },
                EJ: function() {
                    return Dt
                },
                Z2: function() {
                    return cn
                },
                PM: function() {
                    return jt
                },
                hH: function() {
                    return Mt
                },
                ON: function() {
                    return zt
                },
                n: function() {
                    return $t
                },
                JT: function() {
                    return kt
                },
                M_: function() {
                    return m
                },
                jv: function() {
                    return wt
                },
                KC: function() {
                    return Bn
                },
                eG: function() {
                    return S
                },
                fK: function() {
                    return re
                },
                IP: function() {
                    return Yn
                },
                iP: function() {
                    return rt
                },
                M: function() {
                    return Ze
                },
                he: function() {
                    return mt
                },
                Ll: function() {
                    return Dn
                },
                EN: function() {
                    return Pe
                }
            });
            var n = r(51040),
                i = r(20342),
                o = r(35077),
                a = r(87853),
                s = r(38195),
                c = r(71188),
                u = r(69954),
                l = r(58619),
                d = r(849),
                f = r(36073),
                p = r(43824);
            r(24584);
            let y = {
                waku: {
                    publish: "waku_publish",
                    batchPublish: "waku_batchPublish",
                    subscribe: "waku_subscribe",
                    batchSubscribe: "waku_batchSubscribe",
                    subscription: "waku_subscription",
                    unsubscribe: "waku_unsubscribe",
                    batchUnsubscribe: "waku_batchUnsubscribe"
                },
                irn: {
                    publish: "irn_publish",
                    batchPublish: "irn_batchPublish",
                    subscribe: "irn_subscribe",
                    batchSubscribe: "irn_batchSubscribe",
                    subscription: "irn_subscription",
                    unsubscribe: "irn_unsubscribe",
                    batchUnsubscribe: "irn_batchUnsubscribe"
                },
                iridium: {
                    publish: "iridium_publish",
                    batchPublish: "iridium_batchPublish",
                    subscribe: "iridium_subscribe",
                    batchSubscribe: "iridium_batchSubscribe",
                    subscription: "iridium_subscription",
                    unsubscribe: "iridium_unsubscribe",
                    batchUnsubscribe: "iridium_batchUnsubscribe"
                }
            };
            var g = r(25566);

            function On(e, t = []) {
                let r = [];
                return Object.keys(e).forEach(n => {
                    if (t.length && !t.includes(n)) return;
                    let i = e[n];
                    r.push(...i.accounts)
                }), r
            }

            function k(e, t) {
                return e.includes(":") ? [e] : t.chains || []
            }
            let v = "base10",
                E = "base16",
                _ = "base64pad",
                P = "utf8",
                T = 1;

            function wn() {
                let e = s.Au();
                return {
                    privateKey: (0, c.BB)(e.secretKey, E),
                    publicKey: (0, c.BB)(e.publicKey, E)
                }
            }

            function An() {
                let e = (0, o.randomBytes)(32);
                return (0, c.BB)(e, E)
            }

            function Un(e, t) {
                let r = s.gi((0, c.mL)(e, E), (0, c.mL)(t, E)),
                    n = new i.t(a.mE, r).expand(32);
                return (0, c.BB)(n, E)
            }

            function _n(e) {
                let t = (0, a.vp)((0, c.mL)(e, E));
                return (0, c.BB)(t, E)
            }

            function $n(e) {
                let t = (0, a.vp)((0, c.mL)(e, P));
                return (0, c.BB)(t, E)
            }

            function $(e) {
                return Number((0, c.BB)(e, v))
            }

            function jn(e) {
                var t;
                let r = (t = "u" > typeof e.type ? e.type : 0, (0, c.mL)(`${t}`, v));
                if ($(r) === T && typeof e.senderPublicKey > "u") throw Error("Missing sender public key for type 1 envelope");
                let i = "u" > typeof e.senderPublicKey ? (0, c.mL)(e.senderPublicKey, E) : void 0,
                    a = "u" > typeof e.iv ? (0, c.mL)(e.iv, E) : (0, o.randomBytes)(12),
                    s = new n.OK((0, c.mL)(e.symKey, E)).seal(a, (0, c.mL)(e.message, P));
                return function(e) {
                    if ($(e.type) === T) {
                        if (typeof e.senderPublicKey > "u") throw Error("Missing sender public key for type 1 envelope");
                        return (0, c.BB)((0, c.zo)([e.type, e.senderPublicKey, e.iv, e.sealed]), _)
                    }
                    return (0, c.BB)((0, c.zo)([e.type, e.iv, e.sealed]), _)
                }({
                    type: r,
                    sealed: s,
                    iv: a,
                    senderPublicKey: i
                })
            }

            function Cn(e) {
                let t = new n.OK((0, c.mL)(e.symKey, E)),
                    {
                        sealed: r,
                        iv: i
                    } = Z(e.encoded),
                    o = t.open(i, r);
                if (null === o) throw Error("Failed to decrypt");
                return (0, c.BB)(o, P)
            }

            function Z(e) {
                let t = (0, c.mL)(e, _),
                    r = t.slice(0, 1);
                if ($(r) === T) {
                    let e = t.slice(1, 33),
                        n = t.slice(33, 45),
                        i = t.slice(45);
                    return {
                        type: r,
                        sealed: i,
                        iv: n,
                        senderPublicKey: e
                    }
                }
                let n = t.slice(1, 13),
                    i = t.slice(13);
                return {
                    type: r,
                    sealed: i,
                    iv: n
                }
            }

            function Dn(e, t) {
                let r = Z(e);
                return Pe({
                    type: $(r.type),
                    senderPublicKey: "u" > typeof r.senderPublicKey ? (0, c.BB)(r.senderPublicKey, E) : void 0,
                    receiverPublicKey: t ? .receiverPublicKey
                })
            }

            function Pe(e) {
                let t = e ? .type || 0;
                if (t === T) {
                    if (typeof e ? .senderPublicKey > "u") throw Error("missing sender public key");
                    if (typeof e ? .receiverPublicKey > "u") throw Error("missing receiver public key")
                }
                return {
                    type: t,
                    senderPublicKey: e ? .senderPublicKey,
                    receiverPublicKey: e ? .receiverPublicKey
                }
            }

            function Vn(e) {
                return e.type === T && "string" == typeof e.senderPublicKey && "string" == typeof e.receiverPublicKey
            }
            var x = Object.defineProperty,
                A = Object.getOwnPropertySymbols,
                M = Object.prototype.hasOwnProperty,
                B = Object.prototype.propertyIsEnumerable,
                Re = (e, t, r) => t in e ? x(e, t, {
                    enumerable: !0,
                    configurable: !0,
                    writable: !0,
                    value: r
                }) : e[t] = r,
                we = (e, t) => {
                    for (var r in t || (t = {})) M.call(t, r) && Re(e, r, t[r]);
                    if (A)
                        for (var r of A(t)) B.call(t, r) && Re(e, r, t[r]);
                    return e
                };
            let F = {
                reactNative: "react-native",
                node: "node",
                browser: "browser",
                unknown: "unknown"
            };

            function ee() {
                return "u" > typeof g && "u" > typeof g.versions && "u" > typeof g.versions.node
            }

            function $e() {
                return !(0, d.getDocument)() && !!(0, d.getNavigator)() && "ReactNative" === navigator.product
            }

            function je() {
                return !ee() && !!(0, d.getNavigator)()
            }

            function j() {
                return $e() ? F.reactNative : ee() ? F.node : je() ? F.browser : F.unknown
            }

            function Fn() {
                return (0, f.D)() || {
                    name: "",
                    description: "",
                    url: "",
                    icons: [""]
                }
            }

            function qn({
                protocol: e,
                version: t,
                relayUrl: n,
                sdkVersion: i,
                auth: o,
                projectId: a,
                useOnCloseEvent: s
            }) {
                var c;
                let l;
                let f = n.split("?"),
                    y = function(e, t, n) {
                        let i = function() {
                                if (j() === F.reactNative && "u" > typeof r.g && "u" > typeof(null == r.g ? void 0 : r.g.Platform)) {
                                    let {
                                        OS: e,
                                        Version: t
                                    } = r.g.Platform;
                                    return [e, t].join("-")
                                }
                                let e = (0, u.qY)();
                                if (null === e) return "unknown";
                                let t = e.os ? e.os.replace(" ", "").toLowerCase() : "unknown";
                                return "browser" === e.type ? [t, e.name, e.version].join("-") : [t, e.version].join("-")
                            }(),
                            o = function() {
                                var e;
                                let t = j();
                                return t === F.browser ? [t, (null == (e = (0, d.getLocation)()) ? void 0 : e.host) || "unknown"].join(":") : t
                            }();
                        return [
                            [e, t].join("-"), ["js", n].join("-"), i, o
                        ].join("/")
                    }(e, t, i),
                    g = (c = f[1] || "", l = we(we({}, l = p.parse(c)), {
                        auth: o,
                        ua: y,
                        projectId: a,
                        useOnCloseEvent: s || void 0
                    }), c = p.stringify(l));
                return f[0] + "?" + g
            }

            function O(e, t) {
                return e.filter(e => t.includes(e)).length === e.length
            }

            function Bn(e) {
                return Object.fromEntries(e.entries())
            }

            function Yn(e) {
                return new Map(Object.entries(e))
            }

            function Xn(e = l.FIVE_MINUTES, t) {
                let r, n, i;
                let o = (0, l.toMiliseconds)(e || l.FIVE_MINUTES);
                return {
                    resolve: e => {
                        i && r && (clearTimeout(i), r(e))
                    },
                    reject: e => {
                        i && n && (clearTimeout(i), n(e))
                    },
                    done: () => new Promise((e, a) => {
                        i = setTimeout(() => {
                            a(Error(t))
                        }, o), r = e, n = a
                    })
                }
            }

            function et(e, t, r) {
                return new Promise(async (n, i) => {
                    let o = setTimeout(() => i(Error(r)), t);
                    try {
                        let t = await e;
                        n(t)
                    } catch (e) {
                        i(e)
                    }
                    clearTimeout(o)
                })
            }

            function ne(e, t) {
                if ("string" == typeof t && t.startsWith(`${e}:`)) return t;
                if ("topic" === e.toLowerCase()) {
                    if ("string" != typeof t) throw Error('Value must be "string" for expirer target type: topic');
                    return `topic:${t}`
                }
                if ("id" === e.toLowerCase()) {
                    if ("number" != typeof t) throw Error('Value must be "number" for expirer target type: id');
                    return `id:${t}`
                }
                throw Error(`Unknown expirer target type: ${e}`)
            }

            function nt(e) {
                return ne("topic", e)
            }

            function tt(e) {
                return ne("id", e)
            }

            function rt(e) {
                let [t, r] = e.split(":"), n = {
                    id: void 0,
                    topic: void 0
                };
                if ("topic" === t && "string" == typeof r) n.topic = r;
                else if ("id" === t && Number.isInteger(Number(r))) n.id = Number(r);
                else throw Error(`Invalid target, expected id:number or topic:string, got ${t}:${r}`);
                return n
            }

            function ot(e, t) {
                return (0, l.fromMiliseconds)((t || Date.now()) + (0, l.toMiliseconds)(e))
            }

            function st(e) {
                return Date.now() >= (0, l.toMiliseconds)(e)
            }

            function it(e, t) {
                return `${e}${t?`:${t}`:""}`
            }

            function S(e = [], t = []) {
                return [...new Set([...e, ...t])]
            }
            async function ct({
                id: e,
                topic: t,
                wcDeepLink: n
            }) {
                try {
                    if (!n) return;
                    let i = "string" == typeof n ? JSON.parse(n) : n,
                        o = i ? .href;
                    if ("string" != typeof o) return;
                    o.endsWith("/") && (o = o.slice(0, -1));
                    let a = `${o}/wc?requestId=${e}&sessionTopic=${t}`,
                        s = j();
                    s === F.browser ? a.startsWith("https://") ? window.open(a, "_blank", "noreferrer noopener") : window.open(a, "_self", "noreferrer noopener") : s === F.reactNative && "u" > typeof(null == r.g ? void 0 : r.g.Linking) && await r.g.Linking.openURL(a)
                } catch (e) {
                    console.error(e)
                }
            }

            function at(e) {
                return e ? .relay || {
                    protocol: "irn"
                }
            }

            function ut(e) {
                let t = y[e];
                if (typeof t > "u") throw Error(`Relay Protocol not supported: ${e}`);
                return t
            }
            var N = Object.defineProperty,
                L = Object.getOwnPropertySymbols,
                U = Object.prototype.hasOwnProperty,
                z = Object.prototype.propertyIsEnumerable,
                He = (e, t, r) => t in e ? N(e, t, {
                    enumerable: !0,
                    configurable: !0,
                    writable: !0,
                    value: r
                }) : e[t] = r,
                pt = (e, t) => {
                    for (var r in t || (t = {})) U.call(t, r) && He(e, r, t[r]);
                    if (L)
                        for (var r of L(t)) z.call(t, r) && He(e, r, t[r]);
                    return e
                };

            function mt(e) {
                var t;
                let r = e.indexOf(":"),
                    n = -1 !== e.indexOf("?") ? e.indexOf("?") : void 0,
                    i = e.substring(0, r),
                    o = e.substring(r + 1, n).split("@"),
                    a = "u" > typeof n ? e.substring(n) : "",
                    s = p.parse(a);
                return {
                    protocol: i,
                    topic: (t = o[0]).startsWith("//") ? t.substring(2) : t,
                    version: parseInt(o[1], 10),
                    symKey: s.symKey,
                    relay: function(e, t = "-") {
                        let r = {},
                            n = "relay" + t;
                        return Object.keys(e).forEach(t => {
                            if (t.startsWith(n)) {
                                let i = t.replace(n, ""),
                                    o = e[t];
                                r[i] = o
                            }
                        }), r
                    }(s)
                }
            }

            function yt(e) {
                return `${e.protocol}:${e.topic}@${e.version}?` + p.stringify(pt({
                    symKey: e.symKey
                }, function(e, t = "-") {
                    let r = {};
                    return Object.keys(e).forEach(n => {
                        e[n] && (r["relay" + t + n] = e[n])
                    }), r
                }(e.relay)))
            }
            var G = Object.defineProperty,
                W = Object.defineProperties,
                V = Object.getOwnPropertyDescriptors,
                Q = Object.getOwnPropertySymbols,
                K = Object.prototype.hasOwnProperty,
                Y = Object.prototype.propertyIsEnumerable,
                Be = (e, t, r) => t in e ? G(e, t, {
                    enumerable: !0,
                    configurable: !0,
                    writable: !0,
                    value: r
                }) : e[t] = r,
                bt = (e, t) => {
                    for (var r in t || (t = {})) K.call(t, r) && Be(e, r, t[r]);
                    if (Q)
                        for (var r of Q(t)) Y.call(t, r) && Be(e, r, t[r]);
                    return e
                },
                Ot = (e, t) => W(e, V(t));

            function R(e) {
                let t = [];
                return e.forEach(e => {
                    let [r, n] = e.split(":");
                    t.push(`${r}:${n}`)
                }), t
            }

            function St(e, t) {
                let r = sn(e, t);
                if (r) throw Error(r.message);
                let n = {};
                for (let [t, r] of Object.entries(e)) n[t] = {
                    methods: r.methods,
                    events: r.events,
                    chains: r.accounts.map(e => `${e.split(":")[0]}:${e.split(":")[1]}`)
                };
                return n
            }

            function te(e) {
                return e.includes(":")
            }

            function Ze(e) {
                return te(e) ? e.split(":")[0] : e
            }

            function re(e) {
                var t, r, n;
                let i = {};
                if (!H(e)) return i;
                for (let [o, a] of Object.entries(e)) {
                    let e = te(o) ? [o] : a.chains,
                        s = a.methods || [],
                        c = a.events || [],
                        u = Ze(o);
                    i[u] = Ot(bt({}, i[u]), {
                        chains: S(e, null == (t = i[u]) ? void 0 : t.chains),
                        methods: S(s, null == (r = i[u]) ? void 0 : r.methods),
                        events: S(c, null == (n = i[u]) ? void 0 : n.events)
                    })
                }
                return i
            }
            let J = {
                    INVALID_METHOD: {
                        message: "Invalid method.",
                        code: 1001
                    },
                    INVALID_EVENT: {
                        message: "Invalid event.",
                        code: 1002
                    },
                    INVALID_UPDATE_REQUEST: {
                        message: "Invalid update request.",
                        code: 1003
                    },
                    INVALID_EXTEND_REQUEST: {
                        message: "Invalid extend request.",
                        code: 1004
                    },
                    INVALID_SESSION_SETTLE_REQUEST: {
                        message: "Invalid session settle request.",
                        code: 1005
                    },
                    UNAUTHORIZED_METHOD: {
                        message: "Unauthorized method.",
                        code: 3001
                    },
                    UNAUTHORIZED_EVENT: {
                        message: "Unauthorized event.",
                        code: 3002
                    },
                    UNAUTHORIZED_UPDATE_REQUEST: {
                        message: "Unauthorized update request.",
                        code: 3003
                    },
                    UNAUTHORIZED_EXTEND_REQUEST: {
                        message: "Unauthorized extend request.",
                        code: 3004
                    },
                    USER_REJECTED: {
                        message: "User rejected.",
                        code: 5e3
                    },
                    USER_REJECTED_CHAINS: {
                        message: "User rejected chains.",
                        code: 5001
                    },
                    USER_REJECTED_METHODS: {
                        message: "User rejected methods.",
                        code: 5002
                    },
                    USER_REJECTED_EVENTS: {
                        message: "User rejected events.",
                        code: 5003
                    },
                    UNSUPPORTED_CHAINS: {
                        message: "Unsupported chains.",
                        code: 5100
                    },
                    UNSUPPORTED_METHODS: {
                        message: "Unsupported methods.",
                        code: 5101
                    },
                    UNSUPPORTED_EVENTS: {
                        message: "Unsupported events.",
                        code: 5102
                    },
                    UNSUPPORTED_ACCOUNTS: {
                        message: "Unsupported accounts.",
                        code: 5103
                    },
                    UNSUPPORTED_NAMESPACE_KEY: {
                        message: "Unsupported namespace key.",
                        code: 5104
                    },
                    USER_DISCONNECTED: {
                        message: "User disconnected.",
                        code: 6e3
                    },
                    SESSION_SETTLEMENT_FAILED: {
                        message: "Session settlement failed.",
                        code: 7e3
                    },
                    WC_METHOD_UNSUPPORTED: {
                        message: "Unsupported wc_ method.",
                        code: 10001
                    }
                },
                X = {
                    NOT_INITIALIZED: {
                        message: "Not initialized.",
                        code: 1
                    },
                    NO_MATCHING_KEY: {
                        message: "No matching key.",
                        code: 2
                    },
                    RESTORE_WILL_OVERRIDE: {
                        message: "Restore will override.",
                        code: 3
                    },
                    RESUBSCRIBED: {
                        message: "Resubscribed.",
                        code: 4
                    },
                    MISSING_OR_INVALID: {
                        message: "Missing or invalid.",
                        code: 5
                    },
                    EXPIRED: {
                        message: "Expired.",
                        code: 6
                    },
                    UNKNOWN_TYPE: {
                        message: "Unknown type.",
                        code: 7
                    },
                    MISMATCHED_TOPIC: {
                        message: "Mismatched topic.",
                        code: 8
                    },
                    NON_CONFORMING_NAMESPACES: {
                        message: "Non conforming namespaces.",
                        code: 9
                    }
                };

            function b(e, t) {
                let {
                    message: r,
                    code: n
                } = X[e];
                return {
                    message: t ? `${r} ${t}` : r,
                    code: n
                }
            }

            function w(e, t) {
                let {
                    message: r,
                    code: n
                } = J[e];
                return {
                    message: t ? `${r} ${t}` : r,
                    code: n
                }
            }

            function C(e, t) {
                return !!Array.isArray(e) && (!("u" > typeof t) || !e.length || e.every(t))
            }

            function H(e) {
                return Object.getPrototypeOf(e) === Object.prototype && Object.keys(e).length
            }

            function I(e) {
                return typeof e > "u"
            }

            function m(e, t) {
                return !!(t && I(e)) || "string" == typeof e && !!e.trim().length
            }

            function q(e, t) {
                return !!(t && I(e)) || "number" == typeof e && !isNaN(e)
            }

            function Rt(e, t) {
                let {
                    requiredNamespaces: r
                } = t, n = Object.keys(e.namespaces), i = Object.keys(r), o = !0;
                return !!O(i, n) && (n.forEach(t => {
                    let {
                        accounts: n,
                        methods: i,
                        events: a
                    } = e.namespaces[t], s = R(n), c = r[t];
                    O(k(t, c), s) && O(c.methods, i) && O(c.events, a) || (o = !1)
                }), o)
            }

            function D(e) {
                return !!(m(e, !1) && e.includes(":")) && 2 === e.split(":").length
            }

            function wt(e) {
                if (m(e, !1)) try {
                    return "u" > typeof new URL(e)
                } catch {}
                return !1
            }

            function At(e) {
                var t;
                return null == (t = e ? .proposer) ? void 0 : t.publicKey
            }

            function Ut(e) {
                return e ? .topic
            }

            function _t(e, t) {
                let r = null;
                return m(e ? .publicKey, !1) || (r = b("MISSING_OR_INVALID", `${t} controller public key should be a string`)), r
            }

            function oe(e) {
                let t = !0;
                return C(e) ? e.length && (t = e.every(e => m(e, !1))) : t = !1, t
            }

            function se(e, t) {
                let r = null;
                return Object.values(e).forEach(e => {
                    var n;
                    let i;
                    if (r) return;
                    let o = (n = `${t}, namespace`, i = null, oe(e ? .methods) ? oe(e ? .events) || (i = w("UNSUPPORTED_EVENTS", `${n}, events should be an array of strings or empty array for no events`)) : i = w("UNSUPPORTED_METHODS", `${n}, methods should be an array of strings or empty array for no methods`), i);
                    o && (r = o)
                }), r
            }

            function $t(e, t, r) {
                let n = null;
                if (e && H(e)) {
                    let i;
                    let o = se(e, t);
                    o && (n = o);
                    let a = (i = null, Object.entries(e).forEach(([e, n]) => {
                        var o, a;
                        let s;
                        if (i) return;
                        let c = (o = k(e, n), a = `${t} ${r}`, s = null, C(o) && o.length ? o.forEach(e => {
                            s || D(e) || (s = w("UNSUPPORTED_CHAINS", `${a}, chain ${e} should be a string and conform to "namespace:chainId" format`))
                        }) : D(e) || (s = w("UNSUPPORTED_CHAINS", `${a}, chains must be defined as "namespace:chainId" e.g. "eip155:1": {...} in the namespace key OR as an array of CAIP-2 chainIds e.g. eip155: { chains: ["eip155:1", "eip155:5"] }`)), s);
                        c && (i = c)
                    }), i);
                    a && (n = a)
                } else n = b("MISSING_OR_INVALID", `${t}, ${r} should be an object with data`);
                return n
            }

            function sn(e, t) {
                let r = null;
                if (e && H(e)) {
                    let n;
                    let i = se(e, t);
                    i && (r = i);
                    let o = (n = null, Object.values(e).forEach(e => {
                        var r, i;
                        let o;
                        if (n) return;
                        let a = (r = e ? .accounts, i = `${t} namespace`, o = null, C(r) ? r.forEach(e => {
                            o || function(e) {
                                if (m(e, !1) && e.includes(":")) {
                                    let t = e.split(":");
                                    if (3 === t.length) {
                                        let e = t[0] + ":" + t[1];
                                        return !!t[2] && D(e)
                                    }
                                }
                                return !1
                            }(e) || (o = w("UNSUPPORTED_ACCOUNTS", `${i}, account ${e} should be a string and conform to "namespace:chainId:address" format`))
                        }) : o = w("UNSUPPORTED_ACCOUNTS", `${i}, accounts should be an array of strings conforming to "namespace:chainId:address" format`), o);
                        a && (n = a)
                    }), n);
                    o && (r = o)
                } else r = b("MISSING_OR_INVALID", `${t}, namespaces should be an object with data`);
                return r
            }

            function cn(e) {
                return m(e.protocol, !0)
            }

            function jt(e, t) {
                let r = !1;
                return t && !e ? r = !0 : e && C(e) && e.length && e.forEach(e => {
                    r = cn(e)
                }), r
            }

            function Ct(e) {
                return "number" == typeof e
            }

            function Dt(e) {
                return "u" > typeof e
            }

            function Vt(e) {
                return !(!e || "object" != typeof e || !e.code || !q(e.code, !1) || !e.message || !m(e.message, !1))
            }

            function Mt(e) {
                return !(I(e) || !m(e.method, !1))
            }

            function kt(e) {
                return !(I(e) || I(e.result) && I(e.error) || !q(e.id, !1) || !m(e.jsonrpc, !1))
            }

            function Kt(e) {
                return !(I(e) || !m(e.name, !1))
            }

            function Lt(e, t) {
                return !(!D(t) || !(function(e) {
                    let t = [];
                    return Object.values(e).forEach(e => {
                        t.push(...R(e.accounts))
                    }), t
                })(e).includes(t))
            }

            function xt(e, t, r) {
                return !!m(r, !1) && (function(e, t) {
                    let r = [];
                    return Object.values(e).forEach(e => {
                        R(e.accounts).includes(t) && r.push(...e.methods)
                    }), r
                })(e, t).includes(r)
            }

            function Ft(e, t, r) {
                return !!m(r, !1) && (function(e, t) {
                    let r = [];
                    return Object.values(e).forEach(e => {
                        R(e.accounts).includes(t) && r.push(...e.events)
                    }), r
                })(e, t).includes(r)
            }

            function an(e, t, r) {
                let n = null,
                    i = function(e) {
                        let t = {};
                        return Object.keys(e).forEach(r => {
                            var n;
                            r.includes(":") ? t[r] = e[r] : null == (n = e[r].chains) || n.forEach(n => {
                                t[n] = {
                                    methods: e[r].methods,
                                    events: e[r].events
                                }
                            })
                        }), t
                    }(e),
                    o = function(e) {
                        let t = {};
                        return Object.keys(e).forEach(r => {
                            if (r.includes(":")) t[r] = e[r];
                            else {
                                let n = R(e[r].accounts);
                                n ? .forEach(n => {
                                    t[n] = {
                                        accounts: e[r].accounts.filter(e => e.includes(`${n}:`)),
                                        methods: e[r].methods,
                                        events: e[r].events
                                    }
                                })
                            }
                        }), t
                    }(t),
                    a = Object.keys(i),
                    s = Object.keys(o),
                    c = un(Object.keys(e)),
                    u = un(Object.keys(t)),
                    l = c.filter(e => !u.includes(e));
                return l.length && (n = b("NON_CONFORMING_NAMESPACES", `${r} namespaces keys don't satisfy requiredNamespaces.
      Required: ${l.toString()}
      Received: ${Object.keys(t).toString()}`)), O(a, s) || (n = b("NON_CONFORMING_NAMESPACES", `${r} namespaces chains don't satisfy required namespaces.
      Required: ${a.toString()}
      Approved: ${s.toString()}`)), Object.keys(t).forEach(e => {
                    if (!e.includes(":") || n) return;
                    let i = R(t[e].accounts);
                    i.includes(e) || (n = b("NON_CONFORMING_NAMESPACES", `${r} namespaces accounts don't satisfy namespace accounts for ${e}
        Required: ${e}
        Approved: ${i.toString()}`))
                }), a.forEach(e => {
                    n || (O(i[e].methods, o[e].methods) ? O(i[e].events, o[e].events) || (n = b("NON_CONFORMING_NAMESPACES", `${r} namespaces events don't satisfy namespace events for ${e}`)) : n = b("NON_CONFORMING_NAMESPACES", `${r} namespaces methods don't satisfy namespace methods for ${e}`))
                }), n
            }

            function un(e) {
                return [...new Set(e.map(e => e.includes(":") ? e.split(":")[0] : e))]
            }

            function zt(e, t) {
                return q(e, !1) && e <= t.max && e >= t.min
            }
        },
        43824: function(e, t, r) {
            "use strict";
            let n = r(67116),
                i = r(58005),
                o = r(34470),
                a = r(61820),
                isNullOrUndefined = e => null == e,
                s = Symbol("encodeFragmentIdentifier");

            function validateArrayFormatSeparator(e) {
                if ("string" != typeof e || 1 !== e.length) throw TypeError("arrayFormatSeparator must be single character string")
            }

            function encode(e, t) {
                return t.encode ? t.strict ? n(e) : encodeURIComponent(e) : e
            }

            function decode(e, t) {
                return t.decode ? i(e) : e
            }

            function removeHash(e) {
                let t = e.indexOf("#");
                return -1 !== t && (e = e.slice(0, t)), e
            }

            function extract(e) {
                e = removeHash(e);
                let t = e.indexOf("?");
                return -1 === t ? "" : e.slice(t + 1)
            }

            function parseValue(e, t) {
                return t.parseNumbers && !Number.isNaN(Number(e)) && "string" == typeof e && "" !== e.trim() ? e = Number(e) : t.parseBooleans && null !== e && ("true" === e.toLowerCase() || "false" === e.toLowerCase()) && (e = "true" === e.toLowerCase()), e
            }

            function parse(e, t) {
                validateArrayFormatSeparator((t = Object.assign({
                    decode: !0,
                    sort: !0,
                    arrayFormat: "none",
                    arrayFormatSeparator: ",",
                    parseNumbers: !1,
                    parseBooleans: !1
                }, t)).arrayFormatSeparator);
                let r = function(e) {
                        let t;
                        switch (e.arrayFormat) {
                            case "index":
                                return (e, r, n) => {
                                    if (t = /\[(\d*)\]$/.exec(e), e = e.replace(/\[\d*\]$/, ""), !t) {
                                        n[e] = r;
                                        return
                                    }
                                    void 0 === n[e] && (n[e] = {}), n[e][t[1]] = r
                                };
                            case "bracket":
                                return (e, r, n) => {
                                    if (t = /(\[\])$/.exec(e), e = e.replace(/\[\]$/, ""), !t) {
                                        n[e] = r;
                                        return
                                    }
                                    if (void 0 === n[e]) {
                                        n[e] = [r];
                                        return
                                    }
                                    n[e] = [].concat(n[e], r)
                                };
                            case "colon-list-separator":
                                return (e, r, n) => {
                                    if (t = /(:list)$/.exec(e), e = e.replace(/:list$/, ""), !t) {
                                        n[e] = r;
                                        return
                                    }
                                    if (void 0 === n[e]) {
                                        n[e] = [r];
                                        return
                                    }
                                    n[e] = [].concat(n[e], r)
                                };
                            case "comma":
                            case "separator":
                                return (t, r, n) => {
                                    let i = "string" == typeof r && r.includes(e.arrayFormatSeparator),
                                        o = "string" == typeof r && !i && decode(r, e).includes(e.arrayFormatSeparator);
                                    r = o ? decode(r, e) : r;
                                    let a = i || o ? r.split(e.arrayFormatSeparator).map(t => decode(t, e)) : null === r ? r : decode(r, e);
                                    n[t] = a
                                };
                            case "bracket-separator":
                                return (t, r, n) => {
                                    let i = /(\[\])$/.test(t);
                                    if (t = t.replace(/\[\]$/, ""), !i) {
                                        n[t] = r ? decode(r, e) : r;
                                        return
                                    }
                                    let o = null === r ? [] : r.split(e.arrayFormatSeparator).map(t => decode(t, e));
                                    if (void 0 === n[t]) {
                                        n[t] = o;
                                        return
                                    }
                                    n[t] = [].concat(n[t], o)
                                };
                            default:
                                return (e, t, r) => {
                                    if (void 0 === r[e]) {
                                        r[e] = t;
                                        return
                                    }
                                    r[e] = [].concat(r[e], t)
                                }
                        }
                    }(t),
                    n = Object.create(null);
                if ("string" != typeof e || !(e = e.trim().replace(/^[?#&]/, ""))) return n;
                for (let i of e.split("&")) {
                    if ("" === i) continue;
                    let [e, a] = o(t.decode ? i.replace(/\+/g, " ") : i, "=");
                    a = void 0 === a ? null : ["comma", "separator", "bracket-separator"].includes(t.arrayFormat) ? a : decode(a, t), r(decode(e, t), a, n)
                }
                for (let e of Object.keys(n)) {
                    let r = n[e];
                    if ("object" == typeof r && null !== r)
                        for (let e of Object.keys(r)) r[e] = parseValue(r[e], t);
                    else n[e] = parseValue(r, t)
                }
                return !1 === t.sort ? n : (!0 === t.sort ? Object.keys(n).sort() : Object.keys(n).sort(t.sort)).reduce((e, t) => {
                    let r = n[t];
                    return r && "object" == typeof r && !Array.isArray(r) ? e[t] = function keysSorter(e) {
                        return Array.isArray(e) ? e.sort() : "object" == typeof e ? keysSorter(Object.keys(e)).sort((e, t) => Number(e) - Number(t)).map(t => e[t]) : e
                    }(r) : e[t] = r, e
                }, Object.create(null))
            }
            t.extract = extract, t.parse = parse, t.stringify = (e, t) => {
                if (!e) return "";
                validateArrayFormatSeparator((t = Object.assign({
                    encode: !0,
                    strict: !0,
                    arrayFormat: "none",
                    arrayFormatSeparator: ","
                }, t)).arrayFormatSeparator);
                let shouldFilter = r => t.skipNull && isNullOrUndefined(e[r]) || t.skipEmptyString && "" === e[r],
                    r = function(e) {
                        switch (e.arrayFormat) {
                            case "index":
                                return t => (r, n) => {
                                    let i = r.length;
                                    return void 0 === n || e.skipNull && null === n || e.skipEmptyString && "" === n ? r : null === n ? [...r, [encode(t, e), "[", i, "]"].join("")] : [...r, [encode(t, e), "[", encode(i, e), "]=", encode(n, e)].join("")]
                                };
                            case "bracket":
                                return t => (r, n) => void 0 === n || e.skipNull && null === n || e.skipEmptyString && "" === n ? r : null === n ? [...r, [encode(t, e), "[]"].join("")] : [...r, [encode(t, e), "[]=", encode(n, e)].join("")];
                            case "colon-list-separator":
                                return t => (r, n) => void 0 === n || e.skipNull && null === n || e.skipEmptyString && "" === n ? r : null === n ? [...r, [encode(t, e), ":list="].join("")] : [...r, [encode(t, e), ":list=", encode(n, e)].join("")];
                            case "comma":
                            case "separator":
                            case "bracket-separator":
                                {
                                    let t = "bracket-separator" === e.arrayFormat ? "[]=" : "=";
                                    return r => (n, i) => void 0 === i || e.skipNull && null === i || e.skipEmptyString && "" === i ? n : (i = null === i ? "" : i, 0 === n.length) ? [
                                        [encode(r, e), t, encode(i, e)].join("")
                                    ] : [
                                        [n, encode(i, e)].join(e.arrayFormatSeparator)
                                    ]
                                }
                            default:
                                return t => (r, n) => void 0 === n || e.skipNull && null === n || e.skipEmptyString && "" === n ? r : null === n ? [...r, encode(t, e)] : [...r, [encode(t, e), "=", encode(n, e)].join("")]
                        }
                    }(t),
                    n = {};
                for (let t of Object.keys(e)) shouldFilter(t) || (n[t] = e[t]);
                let i = Object.keys(n);
                return !1 !== t.sort && i.sort(t.sort), i.map(n => {
                    let i = e[n];
                    return void 0 === i ? "" : null === i ? encode(n, t) : Array.isArray(i) ? 0 === i.length && "bracket-separator" === t.arrayFormat ? encode(n, t) + "[]" : i.reduce(r(n), []).join("&") : encode(n, t) + "=" + encode(i, t)
                }).filter(e => e.length > 0).join("&")
            }, t.parseUrl = (e, t) => {
                t = Object.assign({
                    decode: !0
                }, t);
                let [r, n] = o(e, "#");
                return Object.assign({
                    url: r.split("?")[0] || "",
                    query: parse(extract(e), t)
                }, t && t.parseFragmentIdentifier && n ? {
                    fragmentIdentifier: decode(n, t)
                } : {})
            }, t.stringifyUrl = (e, r) => {
                r = Object.assign({
                    encode: !0,
                    strict: !0,
                    [s]: !0
                }, r);
                let n = removeHash(e.url).split("?")[0] || "",
                    i = t.extract(e.url),
                    o = t.parse(i, {
                        sort: !1
                    }),
                    a = Object.assign(o, e.query),
                    c = t.stringify(a, r);
                c && (c = `?${c}`);
                let u = function(e) {
                    let t = "",
                        r = e.indexOf("#");
                    return -1 !== r && (t = e.slice(r)), t
                }(e.url);
                return e.fragmentIdentifier && (u = `#${r[s]?encode(e.fragmentIdentifier,r):e.fragmentIdentifier}`), `${n}${c}${u}`
            }, t.pick = (e, r, n) => {
                n = Object.assign({
                    parseFragmentIdentifier: !0,
                    [s]: !1
                }, n);
                let {
                    url: i,
                    query: o,
                    fragmentIdentifier: c
                } = t.parseUrl(e, n);
                return t.stringifyUrl({
                    url: i,
                    query: a(o, r),
                    fragmentIdentifier: c
                }, n)
            }, t.exclude = (e, r, n) => {
                let i = Array.isArray(r) ? e => !r.includes(e) : (e, t) => !r(e, t);
                return t.pick(e, i, n)
            }
        },
        849: function(e, t) {
            "use strict";

            function getFromWindow(e) {
                let t;
                return "undefined" != typeof window && void 0 !== window[e] && (t = window[e]), t
            }

            function getFromWindowOrThrow(e) {
                let t = getFromWindow(e);
                if (!t) throw Error(`${e} is not defined in Window`);
                return t
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getLocalStorage = t.getLocalStorageOrThrow = t.getCrypto = t.getCryptoOrThrow = t.getLocation = t.getLocationOrThrow = t.getNavigator = t.getNavigatorOrThrow = t.getDocument = t.getDocumentOrThrow = t.getFromWindowOrThrow = t.getFromWindow = void 0, t.getFromWindow = getFromWindow, t.getFromWindowOrThrow = getFromWindowOrThrow, t.getDocumentOrThrow = function() {
                return getFromWindowOrThrow("document")
            }, t.getDocument = function() {
                return getFromWindow("document")
            }, t.getNavigatorOrThrow = function() {
                return getFromWindowOrThrow("navigator")
            }, t.getNavigator = function() {
                return getFromWindow("navigator")
            }, t.getLocationOrThrow = function() {
                return getFromWindowOrThrow("location")
            }, t.getLocation = function() {
                return getFromWindow("location")
            }, t.getCryptoOrThrow = function() {
                return getFromWindowOrThrow("crypto")
            }, t.getCrypto = function() {
                return getFromWindow("crypto")
            }, t.getLocalStorageOrThrow = function() {
                return getFromWindowOrThrow("localStorage")
            }, t.getLocalStorage = function() {
                return getFromWindow("localStorage")
            }
        },
        36073: function(e, t, r) {
            "use strict";
            t.D = void 0;
            let n = r(849);
            t.D = function() {
                let e, t, r;
                try {
                    e = n.getDocumentOrThrow(), t = n.getLocationOrThrow()
                } catch (e) {
                    return null
                }

                function getWindowMetadataOfAny(...t) {
                    let r = e.getElementsByTagName("meta");
                    for (let e = 0; e < r.length; e++) {
                        let n = r[e],
                            i = ["itemprop", "property", "name"].map(e => n.getAttribute(e)).filter(e => !!e && t.includes(e));
                        if (i.length && i) {
                            let e = n.getAttribute("content");
                            if (e) return e
                        }
                    }
                    return ""
                }
                let i = ((r = getWindowMetadataOfAny("name", "og:site_name", "og:title", "twitter:title")) || (r = e.title), r),
                    o = function() {
                        let e = getWindowMetadataOfAny("description", "og:description", "twitter:description", "keywords");
                        return e
                    }(),
                    a = t.origin,
                    s = function() {
                        let r = e.getElementsByTagName("link"),
                            n = [];
                        for (let e = 0; e < r.length; e++) {
                            let i = r[e],
                                o = i.getAttribute("rel");
                            if (o && o.toLowerCase().indexOf("icon") > -1) {
                                let e = i.getAttribute("href");
                                if (e) {
                                    if (-1 === e.toLowerCase().indexOf("https:") && -1 === e.toLowerCase().indexOf("http:") && 0 !== e.indexOf("//")) {
                                        let r = t.protocol + "//" + t.host;
                                        if (0 === e.indexOf("/")) r += e;
                                        else {
                                            let n = t.pathname.split("/");
                                            n.pop();
                                            let i = n.join("/");
                                            r += i + "/" + e
                                        }
                                        n.push(r)
                                    } else if (0 === e.indexOf("//")) {
                                        let r = t.protocol + e;
                                        n.push(r)
                                    } else n.push(e)
                                }
                            }
                        }
                        return n
                    }();
                return {
                    description: o,
                    url: a,
                    icons: s,
                    name: i
                }
            }
        },
        58005: function(e) {
            "use strict";
            var t = "%[a-f0-9]{2}",
                r = RegExp("(" + t + ")|([^%]+?)", "gi"),
                n = RegExp("(" + t + ")+", "gi");
            e.exports = function(e) {
                if ("string" != typeof e) throw TypeError("Expected `encodedURI` to be of type `string`, got `" + typeof e + "`");
                try {
                    return e = e.replace(/\+/g, " "), decodeURIComponent(e)
                } catch (t) {
                    return function(e) {
                        for (var t = {
                                "%FE%FF": "��",
                                "%FF%FE": "��"
                            }, i = n.exec(e); i;) {
                            try {
                                t[i[0]] = decodeURIComponent(i[0])
                            } catch (e) {
                                var o = function(e) {
                                    try {
                                        return decodeURIComponent(e)
                                    } catch (i) {
                                        for (var t = e.match(r) || [], n = 1; n < t.length; n++) t = (e = (function decodeComponents(e, t) {
                                            try {
                                                return [decodeURIComponent(e.join(""))]
                                            } catch (e) {}
                                            if (1 === e.length) return e;
                                            t = t || 1;
                                            var r = e.slice(0, t),
                                                n = e.slice(t);
                                            return Array.prototype.concat.call([], decodeComponents(r), decodeComponents(n))
                                        })(t, n).join("")).match(r) || [];
                                        return e
                                    }
                                }(i[0]);
                                o !== i[0] && (t[i[0]] = o)
                            }
                            i = n.exec(e)
                        }
                        t["%C2"] = "�";
                        for (var a = Object.keys(t), s = 0; s < a.length; s++) {
                            var c = a[s];
                            e = e.replace(RegExp(c, "g"), t[c])
                        }
                        return e
                    }(e)
                }
            }
        },
        69954: function(e, t, r) {
            "use strict";
            r.d(t, {
                qY: function() {
                    return detect
                }
            });
            var n = r(25566),
                __spreadArray = function(e, t, r) {
                    if (r || 2 == arguments.length)
                        for (var n, i = 0, o = t.length; i < o; i++) !n && i in t || (n || (n = Array.prototype.slice.call(t, 0, i)), n[i] = t[i]);
                    return e.concat(n || Array.prototype.slice.call(t))
                },
                BrowserInfo = function(e, t, r) {
                    this.name = e, this.version = t, this.os = r, this.type = "browser"
                },
                NodeInfo = function(e) {
                    this.version = e, this.type = "node", this.name = "node", this.os = n.platform
                },
                SearchBotDeviceInfo = function(e, t, r, n) {
                    this.name = e, this.version = t, this.os = r, this.bot = n, this.type = "bot-device"
                },
                BotInfo = function() {
                    this.type = "bot", this.bot = !0, this.name = "bot", this.version = null, this.os = null
                },
                ReactNativeInfo = function() {
                    this.type = "react-native", this.name = "react-native", this.version = null, this.os = null
                },
                i = /(nuhk|curl|Googlebot|Yammybot|Openbot|Slurp|MSNBot|Ask\ Jeeves\/Teoma|ia_archiver)/,
                o = [
                    ["aol", /AOLShield\/([0-9\._]+)/],
                    ["edge", /Edge\/([0-9\._]+)/],
                    ["edge-ios", /EdgiOS\/([0-9\._]+)/],
                    ["yandexbrowser", /YaBrowser\/([0-9\._]+)/],
                    ["kakaotalk", /KAKAOTALK\s([0-9\.]+)/],
                    ["samsung", /SamsungBrowser\/([0-9\.]+)/],
                    ["silk", /\bSilk\/([0-9._-]+)\b/],
                    ["miui", /MiuiBrowser\/([0-9\.]+)$/],
                    ["beaker", /BeakerBrowser\/([0-9\.]+)/],
                    ["edge-chromium", /EdgA?\/([0-9\.]+)/],
                    ["chromium-webview", /(?!Chrom.*OPR)wv\).*Chrom(?:e|ium)\/([0-9\.]+)(:?\s|$)/],
                    ["chrome", /(?!Chrom.*OPR)Chrom(?:e|ium)\/([0-9\.]+)(:?\s|$)/],
                    ["phantomjs", /PhantomJS\/([0-9\.]+)(:?\s|$)/],
                    ["crios", /CriOS\/([0-9\.]+)(:?\s|$)/],
                    ["firefox", /Firefox\/([0-9\.]+)(?:\s|$)/],
                    ["fxios", /FxiOS\/([0-9\.]+)/],
                    ["opera-mini", /Opera Mini.*Version\/([0-9\.]+)/],
                    ["opera", /Opera\/([0-9\.]+)(?:\s|$)/],
                    ["opera", /OPR\/([0-9\.]+)(:?\s|$)/],
                    ["pie", /^Microsoft Pocket Internet Explorer\/(\d+\.\d+)$/],
                    ["pie", /^Mozilla\/\d\.\d+\s\(compatible;\s(?:MSP?IE|MSInternet Explorer) (\d+\.\d+);.*Windows CE.*\)$/],
                    ["netfront", /^Mozilla\/\d\.\d+.*NetFront\/(\d.\d)/],
                    ["ie", /Trident\/7\.0.*rv\:([0-9\.]+).*\).*Gecko$/],
                    ["ie", /MSIE\s([0-9\.]+);.*Trident\/[4-7].0/],
                    ["ie", /MSIE\s(7\.0)/],
                    ["bb10", /BB10;\sTouch.*Version\/([0-9\.]+)/],
                    ["android", /Android\s([0-9\.]+)/],
                    ["ios", /Version\/([0-9\._]+).*Mobile.*Safari.*/],
                    ["safari", /Version\/([0-9\._]+).*Safari/],
                    ["facebook", /FB[AS]V\/([0-9\.]+)/],
                    ["instagram", /Instagram\s([0-9\.]+)/],
                    ["ios-webview", /AppleWebKit\/([0-9\.]+).*Mobile/],
                    ["ios-webview", /AppleWebKit\/([0-9\.]+).*Gecko\)$/],
                    ["curl", /^curl\/([0-9\.]+)$/],
                    ["searchbot", /alexa|bot|crawl(er|ing)|facebookexternalhit|feedburner|google web preview|nagios|postrank|pingdom|slurp|spider|yahoo!|yandex/]
                ],
                a = [
                    ["iOS", /iP(hone|od|ad)/],
                    ["Android OS", /Android/],
                    ["BlackBerry OS", /BlackBerry|BB10/],
                    ["Windows Mobile", /IEMobile/],
                    ["Amazon OS", /Kindle/],
                    ["Windows 3.11", /Win16/],
                    ["Windows 95", /(Windows 95)|(Win95)|(Windows_95)/],
                    ["Windows 98", /(Windows 98)|(Win98)/],
                    ["Windows 2000", /(Windows NT 5.0)|(Windows 2000)/],
                    ["Windows XP", /(Windows NT 5.1)|(Windows XP)/],
                    ["Windows Server 2003", /(Windows NT 5.2)/],
                    ["Windows Vista", /(Windows NT 6.0)/],
                    ["Windows 7", /(Windows NT 6.1)/],
                    ["Windows 8", /(Windows NT 6.2)/],
                    ["Windows 8.1", /(Windows NT 6.3)/],
                    ["Windows 10", /(Windows NT 10.0)/],
                    ["Windows ME", /Windows ME/],
                    ["Windows CE", /Windows CE|WinCE|Microsoft Pocket Internet Explorer/],
                    ["Open BSD", /OpenBSD/],
                    ["Sun OS", /SunOS/],
                    ["Chrome OS", /CrOS/],
                    ["Linux", /(Linux)|(X11)/],
                    ["Mac OS", /(Mac_PowerPC)|(Macintosh)/],
                    ["QNX", /QNX/],
                    ["BeOS", /BeOS/],
                    ["OS/2", /OS\/2/]
                ];

            function detect(e) {
                return e ? parseUserAgent(e) : "undefined" == typeof document && "undefined" != typeof navigator && "ReactNative" === navigator.product ? new ReactNativeInfo : "undefined" != typeof navigator ? parseUserAgent(navigator.userAgent) : void 0 !== n && n.version ? new NodeInfo(n.version.slice(1)) : null
            }

            function parseUserAgent(e) {
                var t = "" !== e && o.reduce(function(t, r) {
                    var n = r[0],
                        i = r[1];
                    if (t) return t;
                    var o = i.exec(e);
                    return !!o && [n, o]
                }, !1);
                if (!t) return null;
                var r = t[0],
                    n = t[1];
                if ("searchbot" === r) return new BotInfo;
                var s = n[1] && n[1].split(".").join("_").split("_").slice(0, 3);
                s ? s.length < 3 && (s = __spreadArray(__spreadArray([], s, !0), function(e) {
                    for (var t = [], r = 0; r < e; r++) t.push("0");
                    return t
                }(3 - s.length), !0)) : s = [];
                var c = s.join("."),
                    u = function(e) {
                        for (var t = 0, r = a.length; t < r; t++) {
                            var n = a[t],
                                i = n[0];
                            if (n[1].exec(e)) return i
                        }
                        return null
                    }(e),
                    l = i.exec(e);
                return l && l[1] ? new SearchBotDeviceInfo(r, c, u, l[1]) : new BrowserInfo(r, c, u)
            }
        },
        512: function(e) {
            "use strict";
            var t, r = "object" == typeof Reflect ? Reflect : null,
                n = r && "function" == typeof r.apply ? r.apply : function(e, t, r) {
                    return Function.prototype.apply.call(e, t, r)
                };
            t = r && "function" == typeof r.ownKeys ? r.ownKeys : Object.getOwnPropertySymbols ? function(e) {
                return Object.getOwnPropertyNames(e).concat(Object.getOwnPropertySymbols(e))
            } : function(e) {
                return Object.getOwnPropertyNames(e)
            };
            var i = Number.isNaN || function(e) {
                return e != e
            };

            function EventEmitter() {
                EventEmitter.init.call(this)
            }
            e.exports = EventEmitter, e.exports.once = function(e, t) {
                return new Promise(function(r, n) {
                    function errorListener(r) {
                        e.removeListener(t, resolver), n(r)
                    }

                    function resolver() {
                        "function" == typeof e.removeListener && e.removeListener("error", errorListener), r([].slice.call(arguments))
                    }
                    eventTargetAgnosticAddListener(e, t, resolver, {
                        once: !0
                    }), "error" !== t && "function" == typeof e.on && eventTargetAgnosticAddListener(e, "error", errorListener, {
                        once: !0
                    })
                })
            }, EventEmitter.EventEmitter = EventEmitter, EventEmitter.prototype._events = void 0, EventEmitter.prototype._eventsCount = 0, EventEmitter.prototype._maxListeners = void 0;
            var o = 10;

            function checkListener(e) {
                if ("function" != typeof e) throw TypeError('The "listener" argument must be of type Function. Received type ' + typeof e)
            }

            function _getMaxListeners(e) {
                return void 0 === e._maxListeners ? EventEmitter.defaultMaxListeners : e._maxListeners
            }

            function _addListener(e, t, r, n) {
                if (checkListener(r), void 0 === (o = e._events) ? (o = e._events = Object.create(null), e._eventsCount = 0) : (void 0 !== o.newListener && (e.emit("newListener", t, r.listener ? r.listener : r), o = e._events), a = o[t]), void 0 === a) a = o[t] = r, ++e._eventsCount;
                else if ("function" == typeof a ? a = o[t] = n ? [r, a] : [a, r] : n ? a.unshift(r) : a.push(r), (i = _getMaxListeners(e)) > 0 && a.length > i && !a.warned) {
                    a.warned = !0;
                    var i, o, a, s = Error("Possible EventEmitter memory leak detected. " + a.length + " " + String(t) + " listeners added. Use emitter.setMaxListeners() to increase limit");
                    s.name = "MaxListenersExceededWarning", s.emitter = e, s.type = t, s.count = a.length, console && console.warn && console.warn(s)
                }
                return e
            }

            function onceWrapper() {
                if (!this.fired) return (this.target.removeListener(this.type, this.wrapFn), this.fired = !0, 0 == arguments.length) ? this.listener.call(this.target) : this.listener.apply(this.target, arguments)
            }

            function _onceWrap(e, t, r) {
                var n = {
                        fired: !1,
                        wrapFn: void 0,
                        target: e,
                        type: t,
                        listener: r
                    },
                    i = onceWrapper.bind(n);
                return i.listener = r, n.wrapFn = i, i
            }

            function _listeners(e, t, r) {
                var n = e._events;
                if (void 0 === n) return [];
                var i = n[t];
                return void 0 === i ? [] : "function" == typeof i ? r ? [i.listener || i] : [i] : r ? function(e) {
                    for (var t = Array(e.length), r = 0; r < t.length; ++r) t[r] = e[r].listener || e[r];
                    return t
                }(i) : arrayClone(i, i.length)
            }

            function listenerCount(e) {
                var t = this._events;
                if (void 0 !== t) {
                    var r = t[e];
                    if ("function" == typeof r) return 1;
                    if (void 0 !== r) return r.length
                }
                return 0
            }

            function arrayClone(e, t) {
                for (var r = Array(t), n = 0; n < t; ++n) r[n] = e[n];
                return r
            }

            function eventTargetAgnosticAddListener(e, t, r, n) {
                if ("function" == typeof e.on) n.once ? e.once(t, r) : e.on(t, r);
                else if ("function" == typeof e.addEventListener) e.addEventListener(t, function wrapListener(i) {
                    n.once && e.removeEventListener(t, wrapListener), r(i)
                });
                else throw TypeError('The "emitter" argument must be of type EventEmitter. Received type ' + typeof e)
            }
            Object.defineProperty(EventEmitter, "defaultMaxListeners", {
                enumerable: !0,
                get: function() {
                    return o
                },
                set: function(e) {
                    if ("number" != typeof e || e < 0 || i(e)) throw RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + e + ".");
                    o = e
                }
            }), EventEmitter.init = function() {
                (void 0 === this._events || this._events === Object.getPrototypeOf(this)._events) && (this._events = Object.create(null), this._eventsCount = 0), this._maxListeners = this._maxListeners || void 0
            }, EventEmitter.prototype.setMaxListeners = function(e) {
                if ("number" != typeof e || e < 0 || i(e)) throw RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + e + ".");
                return this._maxListeners = e, this
            }, EventEmitter.prototype.getMaxListeners = function() {
                return _getMaxListeners(this)
            }, EventEmitter.prototype.emit = function(e) {
                for (var t = [], r = 1; r < arguments.length; r++) t.push(arguments[r]);
                var i = "error" === e,
                    o = this._events;
                if (void 0 !== o) i = i && void 0 === o.error;
                else if (!i) return !1;
                if (i) {
                    if (t.length > 0 && (a = t[0]), a instanceof Error) throw a;
                    var a, s = Error("Unhandled error." + (a ? " (" + a.message + ")" : ""));
                    throw s.context = a, s
                }
                var c = o[e];
                if (void 0 === c) return !1;
                if ("function" == typeof c) n(c, this, t);
                else
                    for (var u = c.length, l = arrayClone(c, u), r = 0; r < u; ++r) n(l[r], this, t);
                return !0
            }, EventEmitter.prototype.addListener = function(e, t) {
                return _addListener(this, e, t, !1)
            }, EventEmitter.prototype.on = EventEmitter.prototype.addListener, EventEmitter.prototype.prependListener = function(e, t) {
                return _addListener(this, e, t, !0)
            }, EventEmitter.prototype.once = function(e, t) {
                return checkListener(t), this.on(e, _onceWrap(this, e, t)), this
            }, EventEmitter.prototype.prependOnceListener = function(e, t) {
                return checkListener(t), this.prependListener(e, _onceWrap(this, e, t)), this
            }, EventEmitter.prototype.removeListener = function(e, t) {
                var r, n, i, o, a;
                if (checkListener(t), void 0 === (n = this._events) || void 0 === (r = n[e])) return this;
                if (r === t || r.listener === t) 0 == --this._eventsCount ? this._events = Object.create(null) : (delete n[e], n.removeListener && this.emit("removeListener", e, r.listener || t));
                else if ("function" != typeof r) {
                    for (i = -1, o = r.length - 1; o >= 0; o--)
                        if (r[o] === t || r[o].listener === t) {
                            a = r[o].listener, i = o;
                            break
                        }
                    if (i < 0) return this;
                    0 === i ? r.shift() : function(e, t) {
                        for (; t + 1 < e.length; t++) e[t] = e[t + 1];
                        e.pop()
                    }(r, i), 1 === r.length && (n[e] = r[0]), void 0 !== n.removeListener && this.emit("removeListener", e, a || t)
                }
                return this
            }, EventEmitter.prototype.off = EventEmitter.prototype.removeListener, EventEmitter.prototype.removeAllListeners = function(e) {
                var t, r, n;
                if (void 0 === (r = this._events)) return this;
                if (void 0 === r.removeListener) return 0 == arguments.length ? (this._events = Object.create(null), this._eventsCount = 0) : void 0 !== r[e] && (0 == --this._eventsCount ? this._events = Object.create(null) : delete r[e]), this;
                if (0 == arguments.length) {
                    var i, o = Object.keys(r);
                    for (n = 0; n < o.length; ++n) "removeListener" !== (i = o[n]) && this.removeAllListeners(i);
                    return this.removeAllListeners("removeListener"), this._events = Object.create(null), this._eventsCount = 0, this
                }
                if ("function" == typeof(t = r[e])) this.removeListener(e, t);
                else if (void 0 !== t)
                    for (n = t.length - 1; n >= 0; n--) this.removeListener(e, t[n]);
                return this
            }, EventEmitter.prototype.listeners = function(e) {
                return _listeners(this, e, !0)
            }, EventEmitter.prototype.rawListeners = function(e) {
                return _listeners(this, e, !1)
            }, EventEmitter.listenerCount = function(e, t) {
                return "function" == typeof e.listenerCount ? e.listenerCount(t) : listenerCount.call(e, t)
            }, EventEmitter.prototype.listenerCount = listenerCount, EventEmitter.prototype.eventNames = function() {
                return this._eventsCount > 0 ? t(this._events) : []
            }
        },
        61820: function(e) {
            "use strict";
            e.exports = function(e, t) {
                for (var r = {}, n = Object.keys(e), i = Array.isArray(t), o = 0; o < n.length; o++) {
                    var a = n[o],
                        s = e[a];
                    (i ? -1 !== t.indexOf(a) : t(a, s, e)) && (r[a] = s)
                }
                return r
            }
        },
        40863: function(e, t) {
            "use strict";
            let r;
            Object.defineProperty(t, "__esModule", {
                    value: !0
                }),
                function(e, t) {
                    for (var r in t) Object.defineProperty(e, r, {
                        enumerable: !0,
                        get: t[r]
                    })
                }(t, {
                    DOMAttributeNames: function() {
                        return n
                    },
                    isEqualNode: function() {
                        return isEqualNode
                    },
                    default: function() {
                        return initHeadManager
                    }
                });
            let n = {
                acceptCharset: "accept-charset",
                className: "class",
                htmlFor: "for",
                httpEquiv: "http-equiv",
                noModule: "noModule"
            };

            function reactElementToDOM(e) {
                let {
                    type: t,
                    props: r
                } = e, i = document.createElement(t);
                for (let e in r) {
                    if (!r.hasOwnProperty(e) || "children" === e || "dangerouslySetInnerHTML" === e || void 0 === r[e]) continue;
                    let o = n[e] || e.toLowerCase();
                    "script" === t && ("async" === o || "defer" === o || "noModule" === o) ? i[o] = !!r[e] : i.setAttribute(o, r[e])
                }
                let {
                    children: o,
                    dangerouslySetInnerHTML: a
                } = r;
                return a ? i.innerHTML = a.__html || "" : o && (i.textContent = "string" == typeof o ? o : Array.isArray(o) ? o.join("") : ""), i
            }

            function isEqualNode(e, t) {
                if (e instanceof HTMLElement && t instanceof HTMLElement) {
                    let r = t.getAttribute("nonce");
                    if (r && !e.getAttribute("nonce")) {
                        let n = t.cloneNode(!0);
                        return n.setAttribute("nonce", ""), n.nonce = r, r === e.nonce && e.isEqualNode(n)
                    }
                }
                return e.isEqualNode(t)
            }

            function initHeadManager() {
                return {
                    mountedInstances: new Set,
                    updateHead: e => {
                        let t = {};
                        e.forEach(e => {
                            if ("link" === e.type && e.props["data-optimized-fonts"]) {
                                if (document.querySelector('style[data-href="' + e.props["data-href"] + '"]')) return;
                                e.props.href = e.props["data-href"], e.props["data-href"] = void 0
                            }
                            let r = t[e.type] || [];
                            r.push(e), t[e.type] = r
                        });
                        let n = t.title ? t.title[0] : null,
                            i = "";
                        if (n) {
                            let {
                                children: e
                            } = n.props;
                            i = "string" == typeof e ? e : Array.isArray(e) ? e.join("") : ""
                        }
                        i !== document.title && (document.title = i), ["meta", "base", "link", "style", "script"].forEach(e => {
                            r(e, t[e] || [])
                        })
                    }
                }
            }
            r = (e, t) => {
                let r = document.getElementsByTagName("head")[0],
                    n = r.querySelector("meta[name=next-head-count]"),
                    i = Number(n.content),
                    o = [];
                for (let t = 0, r = n.previousElementSibling; t < i; t++, r = (null == r ? void 0 : r.previousElementSibling) || null) {
                    var a;
                    (null == r ? void 0 : null == (a = r.tagName) ? void 0 : a.toLowerCase()) === e && o.push(r)
                }
                let s = t.map(reactElementToDOM).filter(e => {
                    for (let t = 0, r = o.length; t < r; t++) {
                        let r = o[t];
                        if (isEqualNode(r, e)) return o.splice(t, 1), !1
                    }
                    return !0
                });
                o.forEach(e => {
                    var t;
                    return null == (t = e.parentNode) ? void 0 : t.removeChild(e)
                }), s.forEach(e => r.insertBefore(e, n)), n.content = (i - o.length + s.length).toString()
            }, ("function" == typeof t.default || "object" == typeof t.default && null !== t.default) && void 0 === t.default.__esModule && (Object.defineProperty(t.default, "__esModule", {
                value: !0
            }), Object.assign(t.default, t), e.exports = t.default)
        },
        62389: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                    value: !0
                }),
                function(e, t) {
                    for (var r in t) Object.defineProperty(e, r, {
                        enumerable: !0,
                        get: t[r]
                    })
                }(t, {
                    requestIdleCallback: function() {
                        return r
                    },
                    cancelIdleCallback: function() {
                        return n
                    }
                });
            let r = "undefined" != typeof self && self.requestIdleCallback && self.requestIdleCallback.bind(window) || function(e) {
                    let t = Date.now();
                    return self.setTimeout(function() {
                        e({
                            didTimeout: !1,
                            timeRemaining: function() {
                                return Math.max(0, 50 - (Date.now() - t))
                            }
                        })
                    }, 1)
                },
                n = "undefined" != typeof self && self.cancelIdleCallback && self.cancelIdleCallback.bind(window) || function(e) {
                    return clearTimeout(e)
                };
            ("function" == typeof t.default || "object" == typeof t.default && null !== t.default) && void 0 === t.default.__esModule && (Object.defineProperty(t.default, "__esModule", {
                value: !0
            }), Object.assign(t.default, t), e.exports = t.default)
        },
        73994: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                    value: !0
                }),
                function(e, t) {
                    for (var r in t) Object.defineProperty(e, r, {
                        enumerable: !0,
                        get: t[r]
                    })
                }(t, {
                    handleClientScriptLoad: function() {
                        return handleClientScriptLoad
                    },
                    initScriptLoader: function() {
                        return initScriptLoader
                    },
                    default: function() {
                        return p
                    }
                });
            let n = r(70817),
                i = r(37401),
                o = n._(r(54887)),
                a = i._(r(2265)),
                s = r(61852),
                c = r(40863),
                u = r(62389),
                l = new Map,
                d = new Set,
                f = ["onLoad", "onReady", "dangerouslySetInnerHTML", "children", "onError", "strategy", "stylesheets"],
                insertStylesheets = e => {
                    if (o.default.preinit) {
                        e.forEach(e => {
                            o.default.preinit(e, {
                                as: "style"
                            })
                        });
                        return
                    } {
                        let t = document.head;
                        e.forEach(e => {
                            let r = document.createElement("link");
                            r.type = "text/css", r.rel = "stylesheet", r.href = e, t.appendChild(r)
                        })
                    }
                },
                loadScript = e => {
                    let {
                        src: t,
                        id: r,
                        onLoad: n = () => {},
                        onReady: i = null,
                        dangerouslySetInnerHTML: o,
                        children: a = "",
                        strategy: s = "afterInteractive",
                        onError: u,
                        stylesheets: p
                    } = e, y = r || t;
                    if (y && d.has(y)) return;
                    if (l.has(t)) {
                        d.add(y), l.get(t).then(n, u);
                        return
                    }
                    let afterLoad = () => {
                            i && i(), d.add(y)
                        },
                        g = document.createElement("script"),
                        v = new Promise((e, t) => {
                            g.addEventListener("load", function(t) {
                                e(), n && n.call(this, t), afterLoad()
                            }), g.addEventListener("error", function(e) {
                                t(e)
                            })
                        }).catch(function(e) {
                            u && u(e)
                        });
                    for (let [r, n] of (o ? (g.innerHTML = o.__html || "", afterLoad()) : a ? (g.textContent = "string" == typeof a ? a : Array.isArray(a) ? a.join("") : "", afterLoad()) : t && (g.src = t, l.set(t, v)), Object.entries(e))) {
                        if (void 0 === n || f.includes(r)) continue;
                        let e = c.DOMAttributeNames[r] || r.toLowerCase();
                        g.setAttribute(e, n)
                    }
                    "worker" === s && g.setAttribute("type", "text/partytown"), g.setAttribute("data-nscript", s), p && insertStylesheets(p), document.body.appendChild(g)
                };

            function handleClientScriptLoad(e) {
                let {
                    strategy: t = "afterInteractive"
                } = e;
                "lazyOnload" === t ? window.addEventListener("load", () => {
                    (0, u.requestIdleCallback)(() => loadScript(e))
                }) : loadScript(e)
            }

            function initScriptLoader(e) {
                e.forEach(handleClientScriptLoad),
                    function() {
                        let e = [...document.querySelectorAll('[data-nscript="beforeInteractive"]'), ...document.querySelectorAll('[data-nscript="beforePageRender"]')];
                        e.forEach(e => {
                            let t = e.id || e.getAttribute("src");
                            d.add(t)
                        })
                    }()
            }

            function Script(e) {
                let {
                    id: t,
                    src: r = "",
                    onLoad: n = () => {},
                    onReady: i = null,
                    strategy: c = "afterInteractive",
                    onError: l,
                    stylesheets: f,
                    ...p
                } = e, {
                    updateScripts: y,
                    scripts: g,
                    getIsSsr: v,
                    appDir: E,
                    nonce: _
                } = (0, a.useContext)(s.HeadManagerContext), P = (0, a.useRef)(!1);
                (0, a.useEffect)(() => {
                    let e = t || r;
                    P.current || (i && e && d.has(e) && i(), P.current = !0)
                }, [i, t, r]);
                let T = (0, a.useRef)(!1);
                if ((0, a.useEffect)(() => {
                        !T.current && ("afterInteractive" === c ? loadScript(e) : "lazyOnload" === c && ("complete" === document.readyState ? (0, u.requestIdleCallback)(() => loadScript(e)) : window.addEventListener("load", () => {
                            (0, u.requestIdleCallback)(() => loadScript(e))
                        })), T.current = !0)
                    }, [e, c]), ("beforeInteractive" === c || "worker" === c) && (y ? (g[c] = (g[c] || []).concat([{
                        id: t,
                        src: r,
                        onLoad: n,
                        onReady: i,
                        onError: l,
                        ...p
                    }]), y(g)) : v && v() ? d.add(t || r) : v && !v() && loadScript(e)), E) {
                    if (f && f.forEach(e => {
                            o.default.preinit(e, {
                                as: "style"
                            })
                        }), "beforeInteractive" === c) return r ? (o.default.preload(r, p.integrity ? {
                        as: "script",
                        integrity: p.integrity
                    } : {
                        as: "script"
                    }), a.default.createElement("script", {
                        nonce: _,
                        dangerouslySetInnerHTML: {
                            __html: "(self.__next_s=self.__next_s||[]).push(" + JSON.stringify([r]) + ")"
                        }
                    })) : (p.dangerouslySetInnerHTML && (p.children = p.dangerouslySetInnerHTML.__html, delete p.dangerouslySetInnerHTML), a.default.createElement("script", {
                        nonce: _,
                        dangerouslySetInnerHTML: {
                            __html: "(self.__next_s=self.__next_s||[]).push(" + JSON.stringify([0, { ...p
                            }]) + ")"
                        }
                    }));
                    "afterInteractive" === c && r && o.default.preload(r, p.integrity ? {
                        as: "script",
                        integrity: p.integrity
                    } : {
                        as: "script"
                    })
                }
                return null
            }
            Object.defineProperty(Script, "__nextScript", {
                value: !0
            });
            let p = Script;
            ("function" == typeof t.default || "object" == typeof t.default && null !== t.default) && void 0 === t.default.__esModule && (Object.defineProperty(t.default, "__esModule", {
                value: !0
            }), Object.assign(t.default, t), e.exports = t.default)
        },
        28811: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), Object.defineProperty(t, "default", {
                enumerable: !0,
                get: function() {
                    return dynamic
                }
            });
            let n = r(70817);
            r(2265);
            let i = n._(r(57075));

            function convertModule(e) {
                return {
                    default: (null == e ? void 0 : e.default) || e
                }
            }

            function dynamic(e, t) {
                let r = i.default,
                    n = {
                        loading: e => {
                            let {
                                error: t,
                                isLoading: r,
                                pastDelay: n
                            } = e;
                            return null
                        }
                    };
                "function" == typeof e && (n.loader = e), Object.assign(n, t);
                let o = n.loader;
                return r({ ...n,
                    loader: () => null != o ? o().then(convertModule) : Promise.resolve(convertModule(() => null))
                })
            }("function" == typeof t.default || "object" == typeof t.default && null !== t.default) && void 0 === t.default.__esModule && (Object.defineProperty(t.default, "__esModule", {
                value: !0
            }), Object.assign(t.default, t), e.exports = t.default)
        },
        19167: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                    value: !0
                }),
                function(e, t) {
                    for (var r in t) Object.defineProperty(e, r, {
                        enumerable: !0,
                        get: t[r]
                    })
                }(t, {
                    suspense: function() {
                        return suspense
                    },
                    NoSSR: function() {
                        return NoSSR
                    }
                });
            let n = r(11283);

            function suspense() {
                let e = Error(n.NEXT_DYNAMIC_NO_SSR_CODE);
                throw e.digest = n.NEXT_DYNAMIC_NO_SSR_CODE, e
            }

            function NoSSR(e) {
                let {
                    children: t
                } = e;
                return t
            }
        },
        57075: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), Object.defineProperty(t, "default", {
                enumerable: !0,
                get: function() {
                    return _default
                }
            });
            let n = r(70817),
                i = n._(r(2265)),
                o = r(19167),
                _default = function(e) {
                    let t = Object.assign({
                        loader: null,
                        loading: null,
                        ssr: !0
                    }, e);

                    function LoadableComponent(e) {
                        let r = t.loading,
                            n = i.default.createElement(r, {
                                isLoading: !0,
                                pastDelay: !0,
                                error: null
                            }),
                            a = t.ssr ? i.default.Fragment : o.NoSSR,
                            s = t.lazy;
                        return i.default.createElement(i.default.Suspense, {
                            fallback: n
                        }, i.default.createElement(a, null, i.default.createElement(s, e)))
                    }
                    return t.lazy = i.default.lazy(t.loader), LoadableComponent.displayName = "LoadableComponent", LoadableComponent
                }
        },
        8780: function() {},
        83343: function() {},
        71839: function(e) {
            e.exports = {
                style: {
                    fontFamily: "'__Comfortaa_987f34', '__Comfortaa_Fallback_987f34'",
                    fontStyle: "normal"
                },
                className: "__className_987f34",
                variable: "__variable_987f34"
            }
        },
        59205: function(e) {
            e.exports = {
                style: {
                    fontFamily: "'__Inter_e66fe9', '__Inter_Fallback_e66fe9'",
                    fontStyle: "normal"
                },
                className: "__className_e66fe9",
                variable: "__variable_e66fe9"
            }
        },
        45226: function(e) {
            e.exports = {
                style: {
                    fontFamily: "'__sfMonoRegular_d2006f', '__sfMonoRegular_Fallback_d2006f'"
                },
                className: "__className_d2006f",
                variable: "__variable_d2006f"
            }
        },
        48475: function(e, t, r) {
            e.exports = r(73994)
        },
        91527: function(e, t, r) {
            var n;
            e.exports = (n = r(2265), (() => {
                var e = {
                        "./node_modules/css-mediaquery/index.js": (e, t) => {
                            "use strict";
                            t.match = function(e, t) {
                                return parseQuery(e).some(function(e) {
                                    var r = e.inverse,
                                        n = "all" === e.type || t.type === e.type;
                                    if (n && r || !(n || r)) return !1;
                                    var i = e.expressions.every(function(e) {
                                        var r = e.feature,
                                            n = e.modifier,
                                            i = e.value,
                                            o = t[r];
                                        if (!o) return !1;
                                        switch (r) {
                                            case "orientation":
                                            case "scan":
                                                return o.toLowerCase() === i.toLowerCase();
                                            case "width":
                                            case "height":
                                            case "device-width":
                                            case "device-height":
                                                i = toPx(i), o = toPx(o);
                                                break;
                                            case "resolution":
                                                i = toDpi(i), o = toDpi(o);
                                                break;
                                            case "aspect-ratio":
                                            case "device-aspect-ratio":
                                            case "device-pixel-ratio":
                                                i = toDecimal(i), o = toDecimal(o);
                                                break;
                                            case "grid":
                                            case "color":
                                            case "color-index":
                                            case "monochrome":
                                                i = parseInt(i, 10) || 1, o = parseInt(o, 10) || 0
                                        }
                                        switch (n) {
                                            case "min":
                                                return o >= i;
                                            case "max":
                                                return o <= i;
                                            default:
                                                return o === i
                                        }
                                    });
                                    return i && !r || !i && r
                                })
                            }, t.parse = parseQuery;
                            var r = /(?:(only|not)?\s*([^\s\(\)]+)(?:\s*and)?\s*)?(.+)?/i,
                                n = /\(\s*([^\s\:\)]+)\s*(?:\:\s*([^\s\)]+))?\s*\)/,
                                i = /^(?:(min|max)-)?(.+)/,
                                o = /(em|rem|px|cm|mm|in|pt|pc)?$/,
                                a = /(dpi|dpcm|dppx)?$/;

                            function parseQuery(e) {
                                return e.split(",").map(function(e) {
                                    var t = (e = e.trim()).match(r),
                                        o = t[1],
                                        a = t[2],
                                        s = t[3] || "",
                                        c = {};
                                    return c.inverse = !!o && "not" === o.toLowerCase(), c.type = a ? a.toLowerCase() : "all", s = s.match(/\([^\)]+\)/g) || [], c.expressions = s.map(function(e) {
                                        var t = e.match(n),
                                            r = t[1].toLowerCase().match(i);
                                        return {
                                            modifier: r[1],
                                            feature: r[2],
                                            value: t[2]
                                        }
                                    }), c
                                })
                            }

                            function toDecimal(e) {
                                var t, r = Number(e);
                                return r || (r = (t = e.match(/^(\d+)\s*\/\s*(\d+)$/))[1] / t[2]), r
                            }

                            function toDpi(e) {
                                var t = parseFloat(e);
                                switch (String(e).match(a)[1]) {
                                    case "dpcm":
                                        return t / 2.54;
                                    case "dppx":
                                        return 96 * t;
                                    default:
                                        return t
                                }
                            }

                            function toPx(e) {
                                var t = parseFloat(e);
                                switch (String(e).match(o)[1]) {
                                    case "em":
                                    case "rem":
                                        return 16 * t;
                                    case "cm":
                                        return 96 * t / 2.54;
                                    case "mm":
                                        return 96 * t / 2.54 / 10;
                                    case "in":
                                        return 96 * t;
                                    case "pt":
                                        return 72 * t;
                                    case "pc":
                                        return 72 * t / 12;
                                    default:
                                        return t
                                }
                            }
                        },
                        "./node_modules/hyphenate-style-name/index.js": (e, t, r) => {
                            "use strict";
                            r.r(t), r.d(t, {
                                default: () => __WEBPACK_DEFAULT_EXPORT__
                            });
                            var n = /[A-Z]/g,
                                i = /^ms-/,
                                o = {};

                            function toHyphenLower(e) {
                                return "-" + e.toLowerCase()
                            }
                            let __WEBPACK_DEFAULT_EXPORT__ = function(e) {
                                if (o.hasOwnProperty(e)) return o[e];
                                var t = e.replace(n, toHyphenLower);
                                return o[e] = i.test(t) ? "-" + t : t
                            }
                        },
                        "./node_modules/matchmediaquery/index.js": (e, t, r) => {
                            "use strict";
                            var n = r( /*! css-mediaquery */ "./node_modules/css-mediaquery/index.js").match,
                                i = "undefined" != typeof window ? window.matchMedia : null;

                            function Mql(e, t, r) {
                                var o = this;
                                if (i && !r) {
                                    var a = i.call(window, e);
                                    this.matches = a.matches, this.media = a.media, a.addListener(update)
                                } else this.matches = n(e, t), this.media = e;

                                function update(e) {
                                    o.matches = e.matches, o.media = e.media
                                }
                                this.addListener = function(e) {
                                    a && a.addListener(e)
                                }, this.removeListener = function(e) {
                                    a && a.removeListener(e)
                                }, this.dispose = function() {
                                    a && a.removeListener(update)
                                }
                            }
                            e.exports = function(e, t, r) {
                                return new Mql(e, t, r)
                            }
                        },
                        "./node_modules/object-assign/index.js": e => {
                            "use strict";
                            /*
                            object-assign
                            (c) Sindre Sorhus
                            @license MIT
                            */
                            var t = Object.getOwnPropertySymbols,
                                r = Object.prototype.hasOwnProperty,
                                n = Object.prototype.propertyIsEnumerable;
                            e.exports = ! function() {
                                try {
                                    if (!Object.assign) return !1;
                                    var e = new String("abc");
                                    if (e[5] = "de", "5" === Object.getOwnPropertyNames(e)[0]) return !1;
                                    for (var t = {}, r = 0; r < 10; r++) t["_" + String.fromCharCode(r)] = r;
                                    var n = Object.getOwnPropertyNames(t).map(function(e) {
                                        return t[e]
                                    });
                                    if ("0123456789" !== n.join("")) return !1;
                                    var i = {};
                                    if ("abcdefghijklmnopqrst".split("").forEach(function(e) {
                                            i[e] = e
                                        }), "abcdefghijklmnopqrst" !== Object.keys(Object.assign({}, i)).join("")) return !1;
                                    return !0
                                } catch (e) {
                                    return !1
                                }
                            }() ? function(e, i) {
                                for (var o, a, s = function(e) {
                                        if (null == e) throw TypeError("Object.assign cannot be called with null or undefined");
                                        return Object(e)
                                    }(e), c = 1; c < arguments.length; c++) {
                                    for (var u in o = Object(arguments[c])) r.call(o, u) && (s[u] = o[u]);
                                    if (t) {
                                        a = t(o);
                                        for (var l = 0; l < a.length; l++) n.call(o, a[l]) && (s[a[l]] = o[a[l]])
                                    }
                                }
                                return s
                            } : Object.assign
                        },
                        "./node_modules/prop-types/checkPropTypes.js": (e, t, r) => {
                            "use strict";
                            var printWarning = function() {},
                                n = r( /*! ./lib/ReactPropTypesSecret */ "./node_modules/prop-types/lib/ReactPropTypesSecret.js"),
                                i = {},
                                o = r( /*! ./lib/has */ "./node_modules/prop-types/lib/has.js");

                            function checkPropTypes(e, t, r, a, s) {
                                for (var c in e)
                                    if (o(e, c)) {
                                        var u;
                                        try {
                                            if ("function" != typeof e[c]) {
                                                var l = Error((a || "React class") + ": " + r + " type `" + c + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof e[c] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                                                throw l.name = "Invariant Violation", l
                                            }
                                            u = e[c](t, c, a, r, null, n)
                                        } catch (e) {
                                            u = e
                                        }
                                        if (!u || u instanceof Error || printWarning((a || "React class") + ": type specification of " + r + " `" + c + "` is invalid; the type checker function must return `null` or an `Error` but returned a " + typeof u + ". You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument)."), u instanceof Error && !(u.message in i)) {
                                            i[u.message] = !0;
                                            var d = s ? s() : "";
                                            printWarning("Failed " + r + " type: " + u.message + (null != d ? d : ""))
                                        }
                                    }
                            }
                            printWarning = function(e) {
                                var t = "Warning: " + e;
                                "undefined" != typeof console && console.error(t);
                                try {
                                    throw Error(t)
                                } catch (e) {}
                            }, checkPropTypes.resetWarningCache = function() {
                                i = {}
                            }, e.exports = checkPropTypes
                        },
                        "./node_modules/prop-types/factoryWithTypeCheckers.js": (e, t, r) => {
                            "use strict";
                            var n = r( /*! react-is */ "./node_modules/react-is/index.js"),
                                i = r( /*! object-assign */ "./node_modules/object-assign/index.js"),
                                o = r( /*! ./lib/ReactPropTypesSecret */ "./node_modules/prop-types/lib/ReactPropTypesSecret.js"),
                                a = r( /*! ./lib/has */ "./node_modules/prop-types/lib/has.js"),
                                s = r( /*! ./checkPropTypes */ "./node_modules/prop-types/checkPropTypes.js"),
                                printWarning = function() {};

                            function emptyFunctionThatReturnsNull() {
                                return null
                            }
                            printWarning = function(e) {
                                var t = "Warning: " + e;
                                "undefined" != typeof console && console.error(t);
                                try {
                                    throw Error(t)
                                } catch (e) {}
                            }, e.exports = function(e, t) {
                                var r = "function" == typeof Symbol && Symbol.iterator,
                                    c = "<<anonymous>>",
                                    u = {
                                        array: createPrimitiveTypeChecker("array"),
                                        bigint: createPrimitiveTypeChecker("bigint"),
                                        bool: createPrimitiveTypeChecker("boolean"),
                                        func: createPrimitiveTypeChecker("function"),
                                        number: createPrimitiveTypeChecker("number"),
                                        object: createPrimitiveTypeChecker("object"),
                                        string: createPrimitiveTypeChecker("string"),
                                        symbol: createPrimitiveTypeChecker("symbol"),
                                        any: createChainableTypeChecker(emptyFunctionThatReturnsNull),
                                        arrayOf: function(e) {
                                            return createChainableTypeChecker(function(t, r, n, i, a) {
                                                if ("function" != typeof e) return new PropTypeError("Property `" + a + "` of component `" + n + "` has invalid PropType notation inside arrayOf.");
                                                var s = t[r];
                                                if (!Array.isArray(s)) {
                                                    var c = getPropType(s);
                                                    return new PropTypeError("Invalid " + i + " `" + a + "` of type `" + c + "` supplied to `" + n + "`, expected an array.")
                                                }
                                                for (var u = 0; u < s.length; u++) {
                                                    var l = e(s, u, n, i, a + "[" + u + "]", o);
                                                    if (l instanceof Error) return l
                                                }
                                                return null
                                            })
                                        },
                                        element: createChainableTypeChecker(function(t, r, n, i, o) {
                                            var a = t[r];
                                            if (!e(a)) {
                                                var s = getPropType(a);
                                                return new PropTypeError("Invalid " + i + " `" + o + "` of type `" + s + "` supplied to `" + n + "`, expected a single ReactElement.")
                                            }
                                            return null
                                        }),
                                        elementType: createChainableTypeChecker(function(e, t, r, i, o) {
                                            var a = e[t];
                                            if (!n.isValidElementType(a)) {
                                                var s = getPropType(a);
                                                return new PropTypeError("Invalid " + i + " `" + o + "` of type `" + s + "` supplied to `" + r + "`, expected a single ReactElement type.")
                                            }
                                            return null
                                        }),
                                        instanceOf: function(e) {
                                            return createChainableTypeChecker(function(t, r, n, i, o) {
                                                if (!(t[r] instanceof e)) {
                                                    var a, s = e.name || c,
                                                        u = (a = t[r]).constructor && a.constructor.name ? a.constructor.name : c;
                                                    return new PropTypeError("Invalid " + i + " `" + o + "` of type `" + u + "` supplied to `" + n + "`, expected instance of `" + s + "`.")
                                                }
                                                return null
                                            })
                                        },
                                        node: createChainableTypeChecker(function(t, n, i, o, a) {
                                            return ! function isNode(t) {
                                                switch (typeof t) {
                                                    case "number":
                                                    case "string":
                                                    case "undefined":
                                                        return !0;
                                                    case "boolean":
                                                        return !t;
                                                    case "object":
                                                        if (Array.isArray(t)) return t.every(isNode);
                                                        if (null === t || e(t)) return !0;
                                                        var n = function(e) {
                                                            var t = e && (r && e[r] || e["@@iterator"]);
                                                            if ("function" == typeof t) return t
                                                        }(t);
                                                        if (!n) return !1;
                                                        var i, o = n.call(t);
                                                        if (n !== t.entries) {
                                                            for (; !(i = o.next()).done;)
                                                                if (!isNode(i.value)) return !1
                                                        } else
                                                            for (; !(i = o.next()).done;) {
                                                                var a = i.value;
                                                                if (a && !isNode(a[1])) return !1
                                                            }
                                                        return !0;
                                                    default:
                                                        return !1
                                                }
                                            }(t[n]) ? new PropTypeError("Invalid " + o + " `" + a + "` supplied to `" + i + "`, expected a ReactNode.") : null
                                        }),
                                        objectOf: function(e) {
                                            return createChainableTypeChecker(function(t, r, n, i, s) {
                                                if ("function" != typeof e) return new PropTypeError("Property `" + s + "` of component `" + n + "` has invalid PropType notation inside objectOf.");
                                                var c = t[r],
                                                    u = getPropType(c);
                                                if ("object" !== u) return new PropTypeError("Invalid " + i + " `" + s + "` of type `" + u + "` supplied to `" + n + "`, expected an object.");
                                                for (var l in c)
                                                    if (a(c, l)) {
                                                        var d = e(c, l, n, i, s + "." + l, o);
                                                        if (d instanceof Error) return d
                                                    }
                                                return null
                                            })
                                        },
                                        oneOf: function(e) {
                                            return Array.isArray(e) ? createChainableTypeChecker(function(t, r, n, i, o) {
                                                for (var a, s = t[r], c = 0; c < e.length; c++)
                                                    if (s === (a = e[c]) ? 0 !== s || 1 / s == 1 / a : s != s && a != a) return null;
                                                var u = JSON.stringify(e, function(e, t) {
                                                    return "symbol" === getPreciseType(t) ? String(t) : t
                                                });
                                                return new PropTypeError("Invalid " + i + " `" + o + "` of value `" + String(s) + "` supplied to `" + n + "`, expected one of " + u + ".")
                                            }) : (arguments.length > 1 ? printWarning("Invalid arguments supplied to oneOf, expected an array, got " + arguments.length + " arguments. A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).") : printWarning("Invalid argument supplied to oneOf, expected an array."), emptyFunctionThatReturnsNull)
                                        },
                                        oneOfType: function(e) {
                                            if (!Array.isArray(e)) return printWarning("Invalid argument supplied to oneOfType, expected an instance of array."), emptyFunctionThatReturnsNull;
                                            for (var t = 0; t < e.length; t++) {
                                                var r = e[t];
                                                if ("function" != typeof r) return printWarning("Invalid argument supplied to oneOfType. Expected an array of check functions, but received " + function(e) {
                                                    var t = getPreciseType(e);
                                                    switch (t) {
                                                        case "array":
                                                        case "object":
                                                            return "an " + t;
                                                        case "boolean":
                                                        case "date":
                                                        case "regexp":
                                                            return "a " + t;
                                                        default:
                                                            return t
                                                    }
                                                }(r) + " at index " + t + "."), emptyFunctionThatReturnsNull
                                            }
                                            return createChainableTypeChecker(function(t, r, n, i, s) {
                                                for (var c = [], u = 0; u < e.length; u++) {
                                                    var l = (0, e[u])(t, r, n, i, s, o);
                                                    if (null == l) return null;
                                                    l.data && a(l.data, "expectedType") && c.push(l.data.expectedType)
                                                }
                                                var d = c.length > 0 ? ", expected one of type [" + c.join(", ") + "]" : "";
                                                return new PropTypeError("Invalid " + i + " `" + s + "` supplied to `" + n + "`" + d + ".")
                                            })
                                        },
                                        shape: function(e) {
                                            return createChainableTypeChecker(function(t, r, n, i, a) {
                                                var s = t[r],
                                                    c = getPropType(s);
                                                if ("object" !== c) return new PropTypeError("Invalid " + i + " `" + a + "` of type `" + c + "` supplied to `" + n + "`, expected `object`.");
                                                for (var u in e) {
                                                    var l = e[u];
                                                    if ("function" != typeof l) return invalidValidatorError(n, i, a, u, getPreciseType(l));
                                                    var d = l(s, u, n, i, a + "." + u, o);
                                                    if (d) return d
                                                }
                                                return null
                                            })
                                        },
                                        exact: function(e) {
                                            return createChainableTypeChecker(function(t, r, n, s, c) {
                                                var u = t[r],
                                                    l = getPropType(u);
                                                if ("object" !== l) return new PropTypeError("Invalid " + s + " `" + c + "` of type `" + l + "` supplied to `" + n + "`, expected `object`.");
                                                var d = i({}, t[r], e);
                                                for (var f in d) {
                                                    var p = e[f];
                                                    if (a(e, f) && "function" != typeof p) return invalidValidatorError(n, s, c, f, getPreciseType(p));
                                                    if (!p) return new PropTypeError("Invalid " + s + " `" + c + "` key `" + f + "` supplied to `" + n + "`.\nBad object: " + JSON.stringify(t[r], null, "  ") + "\nValid keys: " + JSON.stringify(Object.keys(e), null, "  "));
                                                    var y = p(u, f, n, s, c + "." + f, o);
                                                    if (y) return y
                                                }
                                                return null
                                            })
                                        }
                                    };

                                function PropTypeError(e, t) {
                                    this.message = e, this.data = t && "object" == typeof t ? t : {}, this.stack = ""
                                }

                                function createChainableTypeChecker(e) {
                                    var r = {},
                                        n = 0;

                                    function checkType(i, a, s, u, l, d, f) {
                                        if (u = u || c, d = d || s, f !== o) {
                                            if (t) {
                                                var p = Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types");
                                                throw p.name = "Invariant Violation", p
                                            }
                                            if ("undefined" != typeof console) {
                                                var y = u + ":" + s;
                                                !r[y] && n < 3 && (printWarning("You are manually calling a React.PropTypes validation function for the `" + d + "` prop on `" + u + "`. This is deprecated and will throw in the standalone `prop-types` package. You may be seeing this warning due to a third-party PropTypes library. See https://fb.me/react-warning-dont-call-proptypes for details."), r[y] = !0, n++)
                                            }
                                        }
                                        return null != a[s] ? e(a, s, u, l, d) : i ? new PropTypeError(null === a[s] ? "The " + l + " `" + d + "` is marked as required in `" + u + "`, but its value is `null`." : "The " + l + " `" + d + "` is marked as required in `" + u + "`, but its value is `undefined`.") : null
                                    }
                                    var i = checkType.bind(null, !1);
                                    return i.isRequired = checkType.bind(null, !0), i
                                }

                                function createPrimitiveTypeChecker(e) {
                                    return createChainableTypeChecker(function(t, r, n, i, o, a) {
                                        var s = t[r];
                                        if (getPropType(s) !== e) {
                                            var c = getPreciseType(s);
                                            return new PropTypeError("Invalid " + i + " `" + o + "` of type `" + c + "` supplied to `" + n + "`, expected `" + e + "`.", {
                                                expectedType: e
                                            })
                                        }
                                        return null
                                    })
                                }

                                function invalidValidatorError(e, t, r, n, i) {
                                    return new PropTypeError((e || "React class") + ": " + t + " type `" + r + "." + n + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + i + "`.")
                                }

                                function getPropType(e) {
                                    var t = typeof e;
                                    return Array.isArray(e) ? "array" : e instanceof RegExp ? "object" : "symbol" === t || e && ("Symbol" === e["@@toStringTag"] || "function" == typeof Symbol && e instanceof Symbol) ? "symbol" : t
                                }

                                function getPreciseType(e) {
                                    if (null == e) return "" + e;
                                    var t = getPropType(e);
                                    if ("object" === t) {
                                        if (e instanceof Date) return "date";
                                        if (e instanceof RegExp) return "regexp"
                                    }
                                    return t
                                }
                                return PropTypeError.prototype = Error.prototype, u.checkPropTypes = s, u.resetWarningCache = s.resetWarningCache, u.PropTypes = u, u
                            }
                        },
                        "./node_modules/prop-types/index.js": (e, t, r) => {
                            var n = r( /*! react-is */ "./node_modules/react-is/index.js");
                            e.exports = r( /*! ./factoryWithTypeCheckers */ "./node_modules/prop-types/factoryWithTypeCheckers.js")(n.isElement, !0)
                        },
                        "./node_modules/prop-types/lib/ReactPropTypesSecret.js": e => {
                            "use strict";
                            e.exports = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"
                        },
                        "./node_modules/prop-types/lib/has.js": e => {
                            e.exports = Function.call.bind(Object.prototype.hasOwnProperty)
                        },
                        "./node_modules/react-is/cjs/react-is.development.js": (e, t) => {
                            "use strict";
                            ! function() {
                                var e = "function" == typeof Symbol && Symbol.for,
                                    r = e ? Symbol.for("react.element") : 60103,
                                    n = e ? Symbol.for("react.portal") : 60106,
                                    i = e ? Symbol.for("react.fragment") : 60107,
                                    o = e ? Symbol.for("react.strict_mode") : 60108,
                                    a = e ? Symbol.for("react.profiler") : 60114,
                                    s = e ? Symbol.for("react.provider") : 60109,
                                    c = e ? Symbol.for("react.context") : 60110,
                                    u = e ? Symbol.for("react.async_mode") : 60111,
                                    l = e ? Symbol.for("react.concurrent_mode") : 60111,
                                    d = e ? Symbol.for("react.forward_ref") : 60112,
                                    f = e ? Symbol.for("react.suspense") : 60113,
                                    p = e ? Symbol.for("react.suspense_list") : 60120,
                                    y = e ? Symbol.for("react.memo") : 60115,
                                    g = e ? Symbol.for("react.lazy") : 60116,
                                    v = e ? Symbol.for("react.block") : 60121,
                                    E = e ? Symbol.for("react.fundamental") : 60117,
                                    _ = e ? Symbol.for("react.responder") : 60118,
                                    P = e ? Symbol.for("react.scope") : 60119;

                                function typeOf(e) {
                                    if ("object" == typeof e && null !== e) {
                                        var t = e.$$typeof;
                                        switch (t) {
                                            case r:
                                                var p = e.type;
                                                switch (p) {
                                                    case u:
                                                    case l:
                                                    case i:
                                                    case a:
                                                    case o:
                                                    case f:
                                                        return p;
                                                    default:
                                                        var v = p && p.$$typeof;
                                                        switch (v) {
                                                            case c:
                                                            case d:
                                                            case g:
                                                            case y:
                                                            case s:
                                                                return v;
                                                            default:
                                                                return t
                                                        }
                                                }
                                            case n:
                                                return t
                                        }
                                    }
                                }
                                var T = !1;

                                function isConcurrentMode(e) {
                                    return typeOf(e) === l
                                }
                                t.AsyncMode = u, t.ConcurrentMode = l, t.ContextConsumer = c, t.ContextProvider = s, t.Element = r, t.ForwardRef = d, t.Fragment = i, t.Lazy = g, t.Memo = y, t.Portal = n, t.Profiler = a, t.StrictMode = o, t.Suspense = f, t.isAsyncMode = function(e) {
                                    return T || (T = !0, console.warn("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.")), isConcurrentMode(e) || typeOf(e) === u
                                }, t.isConcurrentMode = isConcurrentMode, t.isContextConsumer = function(e) {
                                    return typeOf(e) === c
                                }, t.isContextProvider = function(e) {
                                    return typeOf(e) === s
                                }, t.isElement = function(e) {
                                    return "object" == typeof e && null !== e && e.$$typeof === r
                                }, t.isForwardRef = function(e) {
                                    return typeOf(e) === d
                                }, t.isFragment = function(e) {
                                    return typeOf(e) === i
                                }, t.isLazy = function(e) {
                                    return typeOf(e) === g
                                }, t.isMemo = function(e) {
                                    return typeOf(e) === y
                                }, t.isPortal = function(e) {
                                    return typeOf(e) === n
                                }, t.isProfiler = function(e) {
                                    return typeOf(e) === a
                                }, t.isStrictMode = function(e) {
                                    return typeOf(e) === o
                                }, t.isSuspense = function(e) {
                                    return typeOf(e) === f
                                }, t.isValidElementType = function(e) {
                                    return "string" == typeof e || "function" == typeof e || e === i || e === l || e === a || e === o || e === f || e === p || "object" == typeof e && null !== e && (e.$$typeof === g || e.$$typeof === y || e.$$typeof === s || e.$$typeof === c || e.$$typeof === d || e.$$typeof === E || e.$$typeof === _ || e.$$typeof === P || e.$$typeof === v)
                                }, t.typeOf = typeOf
                            }()
                        },
                        "./node_modules/react-is/index.js": (e, t, r) => {
                            "use strict";
                            e.exports = r( /*! ./cjs/react-is.development.js */ "./node_modules/react-is/cjs/react-is.development.js")
                        },
                        "./node_modules/shallow-equal/dist/index.esm.js": (e, t, r) => {
                            "use strict";

                            function shallowEqualObjects(e, t) {
                                if (e === t) return !0;
                                if (!e || !t) return !1;
                                var r = Object.keys(e),
                                    n = Object.keys(t),
                                    i = r.length;
                                if (n.length !== i) return !1;
                                for (var o = 0; o < i; o++) {
                                    var a = r[o];
                                    if (e[a] !== t[a] || !Object.prototype.hasOwnProperty.call(t, a)) return !1
                                }
                                return !0
                            }

                            function shallowEqualArrays(e, t) {
                                if (e === t) return !0;
                                if (!e || !t) return !1;
                                var r = e.length;
                                if (t.length !== r) return !1;
                                for (var n = 0; n < r; n++)
                                    if (e[n] !== t[n]) return !1;
                                return !0
                            }
                            r.r(t), r.d(t, {
                                shallowEqualArrays: () => shallowEqualArrays,
                                shallowEqualObjects: () => shallowEqualObjects
                            })
                        },
                        "./src/Component.ts": function(e, t, r) {
                            "use strict";
                            var n = this && this.__rest || function(e, t) {
                                    var r = {};
                                    for (var n in e) Object.prototype.hasOwnProperty.call(e, n) && 0 > t.indexOf(n) && (r[n] = e[n]);
                                    if (null != e && "function" == typeof Object.getOwnPropertySymbols)
                                        for (var i = 0, n = Object.getOwnPropertySymbols(e); i < n.length; i++) 0 > t.indexOf(n[i]) && Object.prototype.propertyIsEnumerable.call(e, n[i]) && (r[n[i]] = e[n[i]]);
                                    return r
                                },
                                i = this && this.__importDefault || function(e) {
                                    return e && e.__esModule ? e : {
                                        default: e
                                    }
                                };
                            Object.defineProperty(t, "__esModule", {
                                value: !0
                            });
                            var o = i(r( /*! ./useMediaQuery */ "./src/useMediaQuery.ts"));
                            t.default = function(e) {
                                var t = e.children,
                                    r = e.device,
                                    i = e.onChange,
                                    a = n(e, ["children", "device", "onChange"]),
                                    s = (0, o.default)(a, r, i);
                                return "function" == typeof t ? t(s) : s ? t : null
                            }
                        },
                        "./src/Context.ts": (e, t, r) => {
                            "use strict";
                            Object.defineProperty(t, "__esModule", {
                                value: !0
                            });
                            var n = (0, r( /*! react */ "react").createContext)(void 0);
                            t.default = n
                        },
                        "./src/index.ts": function(e, t, r) {
                            "use strict";
                            var n = this && this.__importDefault || function(e) {
                                return e && e.__esModule ? e : {
                                    default: e
                                }
                            };
                            Object.defineProperty(t, "__esModule", {
                                value: !0
                            }), t.Context = t.toQuery = t.useMediaQuery = t.default = void 0;
                            var i = n(r( /*! ./useMediaQuery */ "./src/useMediaQuery.ts"));
                            t.useMediaQuery = i.default;
                            var o = n(r( /*! ./Component */ "./src/Component.ts"));
                            t.default = o.default;
                            var a = n(r( /*! ./toQuery */ "./src/toQuery.ts"));
                            t.toQuery = a.default;
                            var s = n(r( /*! ./Context */ "./src/Context.ts"));
                            t.Context = s.default
                        },
                        "./src/mediaQuery.ts": function(e, t, r) {
                            "use strict";
                            var n = this && this.__assign || function() {
                                    return (n = Object.assign || function(e) {
                                        for (var t, r = 1, n = arguments.length; r < n; r++)
                                            for (var i in t = arguments[r]) Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i]);
                                        return e
                                    }).apply(this, arguments)
                                },
                                i = this && this.__rest || function(e, t) {
                                    var r = {};
                                    for (var n in e) Object.prototype.hasOwnProperty.call(e, n) && 0 > t.indexOf(n) && (r[n] = e[n]);
                                    if (null != e && "function" == typeof Object.getOwnPropertySymbols)
                                        for (var i = 0, n = Object.getOwnPropertySymbols(e); i < n.length; i++) 0 > t.indexOf(n[i]) && Object.prototype.propertyIsEnumerable.call(e, n[i]) && (r[n[i]] = e[n[i]]);
                                    return r
                                },
                                o = this && this.__importDefault || function(e) {
                                    return e && e.__esModule ? e : {
                                        default: e
                                    }
                                };
                            Object.defineProperty(t, "__esModule", {
                                value: !0
                            });
                            var a = o(r( /*! prop-types */ "./node_modules/prop-types/index.js")),
                                s = a.default.oneOfType([a.default.string, a.default.number]),
                                c = {
                                    all: a.default.bool,
                                    grid: a.default.bool,
                                    aural: a.default.bool,
                                    braille: a.default.bool,
                                    handheld: a.default.bool,
                                    print: a.default.bool,
                                    projection: a.default.bool,
                                    screen: a.default.bool,
                                    tty: a.default.bool,
                                    tv: a.default.bool,
                                    embossed: a.default.bool
                                },
                                u = {
                                    orientation: a.default.oneOf(["portrait", "landscape"]),
                                    scan: a.default.oneOf(["progressive", "interlace"]),
                                    aspectRatio: a.default.string,
                                    deviceAspectRatio: a.default.string,
                                    height: s,
                                    deviceHeight: s,
                                    width: s,
                                    deviceWidth: s,
                                    color: a.default.bool,
                                    colorIndex: a.default.bool,
                                    monochrome: a.default.bool,
                                    resolution: s,
                                    type: Object.keys(c)
                                };
                            u.type;
                            var l = i(u, ["type"]),
                                d = n({
                                    minAspectRatio: a.default.string,
                                    maxAspectRatio: a.default.string,
                                    minDeviceAspectRatio: a.default.string,
                                    maxDeviceAspectRatio: a.default.string,
                                    minHeight: s,
                                    maxHeight: s,
                                    minDeviceHeight: s,
                                    maxDeviceHeight: s,
                                    minWidth: s,
                                    maxWidth: s,
                                    minDeviceWidth: s,
                                    maxDeviceWidth: s,
                                    minColor: a.default.number,
                                    maxColor: a.default.number,
                                    minColorIndex: a.default.number,
                                    maxColorIndex: a.default.number,
                                    minMonochrome: a.default.number,
                                    maxMonochrome: a.default.number,
                                    minResolution: s,
                                    maxResolution: s
                                }, l),
                                f = n(n({}, c), d);
                            t.default = {
                                all: f,
                                types: c,
                                matchers: u,
                                features: d
                            }
                        },
                        "./src/toQuery.ts": function(e, t, r) {
                            "use strict";
                            var n = this && this.__importDefault || function(e) {
                                return e && e.__esModule ? e : {
                                    default: e
                                }
                            };
                            Object.defineProperty(t, "__esModule", {
                                value: !0
                            });
                            var i = n(r( /*! hyphenate-style-name */ "./node_modules/hyphenate-style-name/index.js")),
                                o = n(r( /*! ./mediaQuery */ "./src/mediaQuery.ts")),
                                keyVal = function(e, t) {
                                    var r = (0, i.default)(e);
                                    return ("number" == typeof t && (t = "".concat(t, "px")), !0 === t) ? r : !1 === t ? "not ".concat(r) : "(".concat(r, ": ").concat(t, ")")
                                };
                            t.default = function(e) {
                                var t = [];
                                return Object.keys(o.default.all).forEach(function(r) {
                                    var n = e[r];
                                    null != n && t.push(keyVal(r, n))
                                }), t.join(" and ")
                            }
                        },
                        "./src/useMediaQuery.ts": function(e, t, r) {
                            "use strict";
                            var n = this && this.__importDefault || function(e) {
                                return e && e.__esModule ? e : {
                                    default: e
                                }
                            };
                            Object.defineProperty(t, "__esModule", {
                                value: !0
                            });
                            var i = r( /*! react */ "react"),
                                o = n(r( /*! matchmediaquery */ "./node_modules/matchmediaquery/index.js")),
                                a = n(r( /*! hyphenate-style-name */ "./node_modules/hyphenate-style-name/index.js")),
                                s = r( /*! shallow-equal */ "./node_modules/shallow-equal/dist/index.esm.js"),
                                c = n(r( /*! ./toQuery */ "./src/toQuery.ts")),
                                u = n(r( /*! ./Context */ "./src/Context.ts")),
                                hyphenateKeys = function(e) {
                                    if (e) return Object.keys(e).reduce(function(t, r) {
                                        return t[(0, a.default)(r)] = e[r], t
                                    }, {})
                                },
                                useIsUpdate = function() {
                                    var e = (0, i.useRef)(!1);
                                    return (0, i.useEffect)(function() {
                                        e.current = !0
                                    }, []), e.current
                                },
                                useDevice = function(e) {
                                    var t = (0, i.useContext)(u.default),
                                        getDevice = function() {
                                            return hyphenateKeys(e) || hyphenateKeys(t)
                                        },
                                        r = (0, i.useState)(getDevice),
                                        n = r[0],
                                        o = r[1];
                                    return (0, i.useEffect)(function() {
                                        var e = getDevice();
                                        (0, s.shallowEqualObjects)(n, e) || o(e)
                                    }, [e, t]), n
                                },
                                useQuery = function(e) {
                                    var getQuery = function() {
                                            return e.query || (0, c.default)(e)
                                        },
                                        t = (0, i.useState)(getQuery),
                                        r = t[0],
                                        n = t[1];
                                    return (0, i.useEffect)(function() {
                                        var e = getQuery();
                                        r !== e && n(e)
                                    }, [e]), r
                                },
                                useMatchMedia = function(e, t) {
                                    var getMatchMedia = function() {
                                            return (0, o.default)(e, t || {}, !!t)
                                        },
                                        r = (0, i.useState)(getMatchMedia),
                                        n = r[0],
                                        a = r[1],
                                        s = useIsUpdate();
                                    return (0, i.useEffect)(function() {
                                        if (s) {
                                            var e = getMatchMedia();
                                            return a(e),
                                                function() {
                                                    e && e.dispose()
                                                }
                                        }
                                    }, [e, t]), n
                                },
                                useMatches = function(e) {
                                    var t = (0, i.useState)(e.matches),
                                        r = t[0],
                                        n = t[1];
                                    return (0, i.useEffect)(function() {
                                        var updateMatches = function(e) {
                                            n(e.matches)
                                        };
                                        return e.addListener(updateMatches), n(e.matches),
                                            function() {
                                                e.removeListener(updateMatches)
                                            }
                                    }, [e]), r
                                };
                            t.default = function(e, t, r) {
                                var n = useDevice(t),
                                    o = useQuery(e);
                                if (!o) throw Error("Invalid or missing MediaQuery!");
                                var a = useMatchMedia(o, n),
                                    s = useMatches(a),
                                    c = useIsUpdate();
                                return (0, i.useEffect)(function() {
                                    c && r && r(s)
                                }, [s]), (0, i.useEffect)(function() {
                                    return function() {
                                        a && a.dispose()
                                    }
                                }, []), s
                            }
                        },
                        react: e => {
                            "use strict";
                            e.exports = n
                        }
                    },
                    t = {};

                function __nested_webpack_require_62230__(r) {
                    var n = t[r];
                    if (void 0 !== n) return n.exports;
                    var i = t[r] = {
                        exports: {}
                    };
                    return e[r].call(i.exports, i, i.exports, __nested_webpack_require_62230__), i.exports
                }
                return __nested_webpack_require_62230__.d = (e, t) => {
                    for (var r in t) __nested_webpack_require_62230__.o(t, r) && !__nested_webpack_require_62230__.o(e, r) && Object.defineProperty(e, r, {
                        enumerable: !0,
                        get: t[r]
                    })
                }, __nested_webpack_require_62230__.o = (e, t) => Object.prototype.hasOwnProperty.call(e, t), __nested_webpack_require_62230__.r = e => {
                    "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {
                        value: "Module"
                    }), Object.defineProperty(e, "__esModule", {
                        value: !0
                    })
                }, __nested_webpack_require_62230__("./src/index.ts")
            })())
        },
        34470: function(e) {
            "use strict";
            e.exports = (e, t) => {
                if (!("string" == typeof e && "string" == typeof t)) throw TypeError("Expected the arguments to be of type `string`");
                if ("" === t) return [e];
                let r = e.indexOf(t);
                return -1 === r ? [e] : [e.slice(0, r), e.slice(r + t.length)]
            }
        },
        67116: function(e) {
            "use strict";
            e.exports = e => encodeURIComponent(e).replace(/[!'()*]/g, e => `%${e.charCodeAt(0).toString(16).toUpperCase()}`)
        },
        49175: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.BaseError = void 0;
            let n = r(36140);
            let BaseError = class BaseError extends Error {
                constructor(e, t = {}) {
                    let r = t.cause instanceof BaseError ? t.cause.details : t.cause ? .message ? t.cause.message : t.details,
                        i = t.cause instanceof BaseError && t.cause.docsPath || t.docsPath,
                        o = [e || "An error occurred.", "", ...t.metaMessages ? [...t.metaMessages, ""] : [], ...i ? [`Docs: https://abitype.dev${i}`] : [], ...r ? [`Details: ${r}`] : [], `Version: abitype@${n.version}`].join("\n");
                    super(o), Object.defineProperty(this, "details", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "docsPath", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "metaMessages", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "shortMessage", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "AbiTypeError"
                    }), t.cause && (this.cause = t.cause), this.details = r, this.docsPath = i, this.metaMessages = t.metaMessages, this.shortMessage = e
                }
            };
            t.BaseError = BaseError
        },
        76807: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.UnknownSolidityTypeError = t.UnknownTypeError = t.InvalidAbiItemError = void 0;
            let n = r(49175);
            let InvalidAbiItemError = class InvalidAbiItemError extends n.BaseError {
                constructor({
                    signature: e
                }) {
                    super("Failed to parse ABI item.", {
                        details: `parseAbiItem(${JSON.stringify(e,null,2)})`,
                        docsPath: "/api/human.html#parseabiitem-1"
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidAbiItemError"
                    })
                }
            };
            t.InvalidAbiItemError = InvalidAbiItemError;
            let UnknownTypeError = class UnknownTypeError extends n.BaseError {
                constructor({
                    type: e
                }) {
                    super("Unknown type.", {
                        metaMessages: [`Type "${e}" is not a valid ABI type. Perhaps you forgot to include a struct signature?`]
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "UnknownTypeError"
                    })
                }
            };
            t.UnknownTypeError = UnknownTypeError;
            let UnknownSolidityTypeError = class UnknownSolidityTypeError extends n.BaseError {
                constructor({
                    type: e
                }) {
                    super("Unknown type.", {
                        metaMessages: [`Type "${e}" is not a valid ABI type.`]
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "UnknownSolidityTypeError"
                    })
                }
            };
            t.UnknownSolidityTypeError = UnknownSolidityTypeError
        },
        33006: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.InvalidAbiTypeParameterError = t.InvalidFunctionModifierError = t.InvalidModifierError = t.SolidityProtectedKeywordError = t.InvalidParameterError = t.InvalidAbiParametersError = t.InvalidAbiParameterError = void 0;
            let n = r(49175);
            let InvalidAbiParameterError = class InvalidAbiParameterError extends n.BaseError {
                constructor({
                    param: e
                }) {
                    super("Failed to parse ABI parameter.", {
                        details: `parseAbiParameter(${JSON.stringify(e,null,2)})`,
                        docsPath: "/api/human.html#parseabiparameter-1"
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidAbiParameterError"
                    })
                }
            };
            t.InvalidAbiParameterError = InvalidAbiParameterError;
            let InvalidAbiParametersError = class InvalidAbiParametersError extends n.BaseError {
                constructor({
                    params: e
                }) {
                    super("Failed to parse ABI parameters.", {
                        details: `parseAbiParameters(${JSON.stringify(e,null,2)})`,
                        docsPath: "/api/human.html#parseabiparameters-1"
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidAbiParametersError"
                    })
                }
            };
            t.InvalidAbiParametersError = InvalidAbiParametersError;
            let InvalidParameterError = class InvalidParameterError extends n.BaseError {
                constructor({
                    param: e
                }) {
                    super("Invalid ABI parameter.", {
                        details: e
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidParameterError"
                    })
                }
            };
            t.InvalidParameterError = InvalidParameterError;
            let SolidityProtectedKeywordError = class SolidityProtectedKeywordError extends n.BaseError {
                constructor({
                    param: e,
                    name: t
                }) {
                    super("Invalid ABI parameter.", {
                        details: e,
                        metaMessages: [`"${t}" is a protected Solidity keyword. More info: https://docs.soliditylang.org/en/latest/cheatsheet.html`]
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "SolidityProtectedKeywordError"
                    })
                }
            };
            t.SolidityProtectedKeywordError = SolidityProtectedKeywordError;
            let InvalidModifierError = class InvalidModifierError extends n.BaseError {
                constructor({
                    param: e,
                    type: t,
                    modifier: r
                }) {
                    super("Invalid ABI parameter.", {
                        details: e,
                        metaMessages: [`Modifier "${r}" not allowed${t?` in "${t}" type`:""}.`]
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidModifierError"
                    })
                }
            };
            t.InvalidModifierError = InvalidModifierError;
            let InvalidFunctionModifierError = class InvalidFunctionModifierError extends n.BaseError {
                constructor({
                    param: e,
                    type: t,
                    modifier: r
                }) {
                    super("Invalid ABI parameter.", {
                        details: e,
                        metaMessages: [`Modifier "${r}" not allowed${t?` in "${t}" type`:""}.`, `Data location can only be specified for array, struct, or mapping types, but "${r}" was given.`]
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidFunctionModifierError"
                    })
                }
            };
            t.InvalidFunctionModifierError = InvalidFunctionModifierError;
            let InvalidAbiTypeParameterError = class InvalidAbiTypeParameterError extends n.BaseError {
                constructor({
                    abiParameter: e
                }) {
                    super("Invalid ABI parameter.", {
                        details: JSON.stringify(e, null, 2),
                        metaMessages: ["ABI parameter type is invalid."]
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidAbiTypeParameterError"
                    })
                }
            };
            t.InvalidAbiTypeParameterError = InvalidAbiTypeParameterError
        },
        82304: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.InvalidStructSignatureError = t.UnknownSignatureError = t.InvalidSignatureError = void 0;
            let n = r(49175);
            let InvalidSignatureError = class InvalidSignatureError extends n.BaseError {
                constructor({
                    signature: e,
                    type: t
                }) {
                    super(`Invalid ${t} signature.`, {
                        details: e
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidSignatureError"
                    })
                }
            };
            t.InvalidSignatureError = InvalidSignatureError;
            let UnknownSignatureError = class UnknownSignatureError extends n.BaseError {
                constructor({
                    signature: e
                }) {
                    super("Unknown signature.", {
                        details: e
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "UnknownSignatureError"
                    })
                }
            };
            t.UnknownSignatureError = UnknownSignatureError;
            let InvalidStructSignatureError = class InvalidStructSignatureError extends n.BaseError {
                constructor({
                    signature: e
                }) {
                    super("Invalid struct signature.", {
                        details: e,
                        metaMessages: ["No properties exist."]
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidStructSignatureError"
                    })
                }
            };
            t.InvalidStructSignatureError = InvalidStructSignatureError
        },
        8123: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.InvalidParenthesisError = void 0;
            let n = r(49175);
            let InvalidParenthesisError = class InvalidParenthesisError extends n.BaseError {
                constructor({
                    current: e,
                    depth: t
                }) {
                    super("Unbalanced parentheses.", {
                        metaMessages: [`"${e.trim()}" has too many ${t>0?"opening":"closing"} parentheses.`],
                        details: `Depth "${t}"`
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidParenthesisError"
                    })
                }
            };
            t.InvalidParenthesisError = InvalidParenthesisError
        },
        20158: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.CircularReferenceError = void 0;
            let n = r(49175);
            let CircularReferenceError = class CircularReferenceError extends n.BaseError {
                constructor({
                    type: e
                }) {
                    super("Circular reference detected.", {
                        metaMessages: [`Struct "${e}" is a circular reference.`]
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "CircularReferenceError"
                    })
                }
            };
            t.CircularReferenceError = CircularReferenceError
        },
        19388: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.formatAbi = void 0;
            let n = r(243);
            t.formatAbi = function(e) {
                let t = [],
                    r = e.length;
                for (let i = 0; i < r; i++) {
                    let r = e[i],
                        o = (0, n.formatAbiItem)(r);
                    t.push(o)
                }
                return t
            }
        },
        243: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.formatAbiItem = void 0;
            let n = r(42115);
            t.formatAbiItem = function(e) {
                return "function" === e.type ? `function ${e.name}(${(0,n.formatAbiParameters)(e.inputs)})${e.stateMutability&&"nonpayable"!==e.stateMutability?` ${e.stateMutability}`:""}${e.outputs.length?` returns (${(0,n.formatAbiParameters)(e.outputs)})`:""}` : "event" === e.type ? `event ${e.name}(${(0,n.formatAbiParameters)(e.inputs)})` : "error" === e.type ? `error ${e.name}(${(0,n.formatAbiParameters)(e.inputs)})` : "constructor" === e.type ? `constructor(${(0,n.formatAbiParameters)(e.inputs)})${"payable"===e.stateMutability?" payable":""}` : "fallback" === e.type ? "fallback()" : "receive() external payable"
            }
        },
        33580: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.formatAbiParameter = void 0;
            let n = r(49582),
                i = /^tuple(?<array>(\[(\d*)\])*)$/;
            t.formatAbiParameter = function formatAbiParameter(e) {
                let t = e.type;
                if (i.test(e.type) && "components" in e) {
                    t = "(";
                    let r = e.components.length;
                    for (let n = 0; n < r; n++) {
                        let i = e.components[n];
                        t += formatAbiParameter(i), n < r - 1 && (t += ", ")
                    }
                    let o = (0, n.execTyped)(i, e.type);
                    return t += `)${o?.array??""}`, formatAbiParameter({ ...e,
                        type: t
                    })
                }
                return ("indexed" in e && e.indexed && (t = `${t} indexed`), e.name) ? `${t} ${e.name}` : t
            }
        },
        42115: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.formatAbiParameters = void 0;
            let n = r(33580);
            t.formatAbiParameters = function(e) {
                let t = "",
                    r = e.length;
                for (let i = 0; i < r; i++) {
                    let o = e[i];
                    t += (0, n.formatAbiParameter)(o), i !== r - 1 && (t += ", ")
                }
                return t
            }
        },
        86736: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.parseAbi = void 0;
            let n = r(50387),
                i = r(78131),
                o = r(42093);
            t.parseAbi = function(e) {
                let t = (0, i.parseStructs)(e),
                    r = [],
                    a = e.length;
                for (let i = 0; i < a; i++) {
                    let a = e[i];
                    (0, n.isStructSignature)(a) || r.push((0, o.parseSignature)(a, t))
                }
                return r
            }
        },
        3173: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.parseAbiItem = void 0;
            let n = r(84595),
                i = r(50387),
                o = r(78131),
                a = r(42093);
            t.parseAbiItem = function(e) {
                let t;
                if ("string" == typeof e) t = (0, a.parseSignature)(e);
                else {
                    let r = (0, o.parseStructs)(e),
                        n = e.length;
                    for (let o = 0; o < n; o++) {
                        let n = e[o];
                        if (!(0, i.isStructSignature)(n)) {
                            t = (0, a.parseSignature)(n, r);
                            break
                        }
                    }
                }
                if (!t) throw new n.InvalidAbiItemError({
                    signature: e
                });
                return t
            }
        },
        46796: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.parseAbiParameter = void 0;
            let n = r(84595),
                i = r(50387),
                o = r(78131),
                a = r(42093);
            t.parseAbiParameter = function(e) {
                let t;
                if ("string" == typeof e) t = (0, a.parseAbiParameter)(e, {
                    modifiers: i.modifiers
                });
                else {
                    let r = (0, o.parseStructs)(e),
                        n = e.length;
                    for (let o = 0; o < n; o++) {
                        let n = e[o];
                        if (!(0, i.isStructSignature)(n)) {
                            t = (0, a.parseAbiParameter)(n, {
                                modifiers: i.modifiers,
                                structs: r
                            });
                            break
                        }
                    }
                }
                if (!t) throw new n.InvalidAbiParameterError({
                    param: e
                });
                return t
            }
        },
        26513: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.parseAbiParameters = void 0;
            let n = r(84595),
                i = r(50387),
                o = r(78131),
                a = r(42093),
                s = r(42093);
            t.parseAbiParameters = function(e) {
                let t = [];
                if ("string" == typeof e) {
                    let r = (0, a.splitParameters)(e),
                        n = r.length;
                    for (let e = 0; e < n; e++) t.push((0, s.parseAbiParameter)(r[e], {
                        modifiers: i.modifiers
                    }))
                } else {
                    let r = (0, o.parseStructs)(e),
                        n = e.length;
                    for (let o = 0; o < n; o++) {
                        let n = e[o];
                        if ((0, i.isStructSignature)(n)) continue;
                        let c = (0, a.splitParameters)(n),
                            u = c.length;
                        for (let e = 0; e < u; e++) t.push((0, s.parseAbiParameter)(c[e], {
                            modifiers: i.modifiers,
                            structs: r
                        }))
                    }
                }
                if (0 === t.length) throw new n.InvalidAbiParametersError({
                    params: e
                });
                return t
            }
        },
        66190: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.parameterCache = t.getParameterCacheKey = void 0, t.getParameterCacheKey = function(e, t) {
                return t ? `${t}:${e}` : e
            }, t.parameterCache = new Map([
                ["address", {
                    type: "address"
                }],
                ["bool", {
                    type: "bool"
                }],
                ["bytes", {
                    type: "bytes"
                }],
                ["bytes32", {
                    type: "bytes32"
                }],
                ["int", {
                    type: "int256"
                }],
                ["int256", {
                    type: "int256"
                }],
                ["string", {
                    type: "string"
                }],
                ["uint", {
                    type: "uint256"
                }],
                ["uint8", {
                    type: "uint8"
                }],
                ["uint16", {
                    type: "uint16"
                }],
                ["uint24", {
                    type: "uint24"
                }],
                ["uint32", {
                    type: "uint32"
                }],
                ["uint64", {
                    type: "uint64"
                }],
                ["uint96", {
                    type: "uint96"
                }],
                ["uint112", {
                    type: "uint112"
                }],
                ["uint160", {
                    type: "uint160"
                }],
                ["uint192", {
                    type: "uint192"
                }],
                ["uint256", {
                    type: "uint256"
                }],
                ["address owner", {
                    type: "address",
                    name: "owner"
                }],
                ["address to", {
                    type: "address",
                    name: "to"
                }],
                ["bool approved", {
                    type: "bool",
                    name: "approved"
                }],
                ["bytes _data", {
                    type: "bytes",
                    name: "_data"
                }],
                ["bytes data", {
                    type: "bytes",
                    name: "data"
                }],
                ["bytes signature", {
                    type: "bytes",
                    name: "signature"
                }],
                ["bytes32 hash", {
                    type: "bytes32",
                    name: "hash"
                }],
                ["bytes32 r", {
                    type: "bytes32",
                    name: "r"
                }],
                ["bytes32 root", {
                    type: "bytes32",
                    name: "root"
                }],
                ["bytes32 s", {
                    type: "bytes32",
                    name: "s"
                }],
                ["string name", {
                    type: "string",
                    name: "name"
                }],
                ["string symbol", {
                    type: "string",
                    name: "symbol"
                }],
                ["string tokenURI", {
                    type: "string",
                    name: "tokenURI"
                }],
                ["uint tokenId", {
                    type: "uint256",
                    name: "tokenId"
                }],
                ["uint8 v", {
                    type: "uint8",
                    name: "v"
                }],
                ["uint256 balance", {
                    type: "uint256",
                    name: "balance"
                }],
                ["uint256 tokenId", {
                    type: "uint256",
                    name: "tokenId"
                }],
                ["uint256 value", {
                    type: "uint256",
                    name: "value"
                }],
                ["event:address indexed from", {
                    type: "address",
                    name: "from",
                    indexed: !0
                }],
                ["event:address indexed to", {
                    type: "address",
                    name: "to",
                    indexed: !0
                }],
                ["event:uint indexed tokenId", {
                    type: "uint256",
                    name: "tokenId",
                    indexed: !0
                }],
                ["event:uint256 indexed tokenId", {
                    type: "uint256",
                    name: "tokenId",
                    indexed: !0
                }]
            ])
        },
        50387: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.functionModifiers = t.eventModifiers = t.modifiers = t.isReceiveSignature = t.isFallbackSignature = t.execConstructorSignature = t.isConstructorSignature = t.execStructSignature = t.isStructSignature = t.execFunctionSignature = t.isFunctionSignature = t.execEventSignature = t.isEventSignature = t.execErrorSignature = t.isErrorSignature = void 0;
            let n = r(49582),
                i = /^error (?<name>[a-zA-Z$_][a-zA-Z0-9$_]*)\((?<parameters>.*?)\)$/;
            t.isErrorSignature = function(e) {
                return i.test(e)
            }, t.execErrorSignature = function(e) {
                return (0, n.execTyped)(i, e)
            };
            let o = /^event (?<name>[a-zA-Z$_][a-zA-Z0-9$_]*)\((?<parameters>.*?)\)$/;
            t.isEventSignature = function(e) {
                return o.test(e)
            }, t.execEventSignature = function(e) {
                return (0, n.execTyped)(o, e)
            };
            let a = /^function (?<name>[a-zA-Z$_][a-zA-Z0-9$_]*)\((?<parameters>.*?)\)(?: (?<scope>external|public{1}))?(?: (?<stateMutability>pure|view|nonpayable|payable{1}))?(?: returns\s?\((?<returns>.*?)\))?$/;
            t.isFunctionSignature = function(e) {
                return a.test(e)
            }, t.execFunctionSignature = function(e) {
                return (0, n.execTyped)(a, e)
            };
            let s = /^struct (?<name>[a-zA-Z$_][a-zA-Z0-9$_]*) \{(?<properties>.*?)\}$/;
            t.isStructSignature = function(e) {
                return s.test(e)
            }, t.execStructSignature = function(e) {
                return (0, n.execTyped)(s, e)
            };
            let c = /^constructor\((?<parameters>.*?)\)(?:\s(?<stateMutability>payable{1}))?$/;
            t.isConstructorSignature = function(e) {
                return c.test(e)
            }, t.execConstructorSignature = function(e) {
                return (0, n.execTyped)(c, e)
            };
            let u = /^fallback\(\)$/;
            t.isFallbackSignature = function(e) {
                return u.test(e)
            };
            let l = /^receive\(\) external payable$/;
            t.isReceiveSignature = function(e) {
                return l.test(e)
            }, t.modifiers = new Set(["memory", "indexed", "storage", "calldata"]), t.eventModifiers = new Set(["indexed"]), t.functionModifiers = new Set(["calldata", "memory", "storage"])
        },
        78131: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.parseStructs = void 0;
            let n = r(49582),
                i = r(76807),
                o = r(33006),
                a = r(82304),
                s = r(20158),
                c = r(50387),
                u = r(42093);
            t.parseStructs = function(e) {
                let t = {},
                    r = e.length;
                for (let n = 0; n < r; n++) {
                    let r = e[n];
                    if (!(0, c.isStructSignature)(r)) continue;
                    let i = (0, c.execStructSignature)(r);
                    if (!i) throw new a.InvalidSignatureError({
                        signature: r,
                        type: "struct"
                    });
                    let o = i.properties.split(";"),
                        s = [],
                        l = o.length;
                    for (let e = 0; e < l; e++) {
                        let t = o[e],
                            r = t.trim();
                        if (!r) continue;
                        let n = (0, u.parseAbiParameter)(r, {
                            type: "struct"
                        });
                        s.push(n)
                    }
                    if (!s.length) throw new a.InvalidStructSignatureError({
                        signature: r
                    });
                    t[i.name] = s
                }
                let d = {},
                    f = Object.entries(t),
                    p = f.length;
                for (let e = 0; e < p; e++) {
                    let [r, a] = f[e];
                    d[r] = function resolveStructs(e, t, r = new Set) {
                        let a = [],
                            c = e.length;
                        for (let d = 0; d < c; d++) {
                            let c = e[d],
                                f = n.isTupleRegex.test(c.type);
                            if (f) a.push(c);
                            else {
                                let e = (0, n.execTyped)(l, c.type);
                                if (!e ? .type) throw new o.InvalidAbiTypeParameterError({
                                    abiParameter: c
                                });
                                let {
                                    array: d,
                                    type: f
                                } = e;
                                if (f in t) {
                                    if (r.has(f)) throw new s.CircularReferenceError({
                                        type: f
                                    });
                                    a.push({ ...c,
                                        type: `tuple${d??""}`,
                                        components: resolveStructs(t[f] ? ? [], t, new Set([...r, f]))
                                    })
                                } else if ((0, u.isSolidityType)(f)) a.push(c);
                                else throw new i.UnknownTypeError({
                                    type: f
                                })
                            }
                        }
                        return a
                    }(a, t)
                }
                return d
            };
            let l = /^(?<type>[a-zA-Z$_][a-zA-Z0-9$_]*)(?<array>(?:\[\d*?\])+?)?$/
        },
        42093: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.isValidDataLocation = t.isSolidityKeyword = t.isSolidityType = t.splitParameters = t.parseAbiParameter = t.parseSignature = void 0;
            let n = r(49582),
                i = r(76807),
                o = r(33006),
                a = r(82304),
                s = r(8123),
                c = r(66190),
                u = r(50387);
            t.parseSignature = function(e, t = {}) {
                if ((0, u.isFunctionSignature)(e)) {
                    let r = (0, u.execFunctionSignature)(e);
                    if (!r) throw new a.InvalidSignatureError({
                        signature: e,
                        type: "function"
                    });
                    let n = splitParameters(r.parameters),
                        i = [],
                        o = n.length;
                    for (let e = 0; e < o; e++) i.push(parseAbiParameter(n[e], {
                        modifiers: u.functionModifiers,
                        structs: t,
                        type: "function"
                    }));
                    let s = [];
                    if (r.returns) {
                        let e = splitParameters(r.returns),
                            n = e.length;
                        for (let r = 0; r < n; r++) s.push(parseAbiParameter(e[r], {
                            modifiers: u.functionModifiers,
                            structs: t,
                            type: "function"
                        }))
                    }
                    return {
                        name: r.name,
                        type: "function",
                        stateMutability: r.stateMutability ? ? "nonpayable",
                        inputs: i,
                        outputs: s
                    }
                }
                if ((0, u.isEventSignature)(e)) {
                    let r = (0, u.execEventSignature)(e);
                    if (!r) throw new a.InvalidSignatureError({
                        signature: e,
                        type: "event"
                    });
                    let n = splitParameters(r.parameters),
                        i = [],
                        o = n.length;
                    for (let e = 0; e < o; e++) i.push(parseAbiParameter(n[e], {
                        modifiers: u.eventModifiers,
                        structs: t,
                        type: "event"
                    }));
                    return {
                        name: r.name,
                        type: "event",
                        inputs: i
                    }
                }
                if ((0, u.isErrorSignature)(e)) {
                    let r = (0, u.execErrorSignature)(e);
                    if (!r) throw new a.InvalidSignatureError({
                        signature: e,
                        type: "error"
                    });
                    let n = splitParameters(r.parameters),
                        i = [],
                        o = n.length;
                    for (let e = 0; e < o; e++) i.push(parseAbiParameter(n[e], {
                        structs: t,
                        type: "error"
                    }));
                    return {
                        name: r.name,
                        type: "error",
                        inputs: i
                    }
                }
                if ((0, u.isConstructorSignature)(e)) {
                    let r = (0, u.execConstructorSignature)(e);
                    if (!r) throw new a.InvalidSignatureError({
                        signature: e,
                        type: "constructor"
                    });
                    let n = splitParameters(r.parameters),
                        i = [],
                        o = n.length;
                    for (let e = 0; e < o; e++) i.push(parseAbiParameter(n[e], {
                        structs: t,
                        type: "constructor"
                    }));
                    return {
                        type: "constructor",
                        stateMutability: r.stateMutability ? ? "nonpayable",
                        inputs: i
                    }
                }
                if ((0, u.isFallbackSignature)(e)) return {
                    type: "fallback"
                };
                if ((0, u.isReceiveSignature)(e)) return {
                    type: "receive",
                    stateMutability: "payable"
                };
                throw new a.UnknownSignatureError({
                    signature: e
                })
            };
            let l = /^(?<type>[a-zA-Z$_][a-zA-Z0-9$_]*)(?<array>(?:\[\d*?\])+?)?(?:\s(?<modifier>calldata|indexed|memory|storage{1}))?(?:\s(?<name>[a-zA-Z$_][a-zA-Z0-9$_]*))?$/,
                d = /^\((?<type>.+?)\)(?<array>(?:\[\d*?\])+?)?(?:\s(?<modifier>calldata|indexed|memory|storage{1}))?(?:\s(?<name>[a-zA-Z$_][a-zA-Z0-9$_]*))?$/,
                f = /^u?int$/;

            function parseAbiParameter(e, t) {
                let r;
                let a = (0, c.getParameterCacheKey)(e, t ? .type);
                if (c.parameterCache.has(a)) return c.parameterCache.get(a);
                let s = n.isTupleRegex.test(e),
                    p = (0, n.execTyped)(s ? d : l, e);
                if (!p) throw new o.InvalidParameterError({
                    param: e
                });
                if (p.name && isSolidityKeyword(p.name)) throw new o.SolidityProtectedKeywordError({
                    param: e,
                    name: p.name
                });
                let y = p.name ? {
                        name: p.name
                    } : {},
                    g = "indexed" === p.modifier ? {
                        indexed: !0
                    } : {},
                    v = t ? .structs ? ? {},
                    E = {};
                if (s) {
                    r = "tuple";
                    let e = splitParameters(p.type),
                        t = [],
                        n = e.length;
                    for (let r = 0; r < n; r++) t.push(parseAbiParameter(e[r], {
                        structs: v
                    }));
                    E = {
                        components: t
                    }
                } else if (p.type in v) r = "tuple", E = {
                    components: v[p.type]
                };
                else if (f.test(p.type)) r = `${p.type}256`;
                else if (r = p.type, t ? .type !== "struct" && !isSolidityType(r)) throw new i.UnknownSolidityTypeError({
                    type: r
                });
                if (p.modifier) {
                    if (!t ? .modifiers ? .has ? .(p.modifier)) throw new o.InvalidModifierError({
                        param: e,
                        type: t ? .type,
                        modifier: p.modifier
                    });
                    if (u.functionModifiers.has(p.modifier) && !isValidDataLocation(r, !!p.array)) throw new o.InvalidFunctionModifierError({
                        param: e,
                        type: t ? .type,
                        modifier: p.modifier
                    })
                }
                let _ = {
                    type: `${r}${p.array??""}`,
                    ...y,
                    ...g,
                    ...E
                };
                return c.parameterCache.set(a, _), _
            }

            function splitParameters(e, t = [], r = "", n = 0) {
                if ("" === e) {
                    if ("" === r) return t;
                    if (0 !== n) throw new s.InvalidParenthesisError({
                        current: r,
                        depth: n
                    });
                    return t.push(r.trim()), t
                }
                let i = e.length;
                for (let o = 0; o < i; o++) {
                    let i = e[o],
                        a = e.slice(o + 1);
                    switch (i) {
                        case ",":
                            return 0 === n ? splitParameters(a, [...t, r.trim()]) : splitParameters(a, t, `${r}${i}`, n);
                        case "(":
                            return splitParameters(a, t, `${r}${i}`, n + 1);
                        case ")":
                            return splitParameters(a, t, `${r}${i}`, n - 1);
                        default:
                            return splitParameters(a, t, `${r}${i}`, n)
                    }
                }
                return []
            }

            function isSolidityType(e) {
                return "address" === e || "bool" === e || "function" === e || "string" === e || n.bytesRegex.test(e) || n.integerRegex.test(e)
            }
            t.parseAbiParameter = parseAbiParameter, t.splitParameters = splitParameters, t.isSolidityType = isSolidityType;
            let p = /^(?:after|alias|anonymous|apply|auto|byte|calldata|case|catch|constant|copyof|default|defined|error|event|external|false|final|function|immutable|implements|in|indexed|inline|internal|let|mapping|match|memory|mutable|null|of|override|partial|private|promise|public|pure|reference|relocatable|return|returns|sizeof|static|storage|struct|super|supports|switch|this|true|try|typedef|typeof|var|view|virtual)$/;

            function isSolidityKeyword(e) {
                return "address" === e || "bool" === e || "function" === e || "string" === e || "tuple" === e || n.bytesRegex.test(e) || n.integerRegex.test(e) || p.test(e)
            }

            function isValidDataLocation(e, t) {
                return t || "bytes" === e || "string" === e || "tuple" === e
            }
            t.isSolidityKeyword = isSolidityKeyword, t.isValidDataLocation = isValidDataLocation
        },
        84595: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.CircularReferenceError = t.InvalidParenthesisError = t.UnknownSignatureError = t.InvalidSignatureError = t.InvalidStructSignatureError = t.InvalidAbiParameterError = t.InvalidAbiParametersError = t.InvalidParameterError = t.SolidityProtectedKeywordError = t.InvalidModifierError = t.InvalidFunctionModifierError = t.InvalidAbiTypeParameterError = t.UnknownSolidityTypeError = t.InvalidAbiItemError = t.UnknownTypeError = t.parseAbiParameters = t.parseAbiParameter = t.parseAbiItem = t.parseAbi = t.formatAbiParameters = t.formatAbiParameter = t.formatAbiItem = t.formatAbi = t.narrow = t.BaseError = void 0;
            var n = r(49175);
            Object.defineProperty(t, "BaseError", {
                enumerable: !0,
                get: function() {
                    return n.BaseError
                }
            });
            var i = r(78927);
            Object.defineProperty(t, "narrow", {
                enumerable: !0,
                get: function() {
                    return i.narrow
                }
            });
            var o = r(19388);
            Object.defineProperty(t, "formatAbi", {
                enumerable: !0,
                get: function() {
                    return o.formatAbi
                }
            });
            var a = r(243);
            Object.defineProperty(t, "formatAbiItem", {
                enumerable: !0,
                get: function() {
                    return a.formatAbiItem
                }
            });
            var s = r(33580);
            Object.defineProperty(t, "formatAbiParameter", {
                enumerable: !0,
                get: function() {
                    return s.formatAbiParameter
                }
            });
            var c = r(42115);
            Object.defineProperty(t, "formatAbiParameters", {
                enumerable: !0,
                get: function() {
                    return c.formatAbiParameters
                }
            });
            var u = r(86736);
            Object.defineProperty(t, "parseAbi", {
                enumerable: !0,
                get: function() {
                    return u.parseAbi
                }
            });
            var l = r(3173);
            Object.defineProperty(t, "parseAbiItem", {
                enumerable: !0,
                get: function() {
                    return l.parseAbiItem
                }
            });
            var d = r(46796);
            Object.defineProperty(t, "parseAbiParameter", {
                enumerable: !0,
                get: function() {
                    return d.parseAbiParameter
                }
            });
            var f = r(26513);
            Object.defineProperty(t, "parseAbiParameters", {
                enumerable: !0,
                get: function() {
                    return f.parseAbiParameters
                }
            });
            var p = r(76807);
            Object.defineProperty(t, "UnknownTypeError", {
                enumerable: !0,
                get: function() {
                    return p.UnknownTypeError
                }
            }), Object.defineProperty(t, "InvalidAbiItemError", {
                enumerable: !0,
                get: function() {
                    return p.InvalidAbiItemError
                }
            }), Object.defineProperty(t, "UnknownSolidityTypeError", {
                enumerable: !0,
                get: function() {
                    return p.UnknownSolidityTypeError
                }
            });
            var y = r(33006);
            Object.defineProperty(t, "InvalidAbiTypeParameterError", {
                enumerable: !0,
                get: function() {
                    return y.InvalidAbiTypeParameterError
                }
            }), Object.defineProperty(t, "InvalidFunctionModifierError", {
                enumerable: !0,
                get: function() {
                    return y.InvalidFunctionModifierError
                }
            }), Object.defineProperty(t, "InvalidModifierError", {
                enumerable: !0,
                get: function() {
                    return y.InvalidModifierError
                }
            }), Object.defineProperty(t, "SolidityProtectedKeywordError", {
                enumerable: !0,
                get: function() {
                    return y.SolidityProtectedKeywordError
                }
            }), Object.defineProperty(t, "InvalidParameterError", {
                enumerable: !0,
                get: function() {
                    return y.InvalidParameterError
                }
            }), Object.defineProperty(t, "InvalidAbiParametersError", {
                enumerable: !0,
                get: function() {
                    return y.InvalidAbiParametersError
                }
            }), Object.defineProperty(t, "InvalidAbiParameterError", {
                enumerable: !0,
                get: function() {
                    return y.InvalidAbiParameterError
                }
            });
            var g = r(82304);
            Object.defineProperty(t, "InvalidStructSignatureError", {
                enumerable: !0,
                get: function() {
                    return g.InvalidStructSignatureError
                }
            }), Object.defineProperty(t, "InvalidSignatureError", {
                enumerable: !0,
                get: function() {
                    return g.InvalidSignatureError
                }
            }), Object.defineProperty(t, "UnknownSignatureError", {
                enumerable: !0,
                get: function() {
                    return g.UnknownSignatureError
                }
            });
            var v = r(8123);
            Object.defineProperty(t, "InvalidParenthesisError", {
                enumerable: !0,
                get: function() {
                    return v.InvalidParenthesisError
                }
            });
            var E = r(20158);
            Object.defineProperty(t, "CircularReferenceError", {
                enumerable: !0,
                get: function() {
                    return E.CircularReferenceError
                }
            })
        },
        78927: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.narrow = void 0, t.narrow = function(e) {
                return e
            }
        },
        49582: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.isTupleRegex = t.integerRegex = t.bytesRegex = t.execTyped = void 0, t.execTyped = function(e, t) {
                let r = e.exec(t);
                return r ? .groups
            }, t.bytesRegex = /^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/, t.integerRegex = /^u?int(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/, t.isTupleRegex = /^\(.+?\).*?$/
        },
        36140: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.version = void 0, t.version = "0.9.8"
        },
        9783: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.parseAccount = void 0, t.parseAccount = function(e) {
                return "string" == typeof e ? {
                    address: e,
                    type: "json-rpc"
                } : e
            }
        },
        97397: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.publicKeyToAddress = void 0;
            let n = r(46972),
                i = r(34650);
            t.publicKeyToAddress = function(e) {
                let t = (0, i.keccak256)(`0x${e.substring(4)}`).substring(26);
                return (0, n.checksumAddress)(`0x${t}`)
            }
        },
        64164: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getEnsAddress = void 0;
            let n = r(23757),
                i = r(7889),
                o = r(61895),
                a = r(54971),
                s = r(50775),
                c = r(32054),
                u = r(65079),
                l = r(86373),
                d = r(83013),
                f = r(76103),
                p = r(94508);
            async function getEnsAddress(e, {
                blockNumber: t,
                blockTag: r,
                coinType: y,
                name: g,
                universalResolverAddress: v
            }) {
                let E = v;
                if (!E) {
                    if (!e.chain) throw Error("client chain not configured. universalResolverAddress is required.");
                    E = (0, a.getChainContractAddress)({
                        blockNumber: t,
                        chain: e.chain,
                        contract: "ensUniversalResolver"
                    })
                }
                try {
                    let a = (0, o.encodeFunctionData)({
                            abi: n.addressResolverAbi,
                            functionName: "addr",
                            ...null != y ? {
                                args: [(0, l.namehash)(g), BigInt(y)]
                            } : {
                                args: [(0, l.namehash)(g)]
                            }
                        }),
                        u = await (0, f.getAction)(e, p.readContract, "readContract")({
                            address: E,
                            abi: n.universalResolverResolveAbi,
                            functionName: "resolve",
                            args: [(0, c.toHex)((0, d.packetToBytes)(g)), a],
                            blockNumber: t,
                            blockTag: r
                        });
                    if ("0x" === u[0]) return null;
                    let v = (0, i.decodeFunctionResult)({
                        abi: n.addressResolverAbi,
                        args: null != y ? [(0, l.namehash)(g), BigInt(y)] : void 0,
                        functionName: "addr",
                        data: u[0]
                    });
                    if ("0x" === v || "0x00" === (0, s.trim)(v)) return null;
                    return v
                } catch (e) {
                    if ((0, u.isNullUniversalResolverError)(e, "resolve")) return null;
                    throw e
                }
            }
            t.getEnsAddress = getEnsAddress
        },
        97150: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getEnsAvatar = void 0;
            let n = r(87662),
                i = r(76103),
                o = r(50285);
            async function getEnsAvatar(e, {
                blockNumber: t,
                blockTag: r,
                gatewayUrls: a,
                name: s,
                universalResolverAddress: c
            }) {
                let u = await (0, i.getAction)(e, o.getEnsText, "getEnsText")({
                    blockNumber: t,
                    blockTag: r,
                    key: "avatar",
                    name: s,
                    universalResolverAddress: c
                });
                if (!u) return null;
                try {
                    return await (0, n.parseAvatarRecord)(e, {
                        record: u,
                        gatewayUrls: a
                    })
                } catch {
                    return null
                }
            }
            t.getEnsAvatar = getEnsAvatar
        },
        39941: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getEnsName = void 0;
            let n = r(23757),
                i = r(54971),
                o = r(32054),
                a = r(65079),
                s = r(83013),
                c = r(76103),
                u = r(94508);
            async function getEnsName(e, {
                address: t,
                blockNumber: r,
                blockTag: l,
                universalResolverAddress: d
            }) {
                let f = d;
                if (!f) {
                    if (!e.chain) throw Error("client chain not configured. universalResolverAddress is required.");
                    f = (0, i.getChainContractAddress)({
                        blockNumber: r,
                        chain: e.chain,
                        contract: "ensUniversalResolver"
                    })
                }
                let p = `${t.toLowerCase().substring(2)}.addr.reverse`;
                try {
                    let t = await (0, c.getAction)(e, u.readContract, "readContract")({
                        address: f,
                        abi: n.universalResolverReverseAbi,
                        functionName: "reverse",
                        args: [(0, o.toHex)((0, s.packetToBytes)(p))],
                        blockNumber: r,
                        blockTag: l
                    });
                    return t[0]
                } catch (e) {
                    if ((0, a.isNullUniversalResolverError)(e, "reverse")) return null;
                    throw e
                }
            }
            t.getEnsName = getEnsName
        },
        64086: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getEnsResolver = void 0;
            let n = r(54971),
                i = r(32054),
                o = r(83013),
                a = r(76103),
                s = r(94508);
            async function getEnsResolver(e, {
                blockNumber: t,
                blockTag: r,
                name: c,
                universalResolverAddress: u
            }) {
                let l = u;
                if (!l) {
                    if (!e.chain) throw Error("client chain not configured. universalResolverAddress is required.");
                    l = (0, n.getChainContractAddress)({
                        blockNumber: t,
                        chain: e.chain,
                        contract: "ensUniversalResolver"
                    })
                }
                let [d] = await (0, a.getAction)(e, s.readContract, "readContract")({
                    address: l,
                    abi: [{
                        inputs: [{
                            type: "bytes"
                        }],
                        name: "findResolver",
                        outputs: [{
                            type: "address"
                        }, {
                            type: "bytes32"
                        }],
                        stateMutability: "view",
                        type: "function"
                    }],
                    functionName: "findResolver",
                    args: [(0, i.toHex)((0, o.packetToBytes)(c))],
                    blockNumber: t,
                    blockTag: r
                });
                return d
            }
            t.getEnsResolver = getEnsResolver
        },
        50285: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getEnsText = void 0;
            let n = r(23757),
                i = r(7889),
                o = r(61895),
                a = r(54971),
                s = r(32054),
                c = r(65079),
                u = r(86373),
                l = r(83013),
                d = r(76103),
                f = r(94508);
            async function getEnsText(e, {
                blockNumber: t,
                blockTag: r,
                name: p,
                key: y,
                universalResolverAddress: g
            }) {
                let v = g;
                if (!v) {
                    if (!e.chain) throw Error("client chain not configured. universalResolverAddress is required.");
                    v = (0, a.getChainContractAddress)({
                        blockNumber: t,
                        chain: e.chain,
                        contract: "ensUniversalResolver"
                    })
                }
                try {
                    let a = await (0, d.getAction)(e, f.readContract, "readContract")({
                        address: v,
                        abi: n.universalResolverResolveAbi,
                        functionName: "resolve",
                        args: [(0, s.toHex)((0, l.packetToBytes)(p)), (0, o.encodeFunctionData)({
                            abi: n.textResolverAbi,
                            functionName: "text",
                            args: [(0, u.namehash)(p), y]
                        })],
                        blockNumber: t,
                        blockTag: r
                    });
                    if ("0x" === a[0]) return null;
                    let c = (0, i.decodeFunctionResult)({
                        abi: n.textResolverAbi,
                        functionName: "text",
                        data: a[0]
                    });
                    return "" === c ? null : c
                } catch (e) {
                    if ((0, c.isNullUniversalResolverError)(e, "resolve")) return null;
                    throw e
                }
            }
            t.getEnsText = getEnsText
        },
        59331: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getEventParameters = t.getFunctionParameters = t.getContract = void 0;
            let n = r(76103),
                i = r(60335),
                o = r(20670),
                a = r(32535),
                s = r(94508),
                c = r(80120),
                u = r(97356),
                l = r(97545);

            function getFunctionParameters(e) {
                let t = e.length && Array.isArray(e[0]),
                    r = t ? e[0] : [],
                    n = (t ? e[1] : e[0]) ? ? {};
                return {
                    args: r,
                    options: n
                }
            }

            function getEventParameters(e, t) {
                let r = !1;
                Array.isArray(e[0]) ? r = !0 : 1 === e.length ? r = t.inputs.some(e => e.indexed) : 2 === e.length && (r = !0);
                let n = r ? e[0] : void 0,
                    i = (r ? e[1] : e[0]) ? ? {};
                return {
                    args: n,
                    options: i
                }
            }
            t.getContract = function({
                abi: e,
                address: t,
                publicClient: r,
                walletClient: d
            }) {
                let f = null != r,
                    p = null != d,
                    y = {},
                    g = !1,
                    v = !1,
                    E = !1;
                for (let t of e)
                    if ("function" === t.type ? "view" === t.stateMutability || "pure" === t.stateMutability ? g = !0 : v = !0 : "event" === t.type && (E = !0), g && v && E) break;
                return f && (g && (y.read = new Proxy({}, {
                    get: (i, o) => (...i) => {
                        let {
                            args: a,
                            options: c
                        } = getFunctionParameters(i);
                        return (0, n.getAction)(r, s.readContract, "readContract")({
                            abi: e,
                            address: t,
                            functionName: o,
                            args: a,
                            ...c
                        })
                    }
                })), v && (y.simulate = new Proxy({}, {
                    get: (i, o) => (...i) => {
                        let {
                            args: a,
                            options: s
                        } = getFunctionParameters(i);
                        return (0, n.getAction)(r, c.simulateContract, "simulateContract")({
                            abi: e,
                            address: t,
                            functionName: o,
                            args: a,
                            ...s
                        })
                    }
                })), E && (y.createEventFilter = new Proxy({}, {
                    get: (o, a) => (...o) => {
                        let s = e.find(e => "event" === e.type && e.name === a),
                            {
                                args: c,
                                options: u
                            } = getEventParameters(o, s);
                        return (0, n.getAction)(r, i.createContractEventFilter, "createContractEventFilter")({
                            abi: e,
                            address: t,
                            eventName: a,
                            args: c,
                            ...u
                        })
                    }
                }), y.getEvents = new Proxy({}, {
                    get: (i, o) => (...i) => {
                        let s = e.find(e => "event" === e.type && e.name === o),
                            {
                                args: c,
                                options: u
                            } = getEventParameters(i, s);
                        return (0, n.getAction)(r, a.getContractEvents, "getContractEvents")({
                            abi: e,
                            address: t,
                            eventName: o,
                            args: c,
                            ...u
                        })
                    }
                }), y.watchEvent = new Proxy({}, {
                    get: (i, o) => (...i) => {
                        let a = e.find(e => "event" === e.type && e.name === o),
                            {
                                args: s,
                                options: c
                            } = getEventParameters(i, a);
                        return (0, n.getAction)(r, u.watchContractEvent, "watchContractEvent")({
                            abi: e,
                            address: t,
                            eventName: o,
                            args: s,
                            ...c
                        })
                    }
                }))), p && v && (y.write = new Proxy({}, {
                    get: (r, i) => (...r) => {
                        let {
                            args: o,
                            options: a
                        } = getFunctionParameters(r);
                        return (0, n.getAction)(d, l.writeContract, "writeContract")({
                            abi: e,
                            address: t,
                            functionName: i,
                            args: o,
                            ...a
                        })
                    }
                })), (f || p) && v && (y.estimateGas = new Proxy({}, {
                    get: (i, a) => (...i) => {
                        let {
                            args: s,
                            options: c
                        } = getFunctionParameters(i), u = r ? ? d;
                        return (0, n.getAction)(u, o.estimateContractGas, "estimateContractGas")({
                            abi: e,
                            address: t,
                            functionName: a,
                            args: s,
                            ...c,
                            account: c.account ? ? d.account
                        })
                    }
                })), y.address = t, y.abi = e, y
            }, t.getFunctionParameters = getFunctionParameters, t.getEventParameters = getEventParameters
        },
        64057: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getRevertErrorData = t.call = void 0;
            let n = r(9783),
                i = r(23757),
                o = r(24018),
                a = r(9537),
                s = r(95047),
                c = r(32405),
                u = r(7889),
                l = r(61895),
                d = r(54971),
                f = r(32054),
                p = r(75620),
                y = r(25798),
                g = r(63465),
                v = r(1678),
                E = r(89399);
            async function call(e, t) {
                let {
                    account: i = e.account,
                    batch: a = !!e.batch ? .multicall,
                    blockNumber: c,
                    blockTag: u = "latest",
                    accessList: l,
                    data: d,
                    gas: v,
                    gasPrice: _,
                    maxFeePerGas: P,
                    maxPriorityFeePerGas: T,
                    nonce: x,
                    to: A,
                    value: M,
                    ...B
                } = t, F = i ? (0, n.parseAccount)(i) : void 0;
                try {
                    (0, E.assertRequest)(t);
                    let r = c ? (0, f.numberToHex)(c) : void 0,
                        n = r || u,
                        i = e.chain ? .formatters ? .transactionRequest ? .format,
                        p = i || g.formatTransactionRequest,
                        N = p({ ...(0, y.extract)(B, {
                                format: i
                            }),
                            from: F ? .address,
                            accessList: l,
                            data: d,
                            gas: v,
                            gasPrice: _,
                            maxFeePerGas: P,
                            maxPriorityFeePerGas: T,
                            nonce: x,
                            to: A,
                            value: M
                        });
                    if (a && function({
                            request: e
                        }) {
                            let {
                                data: t,
                                to: r,
                                ...n
                            } = e;
                            return !(!t || t.startsWith(o.aggregate3Signature)) && !!r && !(Object.values(n).filter(e => void 0 !== e).length > 0)
                        }({
                            request: N
                        })) try {
                        return await scheduleMulticall(e, { ...N,
                            blockNumber: c,
                            blockTag: u
                        })
                    } catch (e) {
                        if (!(e instanceof s.ClientChainNotConfiguredError) && !(e instanceof s.ChainDoesNotSupportContract)) throw e
                    }
                    let L = await e.request({
                        method: "eth_call",
                        params: n ? [N, n] : [N]
                    });
                    if ("0x" === L) return {
                        data: void 0
                    };
                    return {
                        data: L
                    }
                } catch (a) {
                    let n = getRevertErrorData(a),
                        {
                            offchainLookup: i,
                            offchainLookupSignature: o
                        } = await Promise.resolve().then(() => r(92519));
                    if (n ? .slice(0, 10) === o && A) return {
                        data: await i(e, {
                            data: n,
                            to: A
                        })
                    };
                    throw (0, p.getCallError)(a, { ...t,
                        account: F,
                        chain: e.chain
                    })
                }
            }
            async function scheduleMulticall(e, t) {
                let {
                    batchSize: r = 1024,
                    wait: n = 0
                } = "object" == typeof e.batch ? .multicall ? e.batch.multicall : {}, {
                    blockNumber: o,
                    blockTag: a = "latest",
                    data: p,
                    multicallAddress: y,
                    to: g
                } = t, E = y;
                if (!E) {
                    if (!e.chain) throw new s.ClientChainNotConfiguredError;
                    E = (0, d.getChainContractAddress)({
                        blockNumber: o,
                        chain: e.chain,
                        contract: "multicall3"
                    })
                }
                let _ = o ? (0, f.numberToHex)(o) : void 0,
                    P = _ || a,
                    {
                        schedule: T
                    } = (0, v.createBatchScheduler)({
                        id: `${e.uid}.${P}`,
                        wait: n,
                        shouldSplitBatch(e) {
                            let t = e.reduce((e, {
                                data: t
                            }) => e + (t.length - 2), 0);
                            return t > 2 * r
                        },
                        fn: async t => {
                            let r = t.map(e => ({
                                    allowFailure: !0,
                                    callData: e.data,
                                    target: e.to
                                })),
                                n = (0, l.encodeFunctionData)({
                                    abi: i.multicall3Abi,
                                    args: [r],
                                    functionName: "aggregate3"
                                }),
                                o = await e.request({
                                    method: "eth_call",
                                    params: [{
                                        data: n,
                                        to: E
                                    }, P]
                                });
                            return (0, u.decodeFunctionResult)({
                                abi: i.multicall3Abi,
                                args: [r],
                                functionName: "aggregate3",
                                data: o || "0x"
                            })
                        }
                    }),
                    [{
                        returnData: x,
                        success: A
                    }] = await T({
                        data: p,
                        to: g
                    });
                if (!A) throw new c.RawContractError({
                    data: x
                });
                return "0x" === x ? {
                    data: void 0
                } : {
                    data: x
                }
            }

            function getRevertErrorData(e) {
                if (!(e instanceof a.BaseError)) return;
                let t = e.walk();
                return "object" == typeof t.data ? t.data.data : t.data
            }
            t.call = call, t.getRevertErrorData = getRevertErrorData
        },
        79484: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.createBlockFilter = void 0;
            let n = r(93325);
            async function createBlockFilter(e) {
                let t = (0, n.createFilterRequestScope)(e, {
                        method: "eth_newBlockFilter"
                    }),
                    r = await e.request({
                        method: "eth_newBlockFilter"
                    });
                return {
                    id: r,
                    request: t(r),
                    type: "block"
                }
            }
            t.createBlockFilter = createBlockFilter
        },
        60335: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.createContractEventFilter = void 0;
            let n = r(35840),
                i = r(32054),
                o = r(93325);
            async function createContractEventFilter(e, {
                address: t,
                abi: r,
                args: a,
                eventName: s,
                fromBlock: c,
                strict: u,
                toBlock: l
            }) {
                let d = (0, o.createFilterRequestScope)(e, {
                        method: "eth_newFilter"
                    }),
                    f = s ? (0, n.encodeEventTopics)({
                        abi: r,
                        args: a,
                        eventName: s
                    }) : void 0,
                    p = await e.request({
                        method: "eth_newFilter",
                        params: [{
                            address: t,
                            fromBlock: "bigint" == typeof c ? (0, i.numberToHex)(c) : c,
                            toBlock: "bigint" == typeof l ? (0, i.numberToHex)(l) : l,
                            topics: f
                        }]
                    });
                return {
                    abi: r,
                    args: a,
                    eventName: s,
                    id: p,
                    request: d(p),
                    strict: u,
                    type: "event"
                }
            }
            t.createContractEventFilter = createContractEventFilter
        },
        3083: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.createEventFilter = void 0;
            let n = r(35840),
                i = r(32054),
                o = r(93325);
            async function createEventFilter(e, {
                address: t,
                args: r,
                event: a,
                events: s,
                fromBlock: c,
                strict: u,
                toBlock: l
            } = {}) {
                let d = s ? ? (a ? [a] : void 0),
                    f = (0, o.createFilterRequestScope)(e, {
                        method: "eth_newFilter"
                    }),
                    p = [];
                d && (p = [d.flatMap(e => (0, n.encodeEventTopics)({
                    abi: [e],
                    eventName: e.name,
                    args: r
                }))], a && (p = p[0]));
                let y = await e.request({
                    method: "eth_newFilter",
                    params: [{
                        address: t,
                        fromBlock: "bigint" == typeof c ? (0, i.numberToHex)(c) : c,
                        toBlock: "bigint" == typeof l ? (0, i.numberToHex)(l) : l,
                        ...p.length ? {
                            topics: p
                        } : {}
                    }]
                });
                return {
                    abi: d,
                    args: r,
                    eventName: a ? a.name : void 0,
                    fromBlock: c,
                    id: y,
                    request: f(y),
                    strict: u,
                    toBlock: l,
                    type: "event"
                }
            }
            t.createEventFilter = createEventFilter
        },
        12604: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.createPendingTransactionFilter = void 0;
            let n = r(93325);
            async function createPendingTransactionFilter(e) {
                let t = (0, n.createFilterRequestScope)(e, {
                        method: "eth_newPendingTransactionFilter"
                    }),
                    r = await e.request({
                        method: "eth_newPendingTransactionFilter"
                    });
                return {
                    id: r,
                    request: t(r),
                    type: "transaction"
                }
            }
            t.createPendingTransactionFilter = createPendingTransactionFilter
        },
        20670: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.estimateContractGas = void 0;
            let n = r(9783),
                i = r(61895),
                o = r(25229),
                a = r(76103),
                s = r(85296);
            async function estimateContractGas(e, {
                abi: t,
                address: r,
                args: c,
                functionName: u,
                ...l
            }) {
                let d = (0, i.encodeFunctionData)({
                    abi: t,
                    args: c,
                    functionName: u
                });
                try {
                    let t = await (0, a.getAction)(e, s.estimateGas, "estimateGas")({
                        data: d,
                        to: r,
                        ...l
                    });
                    return t
                } catch (i) {
                    let e = l.account ? (0, n.parseAccount)(l.account) : void 0;
                    throw (0, o.getContractError)(i, {
                        abi: t,
                        address: r,
                        args: c,
                        docsPath: "/docs/contract/estimateContractGas",
                        functionName: u,
                        sender: e ? .address
                    })
                }
            }
            t.estimateContractGas = estimateContractGas
        },
        93204: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.internal_estimateFeesPerGas = t.estimateFeesPerGas = void 0;
            let n = r(80892),
                i = r(76103),
                o = r(14274),
                a = r(54467),
                s = r(36950);
            async function estimateFeesPerGas(e, t) {
                return internal_estimateFeesPerGas(e, t)
            }
            async function internal_estimateFeesPerGas(e, t) {
                let {
                    block: r,
                    chain: c = e.chain,
                    request: u,
                    type: l = "eip1559"
                } = t || {}, d = await (async () => "function" == typeof c ? .fees ? .baseFeeMultiplier ? c.fees.baseFeeMultiplier({
                    block: r,
                    client: e,
                    request: u
                }) : c ? .fees ? .baseFeeMultiplier ? ? 1.2)();
                if (d < 1) throw new n.BaseFeeScalarError;
                let f = d.toString().split(".")[1] ? .length ? ? 0,
                    p = 10 ** f,
                    multiply = e => e * BigInt(Math.ceil(d * p)) / BigInt(p),
                    y = r || await (0, i.getAction)(e, a.getBlock, "getBlock")({});
                if ("function" == typeof c ? .fees ? .estimateFeesPerGas) return c.fees.estimateFeesPerGas({
                    block: r,
                    client: e,
                    multiply,
                    request: u,
                    type: l
                });
                if ("eip1559" === l) {
                    if ("bigint" != typeof y.baseFeePerGas) throw new n.Eip1559FeesNotSupportedError;
                    let t = u ? .maxPriorityFeePerGas ? u.maxPriorityFeePerGas : await (0, o.internal_estimateMaxPriorityFeePerGas)(e, {
                            block: y,
                            chain: c,
                            request: u
                        }),
                        r = multiply(y.baseFeePerGas),
                        i = u ? .maxFeePerGas ? ? r + t;
                    return {
                        maxFeePerGas: i,
                        maxPriorityFeePerGas: t
                    }
                }
                let g = u ? .gasPrice ? ? multiply(await (0, i.getAction)(e, s.getGasPrice, "getGasPrice")({}));
                return {
                    gasPrice: g
                }
            }
            t.estimateFeesPerGas = estimateFeesPerGas, t.internal_estimateFeesPerGas = internal_estimateFeesPerGas
        },
        85296: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.estimateGas = void 0;
            let n = r(9783),
                i = r(53093),
                o = r(32054),
                a = r(12364),
                s = r(25798),
                c = r(63465),
                u = r(89399),
                l = r(48945);
            async function estimateGas(e, t) {
                let r = t.account ? ? e.account;
                if (!r) throw new i.AccountNotFoundError({
                    docsPath: "/docs/actions/public/estimateGas"
                });
                let d = (0, n.parseAccount)(r);
                try {
                    let {
                        accessList: r,
                        blockNumber: n,
                        blockTag: i,
                        data: a,
                        gas: f,
                        gasPrice: p,
                        maxFeePerGas: y,
                        maxPriorityFeePerGas: g,
                        nonce: v,
                        to: E,
                        value: _,
                        ...P
                    } = "local" === d.type ? await (0, l.prepareTransactionRequest)(e, t) : t, T = n ? (0, o.numberToHex)(n) : void 0, x = T || i;
                    (0, u.assertRequest)(t);
                    let A = e.chain ? .formatters ? .transactionRequest ? .format,
                        M = A || c.formatTransactionRequest,
                        B = M({ ...(0, s.extract)(P, {
                                format: A
                            }),
                            from: d.address,
                            accessList: r,
                            data: a,
                            gas: f,
                            gasPrice: p,
                            maxFeePerGas: y,
                            maxPriorityFeePerGas: g,
                            nonce: v,
                            to: E,
                            value: _
                        }),
                        F = await e.request({
                            method: "eth_estimateGas",
                            params: x ? [B, x] : [B]
                        });
                    return BigInt(F)
                } catch (r) {
                    throw (0, a.getEstimateGasError)(r, { ...t,
                        account: d,
                        chain: e.chain
                    })
                }
            }
            t.estimateGas = estimateGas
        },
        14274: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.internal_estimateMaxPriorityFeePerGas = t.estimateMaxPriorityFeePerGas = void 0;
            let n = r(80892),
                i = r(4744),
                o = r(76103),
                a = r(54467),
                s = r(36950);
            async function estimateMaxPriorityFeePerGas(e, t) {
                return internal_estimateMaxPriorityFeePerGas(e, t)
            }
            async function internal_estimateMaxPriorityFeePerGas(e, t) {
                let {
                    block: r,
                    chain: c = e.chain,
                    request: u
                } = t || {};
                if ("function" == typeof c ? .fees ? .defaultPriorityFee) {
                    let t = r || await (0, o.getAction)(e, a.getBlock, "getBlock")({});
                    return c.fees.defaultPriorityFee({
                        block: t,
                        client: e,
                        request: u
                    })
                }
                if (void 0 !== c ? .fees ? .defaultPriorityFee) return c ? .fees ? .defaultPriorityFee;
                try {
                    let t = await e.request({
                        method: "eth_maxPriorityFeePerGas"
                    });
                    return (0, i.hexToBigInt)(t)
                } catch {
                    let [t, i] = await Promise.all([r ? Promise.resolve(r) : (0, o.getAction)(e, a.getBlock, "getBlock")({}), (0, o.getAction)(e, s.getGasPrice, "getGasPrice")({})]);
                    if ("bigint" != typeof t.baseFeePerGas) throw new n.Eip1559FeesNotSupportedError;
                    let c = i - t.baseFeePerGas;
                    if (c < 0 n) return 0 n;
                    return c
                }
            }
            t.estimateMaxPriorityFeePerGas = estimateMaxPriorityFeePerGas, t.internal_estimateMaxPriorityFeePerGas = internal_estimateMaxPriorityFeePerGas
        },
        41656: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getBalance = void 0;
            let n = r(32054);
            async function getBalance(e, {
                address: t,
                blockNumber: r,
                blockTag: i = "latest"
            }) {
                let o = r ? (0, n.numberToHex)(r) : void 0,
                    a = await e.request({
                        method: "eth_getBalance",
                        params: [t, o || i]
                    });
                return BigInt(a)
            }
            t.getBalance = getBalance
        },
        54467: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getBlock = void 0;
            let n = r(28396),
                i = r(32054),
                o = r(94160);
            async function getBlock(e, {
                blockHash: t,
                blockNumber: r,
                blockTag: a,
                includeTransactions: s
            } = {}) {
                let c = s ? ? !1,
                    u = void 0 !== r ? (0, i.numberToHex)(r) : void 0,
                    l = null;
                if (!(l = t ? await e.request({
                        method: "eth_getBlockByHash",
                        params: [t, c]
                    }) : await e.request({
                        method: "eth_getBlockByNumber",
                        params: [u || (a ? ? "latest"), c]
                    }))) throw new n.BlockNotFoundError({
                    blockHash: t,
                    blockNumber: r
                });
                let d = e.chain ? .formatters ? .block ? .format || o.formatBlock;
                return d(l)
            }
            t.getBlock = getBlock
        },
        30649: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getBlockNumber = t.getBlockNumberCache = void 0;
            let n = r(88445),
                cacheKey = e => `blockNumber.${e}`;
            async function getBlockNumber(e, {
                cacheTime: t = e.cacheTime,
                maxAge: r
            } = {}) {
                let i = await (0, n.withCache)(() => e.request({
                    method: "eth_blockNumber"
                }), {
                    cacheKey: cacheKey(e.uid),
                    cacheTime: r ? ? t
                });
                return BigInt(i)
            }
            t.getBlockNumberCache = function(e) {
                return (0, n.getCache)(cacheKey(e))
            }, t.getBlockNumber = getBlockNumber
        },
        59846: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getBlockTransactionCount = void 0;
            let n = r(4744),
                i = r(32054);
            async function getBlockTransactionCount(e, {
                blockHash: t,
                blockNumber: r,
                blockTag: o = "latest"
            } = {}) {
                let a;
                let s = void 0 !== r ? (0, i.numberToHex)(r) : void 0;
                return a = t ? await e.request({
                    method: "eth_getBlockTransactionCountByHash",
                    params: [t]
                }) : await e.request({
                    method: "eth_getBlockTransactionCountByNumber",
                    params: [s || o]
                }), (0, n.hexToNumber)(a)
            }
            t.getBlockTransactionCount = getBlockTransactionCount
        },
        53006: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getBytecode = void 0;
            let n = r(32054);
            async function getBytecode(e, {
                address: t,
                blockNumber: r,
                blockTag: i = "latest"
            }) {
                let o = void 0 !== r ? (0, n.numberToHex)(r) : void 0,
                    a = await e.request({
                        method: "eth_getCode",
                        params: [t, o || i]
                    });
                if ("0x" !== a) return a
            }
            t.getBytecode = getBytecode
        },
        38816: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getChainId = void 0;
            let n = r(4744);
            async function getChainId(e) {
                let t = await e.request({
                    method: "eth_chainId"
                });
                return (0, n.hexToNumber)(t)
            }
            t.getChainId = getChainId
        },
        32535: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getContractEvents = void 0;
            let n = r(33493),
                i = r(76103),
                o = r(61865);
            async function getContractEvents(e, {
                abi: t,
                address: r,
                args: a,
                blockHash: s,
                eventName: c,
                fromBlock: u,
                toBlock: l,
                strict: d
            }) {
                let f = c ? (0, n.getAbiItem)({
                        abi: t,
                        name: c
                    }) : void 0,
                    p = f ? void 0 : t.filter(e => "event" === e.type);
                return (0, i.getAction)(e, o.getLogs, "getLogs")({
                    address: r,
                    args: a,
                    blockHash: s,
                    event: f,
                    events: p,
                    fromBlock: u,
                    toBlock: l,
                    strict: d
                })
            }
            t.getContractEvents = getContractEvents
        },
        92735: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getFeeHistory = void 0;
            let n = r(32054),
                i = r(34329);
            async function getFeeHistory(e, {
                blockCount: t,
                blockNumber: r,
                blockTag: o = "latest",
                rewardPercentiles: a
            }) {
                let s = r ? (0, n.numberToHex)(r) : void 0,
                    c = await e.request({
                        method: "eth_feeHistory",
                        params: [(0, n.numberToHex)(t), s || o, a]
                    });
                return (0, i.formatFeeHistory)(c)
            }
            t.getFeeHistory = getFeeHistory
        },
        41327: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getFilterChanges = void 0;
            let n = r(31480),
                i = r(8334),
                o = r(75765);
            async function getFilterChanges(e, {
                filter: t
            }) {
                let r = "strict" in t && t.strict,
                    a = await t.request({
                        method: "eth_getFilterChanges",
                        params: [t.id]
                    });
                return a.map(e => {
                    if ("string" == typeof e) return e;
                    try {
                        let {
                            eventName: n,
                            args: a
                        } = "abi" in t && t.abi ? (0, i.decodeEventLog)({
                            abi: t.abi,
                            data: e.data,
                            topics: e.topics,
                            strict: r
                        }) : {
                            eventName: void 0,
                            args: void 0
                        };
                        return (0, o.formatLog)(e, {
                            args: a,
                            eventName: n
                        })
                    } catch (a) {
                        let r, i;
                        if (a instanceof n.DecodeLogDataMismatch || a instanceof n.DecodeLogTopicsMismatch) {
                            if ("strict" in t && t.strict) return;
                            r = a.abiItem.name, i = a.abiItem.inputs ? .some(e => !("name" in e && e.name))
                        }
                        return (0, o.formatLog)(e, {
                            args: i ? [] : {},
                            eventName: r
                        })
                    }
                }).filter(Boolean)
            }
            t.getFilterChanges = getFilterChanges
        },
        70574: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getFilterLogs = void 0;
            let n = r(31480),
                i = r(8334),
                o = r(75765);
            async function getFilterLogs(e, {
                filter: t
            }) {
                let r = t.strict ? ? !1,
                    a = await t.request({
                        method: "eth_getFilterLogs",
                        params: [t.id]
                    });
                return a.map(e => {
                    try {
                        let {
                            eventName: n,
                            args: a
                        } = "abi" in t && t.abi ? (0, i.decodeEventLog)({
                            abi: t.abi,
                            data: e.data,
                            topics: e.topics,
                            strict: r
                        }) : {
                            eventName: void 0,
                            args: void 0
                        };
                        return (0, o.formatLog)(e, {
                            args: a,
                            eventName: n
                        })
                    } catch (a) {
                        let r, i;
                        if (a instanceof n.DecodeLogDataMismatch || a instanceof n.DecodeLogTopicsMismatch) {
                            if ("strict" in t && t.strict) return;
                            r = a.abiItem.name, i = a.abiItem.inputs ? .some(e => !("name" in e && e.name))
                        }
                        return (0, o.formatLog)(e, {
                            args: i ? [] : {},
                            eventName: r
                        })
                    }
                }).filter(Boolean)
            }
            t.getFilterLogs = getFilterLogs
        },
        36950: function(e, t) {
            "use strict";
            async function getGasPrice(e) {
                let t = await e.request({
                    method: "eth_gasPrice"
                });
                return BigInt(t)
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getGasPrice = void 0, t.getGasPrice = getGasPrice
        },
        61865: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getLogs = void 0;
            let n = r(31480),
                i = r(8334),
                o = r(35840),
                a = r(32054),
                s = r(75765);
            async function getLogs(e, {
                address: t,
                blockHash: r,
                fromBlock: c,
                toBlock: u,
                event: l,
                events: d,
                args: f,
                strict: p
            } = {}) {
                let y = p ? ? !1,
                    g = d ? ? (l ? [l] : void 0),
                    v = [];
                return g && (v = [g.flatMap(e => (0, o.encodeEventTopics)({
                    abi: [e],
                    eventName: e.name,
                    args: f
                }))], l && (v = v[0])), (r ? await e.request({
                    method: "eth_getLogs",
                    params: [{
                        address: t,
                        topics: v,
                        blockHash: r
                    }]
                }) : await e.request({
                    method: "eth_getLogs",
                    params: [{
                        address: t,
                        topics: v,
                        fromBlock: "bigint" == typeof c ? (0, a.numberToHex)(c) : c,
                        toBlock: "bigint" == typeof u ? (0, a.numberToHex)(u) : u
                    }]
                })).map(e => {
                    try {
                        let {
                            eventName: t,
                            args: r
                        } = g ? (0, i.decodeEventLog)({
                            abi: g,
                            data: e.data,
                            topics: e.topics,
                            strict: y
                        }) : {
                            eventName: void 0,
                            args: void 0
                        };
                        return (0, s.formatLog)(e, {
                            args: r,
                            eventName: t
                        })
                    } catch (i) {
                        let t, r;
                        if (i instanceof n.DecodeLogDataMismatch || i instanceof n.DecodeLogTopicsMismatch) {
                            if (y) return;
                            t = i.abiItem.name, r = i.abiItem.inputs ? .some(e => !("name" in e && e.name))
                        }
                        return (0, s.formatLog)(e, {
                            args: r ? [] : {},
                            eventName: t
                        })
                    }
                }).filter(Boolean)
            }
            t.getLogs = getLogs
        },
        41837: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getProof = void 0;
            let n = r(32054),
                i = r(77077);
            async function getProof(e, {
                address: t,
                blockNumber: r,
                blockTag: o,
                storageKeys: a
            }) {
                let s = void 0 !== r ? (0, n.numberToHex)(r) : void 0,
                    c = await e.request({
                        method: "eth_getProof",
                        params: [t, a, s || (o ? ? "latest")]
                    });
                return (0, i.formatProof)(c)
            }
            t.getProof = getProof
        },
        52177: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getStorageAt = void 0;
            let n = r(32054);
            async function getStorageAt(e, {
                address: t,
                blockNumber: r,
                blockTag: i = "latest",
                slot: o
            }) {
                let a = void 0 !== r ? (0, n.numberToHex)(r) : void 0,
                    s = await e.request({
                        method: "eth_getStorageAt",
                        params: [t, o, a || i]
                    });
                return s
            }
            t.getStorageAt = getStorageAt
        },
        79633: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getTransaction = void 0;
            let n = r(65750),
                i = r(32054),
                o = r(1603);
            async function getTransaction(e, {
                blockHash: t,
                blockNumber: r,
                blockTag: a,
                hash: s,
                index: c
            }) {
                let u = a || "latest",
                    l = void 0 !== r ? (0, i.numberToHex)(r) : void 0,
                    d = null;
                if (s ? d = await e.request({
                        method: "eth_getTransactionByHash",
                        params: [s]
                    }) : t ? d = await e.request({
                        method: "eth_getTransactionByBlockHashAndIndex",
                        params: [t, (0, i.numberToHex)(c)]
                    }) : (l || u) && (d = await e.request({
                        method: "eth_getTransactionByBlockNumberAndIndex",
                        params: [l || u, (0, i.numberToHex)(c)]
                    })), !d) throw new n.TransactionNotFoundError({
                    blockHash: t,
                    blockNumber: r,
                    blockTag: u,
                    hash: s,
                    index: c
                });
                let f = e.chain ? .formatters ? .transaction ? .format || o.formatTransaction;
                return f(d)
            }
            t.getTransaction = getTransaction
        },
        9332: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getTransactionConfirmations = void 0;
            let n = r(76103),
                i = r(30649),
                o = r(79633);
            async function getTransactionConfirmations(e, {
                hash: t,
                transactionReceipt: r
            }) {
                let [a, s] = await Promise.all([(0, n.getAction)(e, i.getBlockNumber, "getBlockNumber")({}), t ? (0, n.getAction)(e, o.getTransaction, "getBlockNumber")({
                    hash: t
                }) : void 0]), c = r ? .blockNumber || s ? .blockNumber;
                return c ? a - c + 1 n : 0 n
            }
            t.getTransactionConfirmations = getTransactionConfirmations
        },
        32549: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getTransactionCount = void 0;
            let n = r(4744),
                i = r(32054);
            async function getTransactionCount(e, {
                address: t,
                blockTag: r = "latest",
                blockNumber: o
            }) {
                let a = await e.request({
                    method: "eth_getTransactionCount",
                    params: [t, o ? (0, i.numberToHex)(o) : r]
                });
                return (0, n.hexToNumber)(a)
            }
            t.getTransactionCount = getTransactionCount
        },
        5107: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getTransactionReceipt = void 0;
            let n = r(65750),
                i = r(89189);
            async function getTransactionReceipt(e, {
                hash: t
            }) {
                let r = await e.request({
                    method: "eth_getTransactionReceipt",
                    params: [t]
                });
                if (!r) throw new n.TransactionReceiptNotFoundError({
                    hash: t
                });
                let o = e.chain ? .formatters ? .transactionReceipt ? .format || i.formatTransactionReceipt;
                return o(r)
            }
            t.getTransactionReceipt = getTransactionReceipt
        },
        49812: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.multicall = void 0;
            let n = r(23757),
                i = r(31480),
                o = r(9537),
                a = r(32405),
                s = r(7889),
                c = r(61895),
                u = r(54971),
                l = r(25229),
                d = r(76103),
                f = r(94508);
            async function multicall(e, t) {
                let {
                    allowFailure: r = !0,
                    batchSize: p,
                    blockNumber: y,
                    blockTag: g,
                    contracts: v,
                    multicallAddress: E
                } = t, _ = p ? ? ("object" == typeof e.batch ? .multicall && e.batch.multicall.batchSize || 1024), P = E;
                if (!P) {
                    if (!e.chain) throw Error("client chain not configured. multicallAddress is required.");
                    P = (0, u.getChainContractAddress)({
                        blockNumber: y,
                        chain: e.chain,
                        contract: "multicall3"
                    })
                }
                let T = [
                        []
                    ],
                    x = 0,
                    A = 0;
                for (let e = 0; e < v.length; e++) {
                    let {
                        abi: t,
                        address: n,
                        args: i,
                        functionName: o
                    } = v[e];
                    try {
                        let e = (0, c.encodeFunctionData)({
                            abi: t,
                            args: i,
                            functionName: o
                        });
                        A += (e.length - 2) / 2, _ > 0 && A > _ && T[x].length > 0 && (x++, A = (e.length - 2) / 2, T[x] = []), T[x] = [...T[x], {
                            allowFailure: !0,
                            callData: e,
                            target: n
                        }]
                    } catch (a) {
                        let e = (0, l.getContractError)(a, {
                            abi: t,
                            address: n,
                            args: i,
                            docsPath: "/docs/contract/multicall",
                            functionName: o
                        });
                        if (!r) throw e;
                        T[x] = [...T[x], {
                            allowFailure: !0,
                            callData: "0x",
                            target: n
                        }]
                    }
                }
                let M = await Promise.allSettled(T.map(t => (0, d.getAction)(e, f.readContract, "readContract")({
                        abi: n.multicall3Abi,
                        address: P,
                        args: [t],
                        blockNumber: y,
                        blockTag: g,
                        functionName: "aggregate3"
                    }))),
                    B = [];
                for (let e = 0; e < M.length; e++) {
                    let t = M[e];
                    if ("rejected" === t.status) {
                        if (!r) throw t.reason;
                        for (let r = 0; r < T[e].length; r++) B.push({
                            status: "failure",
                            error: t.reason,
                            result: void 0
                        });
                        continue
                    }
                    let n = t.value;
                    for (let t = 0; t < n.length; t++) {
                        let {
                            returnData: o,
                            success: c
                        } = n[t], {
                            callData: u
                        } = T[e][t], {
                            abi: d,
                            address: f,
                            functionName: p,
                            args: y
                        } = v[B.length];
                        try {
                            if ("0x" === u) throw new i.AbiDecodingZeroDataError;
                            if (!c) throw new a.RawContractError({
                                data: o
                            });
                            let e = (0, s.decodeFunctionResult)({
                                abi: d,
                                args: y,
                                data: o,
                                functionName: p
                            });
                            B.push(r ? {
                                result: e,
                                status: "success"
                            } : e)
                        } catch (t) {
                            let e = (0, l.getContractError)(t, {
                                abi: d,
                                address: f,
                                args: y,
                                docsPath: "/docs/contract/multicall",
                                functionName: p
                            });
                            if (!r) throw e;
                            B.push({
                                error: e,
                                result: void 0,
                                status: "failure"
                            })
                        }
                    }
                }
                if (B.length !== v.length) throw new o.BaseError("multicall results mismatch");
                return B
            }
            t.multicall = multicall
        },
        94508: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.readContract = void 0;
            let n = r(7889),
                i = r(61895),
                o = r(25229),
                a = r(76103),
                s = r(64057);
            async function readContract(e, {
                abi: t,
                address: r,
                args: c,
                functionName: u,
                ...l
            }) {
                let d = (0, i.encodeFunctionData)({
                    abi: t,
                    args: c,
                    functionName: u
                });
                try {
                    let {
                        data: i
                    } = await (0, a.getAction)(e, s.call, "call")({
                        data: d,
                        to: r,
                        ...l
                    });
                    return (0, n.decodeFunctionResult)({
                        abi: t,
                        args: c,
                        functionName: u,
                        data: i || "0x"
                    })
                } catch (e) {
                    throw (0, o.getContractError)(e, {
                        abi: t,
                        address: r,
                        args: c,
                        docsPath: "/docs/contract/readContract",
                        functionName: u
                    })
                }
            }
            t.readContract = readContract
        },
        80120: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.simulateContract = void 0;
            let n = r(9783),
                i = r(7889),
                o = r(61895),
                a = r(25229),
                s = r(76103),
                c = r(64057);
            async function simulateContract(e, {
                abi: t,
                address: r,
                args: u,
                dataSuffix: l,
                functionName: d,
                ...f
            }) {
                let p = f.account ? (0, n.parseAccount)(f.account) : void 0,
                    y = (0, o.encodeFunctionData)({
                        abi: t,
                        args: u,
                        functionName: d
                    });
                try {
                    let {
                        data: n
                    } = await (0, s.getAction)(e, c.call, "call")({
                        batch: !1,
                        data: `${y}${l?l.replace("0x",""):""}`,
                        to: r,
                        ...f
                    }), o = (0, i.decodeFunctionResult)({
                        abi: t,
                        args: u,
                        functionName: d,
                        data: n || "0x"
                    });
                    return {
                        result: o,
                        request: {
                            abi: t,
                            address: r,
                            args: u,
                            dataSuffix: l,
                            functionName: d,
                            ...f
                        }
                    }
                } catch (e) {
                    throw (0, a.getContractError)(e, {
                        abi: t,
                        address: r,
                        args: u,
                        docsPath: "/docs/contract/simulateContract",
                        functionName: d,
                        sender: p ? .address
                    })
                }
            }
            t.simulateContract = simulateContract
        },
        59023: function(e, t) {
            "use strict";
            async function uninstallFilter(e, {
                filter: t
            }) {
                return t.request({
                    method: "eth_uninstallFilter",
                    params: [t.id]
                })
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.uninstallFilter = void 0, t.uninstallFilter = uninstallFilter
        },
        40759: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.verifyHash = void 0;
            let n = r(23757),
                i = r(15765),
                o = r(32405),
                a = r(70546),
                s = r(76103),
                c = r(54388),
                u = r(64057);
            async function verifyHash(e, {
                address: t,
                hash: r,
                signature: l,
                ...d
            }) {
                let f = (0, c.isHex)(l) ? l : (0, c.toHex)(l);
                try {
                    let {
                        data: o
                    } = await (0, s.getAction)(e, u.call, "call")({
                        data: (0, c.encodeDeployData)({
                            abi: n.universalSignatureValidatorAbi,
                            args: [t, r, f],
                            bytecode: i.universalSignatureValidatorByteCode
                        }),
                        ...d
                    });
                    return (0, a.isBytesEqual)(o ? ? "0x0", "0x1")
                } catch (e) {
                    if (e instanceof o.CallExecutionError) return !1;
                    throw e
                }
            }
            t.verifyHash = verifyHash
        },
        39988: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.verifyMessage = void 0;
            let n = r(54388),
                i = r(40759);
            async function verifyMessage(e, {
                address: t,
                message: r,
                signature: o,
                ...a
            }) {
                let s = (0, n.hashMessage)(r);
                return (0, i.verifyHash)(e, {
                    address: t,
                    hash: s,
                    signature: o,
                    ...a
                })
            }
            t.verifyMessage = verifyMessage
        },
        2554: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.verifyTypedData = void 0;
            let n = r(11699),
                i = r(40759);
            async function verifyTypedData(e, {
                address: t,
                signature: r,
                message: o,
                primaryType: a,
                types: s,
                domain: c,
                ...u
            }) {
                let l = (0, n.hashTypedData)({
                    message: o,
                    primaryType: a,
                    types: s,
                    domain: c
                });
                return (0, i.verifyHash)(e, {
                    address: t,
                    hash: l,
                    signature: r,
                    ...u
                })
            }
            t.verifyTypedData = verifyTypedData
        },
        38318: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.waitForTransactionReceipt = void 0;
            let n = r(28396),
                i = r(65750),
                o = r(76103),
                a = r(13500),
                s = r(57984),
                c = r(42701),
                u = r(54467),
                l = r(79633),
                d = r(5107),
                f = r(56448);
            async function waitForTransactionReceipt(e, {
                confirmations: t = 1,
                hash: r,
                onReplaced: p,
                pollingInterval: y = e.pollingInterval,
                timeout: g
            }) {
                let v, E, _;
                let P = (0, c.stringify)(["waitForTransactionReceipt", e.uid, r]),
                    T = !1;
                return new Promise((c, x) => {
                    g && setTimeout(() => x(new i.WaitForTransactionReceiptTimeoutError({
                        hash: r
                    })), g);
                    let A = (0, a.observe)(P, {
                        onReplaced: p,
                        resolve: c,
                        reject: x
                    }, a => {
                        let c = (0, o.getAction)(e, f.watchBlockNumber, "watchBlockNumber")({
                            emitMissed: !0,
                            emitOnBegin: !0,
                            poll: !0,
                            pollingInterval: y,
                            async onBlockNumber(f) {
                                if (T) return;
                                let p = f,
                                    done = e => {
                                        c(), e(), A()
                                    };
                                try {
                                    if (_) {
                                        if (t > 1 && (!_.blockNumber || p - _.blockNumber + 1 n < t)) return;
                                        done(() => a.resolve(_));
                                        return
                                    }
                                    if (v || (T = !0, await (0, s.withRetry)(async () => {
                                            (v = await (0, o.getAction)(e, l.getTransaction, "getTransaction")({
                                                hash: r
                                            })).blockNumber && (p = v.blockNumber)
                                        }, {
                                            delay: ({
                                                count: e
                                            }) => 200 * ~~(1 << e),
                                            retryCount: 6
                                        }), T = !1), _ = await (0, o.getAction)(e, d.getTransactionReceipt, "getTransactionReceipt")({
                                            hash: r
                                        }), t > 1 && (!_.blockNumber || p - _.blockNumber + 1 n < t)) return;
                                    done(() => a.resolve(_))
                                } catch (r) {
                                    if (v && (r instanceof i.TransactionNotFoundError || r instanceof i.TransactionReceiptNotFoundError)) try {
                                        E = v, T = !0;
                                        let r = await (0, s.withRetry)(() => (0, o.getAction)(e, u.getBlock, "getBlock")({
                                            blockNumber: p,
                                            includeTransactions: !0
                                        }), {
                                            delay: ({
                                                count: e
                                            }) => 200 * ~~(1 << e),
                                            retryCount: 6,
                                            shouldRetry: ({
                                                error: e
                                            }) => e instanceof n.BlockNotFoundError
                                        });
                                        T = !1;
                                        let i = r.transactions.find(({
                                            from: e,
                                            nonce: t
                                        }) => e === E.from && t === E.nonce);
                                        if (!i || (_ = await (0, o.getAction)(e, d.getTransactionReceipt, "getTransactionReceipt")({
                                                hash: i.hash
                                            }), t > 1 && (!_.blockNumber || p - _.blockNumber + 1 n < t))) return;
                                        let c = "replaced";
                                        i.to === E.to && i.value === E.value ? c = "repriced" : i.from === i.to && 0 n === i.value && (c = "cancelled"), done(() => {
                                            a.onReplaced ? .({
                                                reason: c,
                                                replacedTransaction: E,
                                                transaction: i,
                                                transactionReceipt: _
                                            }), a.resolve(_)
                                        })
                                    } catch (e) {
                                        done(() => a.reject(e))
                                    } else done(() => a.reject(r))
                                }
                            }
                        })
                    })
                })
            }
            t.waitForTransactionReceipt = waitForTransactionReceipt
        },
        56448: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.watchBlockNumber = void 0;
            let n = r(4744),
                i = r(76103),
                o = r(13500),
                a = r(55986),
                s = r(42701),
                c = r(30649);
            t.watchBlockNumber = function(e, {
                emitOnBegin: t = !1,
                emitMissed: r = !1,
                onBlockNumber: u,
                onError: l,
                poll: d,
                pollingInterval: f = e.pollingInterval
            }) {
                let p, y, g;
                let v = void 0 !== d ? d : "webSocket" !== e.transport.type;
                return v ? (() => {
                    let n = (0, s.stringify)(["watchBlockNumber", e.uid, t, r, f]);
                    return (0, o.observe)(n, {
                        onBlockNumber: u,
                        onError: l
                    }, n => (0, a.poll)(async () => {
                        try {
                            let t = await (0, i.getAction)(e, c.getBlockNumber, "getBlockNumber")({
                                cacheTime: 0
                            });
                            if (p) {
                                if (t === p) return;
                                if (t - p > 1 && r)
                                    for (let e = p + 1 n; e < t; e++) n.onBlockNumber(e, p), p = e
                            }(!p || t > p) && (n.onBlockNumber(t, p), p = t)
                        } catch (e) {
                            n.onError ? .(e)
                        }
                    }, {
                        emitOnBegin: t,
                        interval: f
                    }))
                })() : (y = !0, g = () => y = !1, (async () => {
                    try {
                        let {
                            unsubscribe: t
                        } = await e.transport.subscribe({
                            params: ["newHeads"],
                            onData(e) {
                                if (!y) return;
                                let t = (0, n.hexToBigInt)(e.result ? .number);
                                u(t, p), p = t
                            },
                            onError(e) {
                                l ? .(e)
                            }
                        });
                        g = t, y || g()
                    } catch (e) {
                        l ? .(e)
                    }
                })(), g)
            }
        },
        69808: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.watchBlocks = void 0;
            let n = r(94160),
                i = r(76103),
                o = r(13500),
                a = r(55986),
                s = r(42701),
                c = r(54467);
            t.watchBlocks = function(e, {
                blockTag: t = "latest",
                emitMissed: r = !1,
                emitOnBegin: u = !1,
                onBlock: l,
                onError: d,
                includeTransactions: f,
                poll: p,
                pollingInterval: y = e.pollingInterval
            }) {
                let g, v, E;
                let _ = void 0 !== p ? p : "webSocket" !== e.transport.type,
                    P = f ? ? !1;
                return _ ? (() => {
                    let n = (0, s.stringify)(["watchBlocks", e.uid, r, u, P, y]);
                    return (0, o.observe)(n, {
                        onBlock: l,
                        onError: d
                    }, n => (0, a.poll)(async () => {
                        try {
                            let o = await (0, i.getAction)(e, c.getBlock, "getBlock")({
                                blockTag: t,
                                includeTransactions: P
                            });
                            if (o.number && g ? .number) {
                                if (o.number === g.number) return;
                                if (o.number - g.number > 1 && r)
                                    for (let t = g ? .number + 1 n; t < o.number; t++) {
                                        let r = await (0, i.getAction)(e, c.getBlock, "getBlock")({
                                            blockNumber: t,
                                            includeTransactions: P
                                        });
                                        n.onBlock(r, g), g = r
                                    }
                            }(!g ? .number || "pending" === t && !o ? .number || o.number && o.number > g.number) && (n.onBlock(o, g), g = o)
                        } catch (e) {
                            n.onError ? .(e)
                        }
                    }, {
                        emitOnBegin: u,
                        interval: y
                    }))
                })() : (v = !0, E = () => v = !1, (async () => {
                    try {
                        let {
                            unsubscribe: t
                        } = await e.transport.subscribe({
                            params: ["newHeads"],
                            onData(t) {
                                if (!v) return;
                                let r = e.chain ? .formatters ? .block ? .format || n.formatBlock,
                                    i = r(t.result);
                                l(i, g), g = i
                            },
                            onError(e) {
                                d ? .(e)
                            }
                        });
                        E = t, v || E()
                    } catch (e) {
                        d ? .(e)
                    }
                })(), E)
            }
        },
        97356: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.watchContractEvent = void 0;
            let n = r(13500),
                i = r(55986),
                o = r(42701),
                a = r(31480),
                s = r(52091),
                c = r(8334),
                u = r(35840),
                l = r(75765),
                d = r(76103),
                f = r(60335),
                p = r(30649),
                y = r(32535),
                g = r(41327),
                v = r(59023);
            t.watchContractEvent = function(e, {
                abi: t,
                address: r,
                args: E,
                batch: _ = !0,
                eventName: P,
                onError: T,
                onLogs: x,
                poll: A,
                pollingInterval: M = e.pollingInterval,
                strict: B
            }) {
                let F, N;
                let L = void 0 !== A ? A : "webSocket" !== e.transport.type;
                return L ? (() => {
                    let a = (0, o.stringify)(["watchContractEvent", r, E, _, e.uid, P, M]),
                        c = B ? ? !1;
                    return (0, n.observe)(a, {
                        onLogs: x,
                        onError: T
                    }, n => {
                        let o, a;
                        let u = !1,
                            l = (0, i.poll)(async () => {
                                if (!u) {
                                    try {
                                        a = await (0, d.getAction)(e, f.createContractEventFilter, "createContractEventFilter")({
                                            abi: t,
                                            address: r,
                                            args: E,
                                            eventName: P,
                                            strict: c
                                        })
                                    } catch {}
                                    u = !0;
                                    return
                                }
                                try {
                                    let i;
                                    if (a) i = await (0, d.getAction)(e, g.getFilterChanges, "getFilterChanges")({
                                        filter: a
                                    });
                                    else {
                                        let n = await (0, d.getAction)(e, p.getBlockNumber, "getBlockNumber")({});
                                        i = o && o !== n ? await (0, d.getAction)(e, y.getContractEvents, "getContractEvents")({
                                            abi: t,
                                            address: r,
                                            args: E,
                                            eventName: P,
                                            fromBlock: o + 1 n,
                                            toBlock: n,
                                            strict: c
                                        }) : [], o = n
                                    }
                                    if (0 === i.length) return;
                                    if (_) n.onLogs(i);
                                    else
                                        for (let e of i) n.onLogs([e])
                                } catch (e) {
                                    a && e instanceof s.InvalidInputRpcError && (u = !1), n.onError ? .(e)
                                }
                            }, {
                                emitOnBegin: !0,
                                interval: M
                            });
                        return async () => {
                            a && await (0, d.getAction)(e, v.uninstallFilter, "uninstallFilter")({
                                filter: a
                            }), l()
                        }
                    })
                })() : (F = !0, N = () => F = !1, (async () => {
                    try {
                        let n = P ? (0, u.encodeEventTopics)({
                                abi: t,
                                eventName: P,
                                args: E
                            }) : [],
                            {
                                unsubscribe: i
                            } = await e.transport.subscribe({
                                params: ["logs", {
                                    address: r,
                                    topics: n
                                }],
                                onData(e) {
                                    if (!F) return;
                                    let r = e.result;
                                    try {
                                        let {
                                            eventName: e,
                                            args: n
                                        } = (0, c.decodeEventLog)({
                                            abi: t,
                                            data: r.data,
                                            topics: r.topics,
                                            strict: B
                                        }), i = (0, l.formatLog)(r, {
                                            args: n,
                                            eventName: e
                                        });
                                        x([i])
                                    } catch (i) {
                                        let e, t;
                                        if (i instanceof a.DecodeLogDataMismatch || i instanceof a.DecodeLogTopicsMismatch) {
                                            if (B) return;
                                            e = i.abiItem.name, t = i.abiItem.inputs ? .some(e => !("name" in e && e.name))
                                        }
                                        let n = (0, l.formatLog)(r, {
                                            args: t ? [] : {},
                                            eventName: e
                                        });
                                        x([n])
                                    }
                                },
                                onError(e) {
                                    T ? .(e)
                                }
                            });
                        N = i, F || N()
                    } catch (e) {
                        T ? .(e)
                    }
                })(), N)
            }
        },
        68205: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.watchEvent = void 0;
            let n = r(13500),
                i = r(55986),
                o = r(42701),
                a = r(31480),
                s = r(52091),
                c = r(76103),
                u = r(54388),
                l = r(3083),
                d = r(30649),
                f = r(41327),
                p = r(61865),
                y = r(59023);
            t.watchEvent = function(e, {
                address: t,
                args: r,
                batch: g = !0,
                event: v,
                events: E,
                onError: _,
                onLogs: P,
                poll: T,
                pollingInterval: x = e.pollingInterval,
                strict: A
            }) {
                let M, B;
                let F = void 0 !== T ? T : "webSocket" !== e.transport.type,
                    N = A ? ? !1;
                return F ? (() => {
                    let a = (0, o.stringify)(["watchEvent", t, r, g, e.uid, v, x]);
                    return (0, n.observe)(a, {
                        onLogs: P,
                        onError: _
                    }, n => {
                        let o, a;
                        let u = !1,
                            _ = (0, i.poll)(async () => {
                                if (!u) {
                                    try {
                                        a = await (0, c.getAction)(e, l.createEventFilter, "createEventFilter")({
                                            address: t,
                                            args: r,
                                            event: v,
                                            events: E,
                                            strict: N
                                        })
                                    } catch {}
                                    u = !0;
                                    return
                                }
                                try {
                                    let i;
                                    if (a) i = await (0, c.getAction)(e, f.getFilterChanges, "getFilterChanges")({
                                        filter: a
                                    });
                                    else {
                                        let n = await (0, c.getAction)(e, d.getBlockNumber, "getBlockNumber")({});
                                        i = o && o !== n ? await (0, c.getAction)(e, p.getLogs, "getLogs")({
                                            address: t,
                                            args: r,
                                            event: v,
                                            events: E,
                                            fromBlock: o + 1 n,
                                            toBlock: n
                                        }) : [], o = n
                                    }
                                    if (0 === i.length) return;
                                    if (g) n.onLogs(i);
                                    else
                                        for (let e of i) n.onLogs([e])
                                } catch (e) {
                                    a && e instanceof s.InvalidInputRpcError && (u = !1), n.onError ? .(e)
                                }
                            }, {
                                emitOnBegin: !0,
                                interval: x
                            });
                        return async () => {
                            a && await (0, c.getAction)(e, y.uninstallFilter, "uninstallFilter")({
                                filter: a
                            }), _()
                        }
                    })
                })() : (M = !0, B = () => M = !1, (async () => {
                    try {
                        let n = E ? ? (v ? [v] : void 0),
                            i = [];
                        n && (i = [n.flatMap(e => (0, u.encodeEventTopics)({
                            abi: [e],
                            eventName: e.name,
                            args: r
                        }))], v && (i = i[0]));
                        let {
                            unsubscribe: o
                        } = await e.transport.subscribe({
                            params: ["logs", {
                                address: t,
                                topics: i
                            }],
                            onData(e) {
                                if (!M) return;
                                let t = e.result;
                                try {
                                    let {
                                        eventName: e,
                                        args: r
                                    } = (0, u.decodeEventLog)({
                                        abi: n,
                                        data: t.data,
                                        topics: t.topics,
                                        strict: N
                                    }), i = (0, u.formatLog)(t, {
                                        args: r,
                                        eventName: e
                                    });
                                    P([i])
                                } catch (i) {
                                    let e, r;
                                    if (i instanceof a.DecodeLogDataMismatch || i instanceof a.DecodeLogTopicsMismatch) {
                                        if (A) return;
                                        e = i.abiItem.name, r = i.abiItem.inputs ? .some(e => !("name" in e && e.name))
                                    }
                                    let n = (0, u.formatLog)(t, {
                                        args: r ? [] : {},
                                        eventName: e
                                    });
                                    P([n])
                                }
                            },
                            onError(e) {
                                _ ? .(e)
                            }
                        });
                        B = o, M || B()
                    } catch (e) {
                        _ ? .(e)
                    }
                })(), B)
            }
        },
        75477: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.watchPendingTransactions = void 0;
            let n = r(76103),
                i = r(13500),
                o = r(55986),
                a = r(42701),
                s = r(12604),
                c = r(41327),
                u = r(59023);
            t.watchPendingTransactions = function(e, {
                batch: t = !0,
                onError: r,
                onTransactions: l,
                poll: d,
                pollingInterval: f = e.pollingInterval
            }) {
                let p, y;
                let g = void 0 !== d ? d : "webSocket" !== e.transport.type;
                return g ? (() => {
                    let d = (0, a.stringify)(["watchPendingTransactions", e.uid, t, f]);
                    return (0, i.observe)(d, {
                        onTransactions: l,
                        onError: r
                    }, r => {
                        let i;
                        let a = (0, o.poll)(async () => {
                            try {
                                if (!i) try {
                                    i = await (0, n.getAction)(e, s.createPendingTransactionFilter, "createPendingTransactionFilter")({});
                                    return
                                } catch (e) {
                                    throw a(), e
                                }
                                let o = await (0, n.getAction)(e, c.getFilterChanges, "getFilterChanges")({
                                    filter: i
                                });
                                if (0 === o.length) return;
                                if (t) r.onTransactions(o);
                                else
                                    for (let e of o) r.onTransactions([e])
                            } catch (e) {
                                r.onError ? .(e)
                            }
                        }, {
                            emitOnBegin: !0,
                            interval: f
                        });
                        return async () => {
                            i && await (0, n.getAction)(e, u.uninstallFilter, "uninstallFilter")({
                                filter: i
                            }), a()
                        }
                    })
                })() : (p = !0, y = () => p = !1, (async () => {
                    try {
                        let {
                            unsubscribe: t
                        } = await e.transport.subscribe({
                            params: ["newPendingTransactions"],
                            onData(e) {
                                if (!p) return;
                                let t = e.result;
                                l([t])
                            },
                            onError(e) {
                                r ? .(e)
                            }
                        });
                        y = t, p || y()
                    } catch (e) {
                        r ? .(e)
                    }
                })(), y)
            }
        },
        52036: function(e, t) {
            "use strict";
            async function dropTransaction(e, {
                hash: t
            }) {
                await e.request({
                    method: `${e.mode}_dropTransaction`,
                    params: [t]
                })
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.dropTransaction = void 0, t.dropTransaction = dropTransaction
        },
        41410: function(e, t) {
            "use strict";
            async function dumpState(e) {
                return e.request({
                    method: `${e.mode}_dumpState`
                })
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.dumpState = void 0, t.dumpState = dumpState
        },
        58561: function(e, t) {
            "use strict";
            async function getAutomine(e) {
                return "ganache" === e.mode ? await e.request({
                    method: "eth_mining"
                }) : await e.request({
                    method: `${e.mode}_getAutomine`
                })
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getAutomine = void 0, t.getAutomine = getAutomine
        },
        67996: function(e, t) {
            "use strict";
            async function getTxpoolContent(e) {
                return await e.request({
                    method: "txpool_content"
                })
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getTxpoolContent = void 0, t.getTxpoolContent = getTxpoolContent
        },
        37870: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getTxpoolStatus = void 0;
            let n = r(4744);
            async function getTxpoolStatus(e) {
                let {
                    pending: t,
                    queued: r
                } = await e.request({
                    method: "txpool_status"
                });
                return {
                    pending: (0, n.hexToNumber)(t),
                    queued: (0, n.hexToNumber)(r)
                }
            }
            t.getTxpoolStatus = getTxpoolStatus
        },
        76778: function(e, t) {
            "use strict";
            async function impersonateAccount(e, {
                address: t
            }) {
                await e.request({
                    method: `${e.mode}_impersonateAccount`,
                    params: [t]
                })
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.impersonateAccount = void 0, t.impersonateAccount = impersonateAccount
        },
        33362: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.increaseTime = void 0;
            let n = r(32054);
            async function increaseTime(e, {
                seconds: t
            }) {
                return await e.request({
                    method: "evm_increaseTime",
                    params: [(0, n.numberToHex)(t)]
                })
            }
            t.increaseTime = increaseTime
        },
        14673: function(e, t) {
            "use strict";
            async function inspectTxpool(e) {
                return await e.request({
                    method: "txpool_inspect"
                })
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.inspectTxpool = void 0, t.inspectTxpool = inspectTxpool
        },
        98416: function(e, t) {
            "use strict";
            async function loadState(e, {
                state: t
            }) {
                await e.request({
                    method: `${e.mode}_loadState`,
                    params: [t]
                })
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.loadState = void 0, t.loadState = loadState
        },
        9828: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.mine = void 0;
            let n = r(32054);
            async function mine(e, {
                blocks: t,
                interval: r
            }) {
                "ganache" === e.mode ? await e.request({
                    method: "evm_mine",
                    params: [{
                        blocks: (0, n.numberToHex)(t)
                    }]
                }) : await e.request({
                    method: `${e.mode}_mine`,
                    params: [(0, n.numberToHex)(t), (0, n.numberToHex)(r || 0)]
                })
            }
            t.mine = mine
        },
        61424: function(e, t) {
            "use strict";
            async function removeBlockTimestampInterval(e) {
                await e.request({
                    method: `${e.mode}_removeBlockTimestampInterval`
                })
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.removeBlockTimestampInterval = void 0, t.removeBlockTimestampInterval = removeBlockTimestampInterval
        },
        11702: function(e, t) {
            "use strict";
            async function reset(e, {
                blockNumber: t,
                jsonRpcUrl: r
            } = {}) {
                await e.request({
                    method: `${e.mode}_reset`,
                    params: [{
                        forking: {
                            blockNumber: Number(t),
                            jsonRpcUrl: r
                        }
                    }]
                })
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.reset = void 0, t.reset = reset
        },
        12086: function(e, t) {
            "use strict";
            async function revert(e, {
                id: t
            }) {
                await e.request({
                    method: "evm_revert",
                    params: [t]
                })
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.revert = void 0, t.revert = revert
        },
        74787: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.sendUnsignedTransaction = void 0;
            let n = r(25798),
                i = r(63465);
            async function sendUnsignedTransaction(e, t) {
                let {
                    accessList: r,
                    data: o,
                    from: a,
                    gas: s,
                    gasPrice: c,
                    maxFeePerGas: u,
                    maxPriorityFeePerGas: l,
                    nonce: d,
                    to: f,
                    value: p,
                    ...y
                } = t, g = e.chain ? .formatters ? .transactionRequest ? .format, v = g || i.formatTransactionRequest, E = v({ ...(0, n.extract)(y, {
                        format: g
                    }),
                    accessList: r,
                    data: o,
                    from: a,
                    gas: s,
                    gasPrice: c,
                    maxFeePerGas: u,
                    maxPriorityFeePerGas: l,
                    nonce: d,
                    to: f,
                    value: p
                }), _ = await e.request({
                    method: "eth_sendUnsignedTransaction",
                    params: [E]
                });
                return _
            }
            t.sendUnsignedTransaction = sendUnsignedTransaction
        },
        96595: function(e, t) {
            "use strict";
            async function setAutomine(e, t) {
                "ganache" === e.mode ? t ? await e.request({
                    method: "miner_start"
                }) : await e.request({
                    method: "miner_stop"
                }) : await e.request({
                    method: "evm_setAutomine",
                    params: [t]
                })
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.setAutomine = void 0, t.setAutomine = setAutomine
        },
        12327: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.setBalance = void 0;
            let n = r(32054);
            async function setBalance(e, {
                address: t,
                value: r
            }) {
                "ganache" === e.mode ? await e.request({
                    method: "evm_setAccountBalance",
                    params: [t, (0, n.numberToHex)(r)]
                }) : await e.request({
                    method: `${e.mode}_setBalance`,
                    params: [t, (0, n.numberToHex)(r)]
                })
            }
            t.setBalance = setBalance
        },
        93405: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.setBlockGasLimit = void 0;
            let n = r(32054);
            async function setBlockGasLimit(e, {
                gasLimit: t
            }) {
                await e.request({
                    method: "evm_setBlockGasLimit",
                    params: [(0, n.numberToHex)(t)]
                })
            }
            t.setBlockGasLimit = setBlockGasLimit
        },
        87606: function(e, t) {
            "use strict";
            async function setBlockTimestampInterval(e, {
                interval: t
            }) {
                let r = "hardhat" === e.mode ? 1e3 * t : t;
                await e.request({
                    method: `${e.mode}_setBlockTimestampInterval`,
                    params: [r]
                })
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.setBlockTimestampInterval = void 0, t.setBlockTimestampInterval = setBlockTimestampInterval
        },
        92305: function(e, t) {
            "use strict";
            async function setCode(e, {
                address: t,
                bytecode: r
            }) {
                await e.request({
                    method: `${e.mode}_setCode`,
                    params: [t, r]
                })
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.setCode = void 0, t.setCode = setCode
        },
        21929: function(e, t) {
            "use strict";
            async function setCoinbase(e, {
                address: t
            }) {
                await e.request({
                    method: `${e.mode}_setCoinbase`,
                    params: [t]
                })
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.setCoinbase = void 0, t.setCoinbase = setCoinbase
        },
        46094: function(e, t) {
            "use strict";
            async function setIntervalMining(e, {
                interval: t
            }) {
                let r = "hardhat" === e.mode ? 1e3 * t : t;
                await e.request({
                    method: "evm_setIntervalMining",
                    params: [r]
                })
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.setIntervalMining = void 0, t.setIntervalMining = setIntervalMining
        },
        17925: function(e, t) {
            "use strict";
            async function setLoggingEnabled(e, t) {
                await e.request({
                    method: `${e.mode}_setLoggingEnabled`,
                    params: [t]
                })
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.setLoggingEnabled = void 0, t.setLoggingEnabled = setLoggingEnabled
        },
        52367: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.setMinGasPrice = void 0;
            let n = r(32054);
            async function setMinGasPrice(e, {
                gasPrice: t
            }) {
                await e.request({
                    method: `${e.mode}_setMinGasPrice`,
                    params: [(0, n.numberToHex)(t)]
                })
            }
            t.setMinGasPrice = setMinGasPrice
        },
        95891: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.setNextBlockBaseFeePerGas = void 0;
            let n = r(32054);
            async function setNextBlockBaseFeePerGas(e, {
                baseFeePerGas: t
            }) {
                await e.request({
                    method: `${e.mode}_setNextBlockBaseFeePerGas`,
                    params: [(0, n.numberToHex)(t)]
                })
            }
            t.setNextBlockBaseFeePerGas = setNextBlockBaseFeePerGas
        },
        16514: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.setNextBlockTimestamp = void 0;
            let n = r(32054);
            async function setNextBlockTimestamp(e, {
                timestamp: t
            }) {
                await e.request({
                    method: "evm_setNextBlockTimestamp",
                    params: [(0, n.numberToHex)(t)]
                })
            }
            t.setNextBlockTimestamp = setNextBlockTimestamp
        },
        28952: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.setNonce = void 0;
            let n = r(32054);
            async function setNonce(e, {
                address: t,
                nonce: r
            }) {
                await e.request({
                    method: `${e.mode}_setNonce`,
                    params: [t, (0, n.numberToHex)(r)]
                })
            }
            t.setNonce = setNonce
        },
        77132: function(e, t) {
            "use strict";
            async function setRpcUrl(e, t) {
                await e.request({
                    method: `${e.mode}_setRpcUrl`,
                    params: [t]
                })
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.setRpcUrl = void 0, t.setRpcUrl = setRpcUrl
        },
        81221: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.setStorageAt = void 0;
            let n = r(32054);
            async function setStorageAt(e, {
                address: t,
                index: r,
                value: i
            }) {
                await e.request({
                    method: `${e.mode}_setStorageAt`,
                    params: [t, "number" == typeof r ? (0, n.numberToHex)(r) : r, i]
                })
            }
            t.setStorageAt = setStorageAt
        },
        35365: function(e, t) {
            "use strict";
            async function snapshot(e) {
                return await e.request({
                    method: "evm_snapshot"
                })
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.snapshot = void 0, t.snapshot = snapshot
        },
        66774: function(e, t) {
            "use strict";
            async function stopImpersonatingAccount(e, {
                address: t
            }) {
                await e.request({
                    method: `${e.mode}_stopImpersonatingAccount`,
                    params: [t]
                })
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.stopImpersonatingAccount = void 0, t.stopImpersonatingAccount = stopImpersonatingAccount
        },
        45929: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.addChain = void 0;
            let n = r(32054);
            async function addChain(e, {
                chain: t
            }) {
                let {
                    id: r,
                    name: i,
                    nativeCurrency: o,
                    rpcUrls: a,
                    blockExplorers: s
                } = t;
                await e.request({
                    method: "wallet_addEthereumChain",
                    params: [{
                        chainId: (0, n.numberToHex)(r),
                        chainName: i,
                        nativeCurrency: o,
                        rpcUrls: a.default.http,
                        blockExplorerUrls: s ? Object.values(s).map(({
                            url: e
                        }) => e) : void 0
                    }]
                })
            }
            t.addChain = addChain
        },
        81817: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.deployContract = void 0;
            let n = r(59697),
                i = r(45879);
            t.deployContract = function(e, {
                abi: t,
                args: r,
                bytecode: o,
                ...a
            }) {
                let s = (0, n.encodeDeployData)({
                    abi: t,
                    args: r,
                    bytecode: o
                });
                return (0, i.sendTransaction)(e, { ...a,
                    data: s
                })
            }
        },
        52407: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getAddresses = void 0;
            let n = r(46972);
            async function getAddresses(e) {
                if (e.account ? .type === "local") return [e.account.address];
                let t = await e.request({
                    method: "eth_accounts"
                });
                return t.map(e => (0, n.checksumAddress)(e))
            }
            t.getAddresses = getAddresses
        },
        96255: function(e, t) {
            "use strict";
            async function getPermissions(e) {
                let t = await e.request({
                    method: "wallet_getPermissions"
                });
                return t
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getPermissions = void 0, t.getPermissions = getPermissions
        },
        48945: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.prepareTransactionRequest = void 0;
            let n = r(9783),
                i = r(93204),
                o = r(85296),
                a = r(54467),
                s = r(32549),
                c = r(53093),
                u = r(80892),
                l = r(76103),
                d = r(89399),
                f = r(38799);
            async function prepareTransactionRequest(e, t) {
                let {
                    account: r = e.account,
                    chain: p,
                    gas: y,
                    nonce: g,
                    type: v
                } = t;
                if (!r) throw new c.AccountNotFoundError;
                let E = (0, n.parseAccount)(r),
                    _ = await (0, l.getAction)(e, a.getBlock, "getBlock")({
                        blockTag: "latest"
                    }),
                    P = { ...t,
                        from: E.address
                    };
                if (void 0 === g && (P.nonce = await (0, l.getAction)(e, s.getTransactionCount, "getTransactionCount")({
                        address: E.address,
                        blockTag: "pending"
                    })), void 0 === v) try {
                    P.type = (0, f.getTransactionType)(P)
                } catch {
                    P.type = "bigint" == typeof _.baseFeePerGas ? "eip1559" : "legacy"
                }
                if ("eip1559" === P.type) {
                    let {
                        maxFeePerGas: r,
                        maxPriorityFeePerGas: n
                    } = await (0, i.internal_estimateFeesPerGas)(e, {
                        block: _,
                        chain: p,
                        request: P
                    });
                    if (void 0 === t.maxPriorityFeePerGas && t.maxFeePerGas && t.maxFeePerGas < n) throw new u.MaxFeePerGasTooLowError({
                        maxPriorityFeePerGas: n
                    });
                    P.maxPriorityFeePerGas = n, P.maxFeePerGas = r
                } else {
                    if (void 0 !== t.maxFeePerGas || void 0 !== t.maxPriorityFeePerGas) throw new u.Eip1559FeesNotSupportedError;
                    let {
                        gasPrice: r
                    } = await (0, i.internal_estimateFeesPerGas)(e, {
                        block: _,
                        chain: p,
                        request: P,
                        type: "legacy"
                    });
                    P.gasPrice = r
                }
                return void 0 === y && (P.gas = await (0, l.getAction)(e, o.estimateGas, "estimateGas")({ ...P,
                    account: {
                        address: E.address,
                        type: "json-rpc"
                    }
                })), (0, d.assertRequest)(P), P
            }
            t.prepareTransactionRequest = prepareTransactionRequest
        },
        92952: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.requestAddresses = void 0;
            let n = r(46972);
            async function requestAddresses(e) {
                let t = await e.request({
                    method: "eth_requestAccounts"
                });
                return t.map(e => (0, n.getAddress)(e))
            }
            t.requestAddresses = requestAddresses
        },
        40841: function(e, t) {
            "use strict";
            async function requestPermissions(e, t) {
                return e.request({
                    method: "wallet_requestPermissions",
                    params: [t]
                })
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.requestPermissions = void 0, t.requestPermissions = requestPermissions
        },
        77745: function(e, t) {
            "use strict";
            async function sendRawTransaction(e, {
                serializedTransaction: t
            }) {
                return e.request({
                    method: "eth_sendRawTransaction",
                    params: [t]
                })
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.sendRawTransaction = void 0, t.sendRawTransaction = sendRawTransaction
        },
        45879: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.sendTransaction = void 0;
            let n = r(9783),
                i = r(53093),
                o = r(43179),
                a = r(50119),
                s = r(25798),
                c = r(63465),
                u = r(76103),
                l = r(89399),
                d = r(38816),
                f = r(48945),
                p = r(77745);
            async function sendTransaction(e, t) {
                let {
                    account: r = e.account,
                    chain: y = e.chain,
                    accessList: g,
                    data: v,
                    gas: E,
                    gasPrice: _,
                    maxFeePerGas: P,
                    maxPriorityFeePerGas: T,
                    nonce: x,
                    to: A,
                    value: M,
                    ...B
                } = t;
                if (!r) throw new i.AccountNotFoundError({
                    docsPath: "/docs/actions/wallet/sendTransaction"
                });
                let F = (0, n.parseAccount)(r);
                try {
                    let r;
                    if ((0, l.assertRequest)(t), null !== y && (r = await (0, u.getAction)(e, d.getChainId, "getChainId")({}), (0, o.assertCurrentChain)({
                            currentChainId: r,
                            chain: y
                        })), "local" === F.type) {
                        let t = await (0, u.getAction)(e, f.prepareTransactionRequest, "prepareTransactionRequest")({
                            account: F,
                            accessList: g,
                            chain: y,
                            data: v,
                            gas: E,
                            gasPrice: _,
                            maxFeePerGas: P,
                            maxPriorityFeePerGas: T,
                            nonce: x,
                            to: A,
                            value: M,
                            ...B
                        });
                        r || (r = await (0, u.getAction)(e, d.getChainId, "getChainId")({}));
                        let n = y ? .serializers ? .transaction,
                            i = await F.signTransaction({ ...t,
                                chainId: r
                            }, {
                                serializer: n
                            });
                        return await (0, u.getAction)(e, p.sendRawTransaction, "sendRawTransaction")({
                            serializedTransaction: i
                        })
                    }
                    let n = e.chain ? .formatters ? .transactionRequest ? .format,
                        i = n || c.formatTransactionRequest,
                        a = i({ ...(0, s.extract)(B, {
                                format: n
                            }),
                            accessList: g,
                            data: v,
                            from: F.address,
                            gas: E,
                            gasPrice: _,
                            maxFeePerGas: P,
                            maxPriorityFeePerGas: T,
                            nonce: x,
                            to: A,
                            value: M
                        });
                    return await e.request({
                        method: "eth_sendTransaction",
                        params: [a]
                    })
                } catch (e) {
                    throw (0, a.getTransactionError)(e, { ...t,
                        account: F,
                        chain: t.chain || void 0
                    })
                }
            }
            t.sendTransaction = sendTransaction
        },
        54854: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.signMessage = void 0;
            let n = r(9783),
                i = r(53093),
                o = r(32054);
            async function signMessage(e, {
                account: t = e.account,
                message: r
            }) {
                if (!t) throw new i.AccountNotFoundError({
                    docsPath: "/docs/actions/wallet/signMessage"
                });
                let a = (0, n.parseAccount)(t);
                if ("local" === a.type) return a.signMessage({
                    message: r
                });
                let s = "string" == typeof r ? (0, o.stringToHex)(r) : r.raw instanceof Uint8Array ? (0, o.toHex)(r.raw) : r.raw;
                return e.request({
                    method: "personal_sign",
                    params: [s, a.address]
                })
            }
            t.signMessage = signMessage
        },
        40589: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.signTransaction = void 0;
            let n = r(9783),
                i = r(53093),
                o = r(43179),
                a = r(63465),
                s = r(76103),
                c = r(54388),
                u = r(89399),
                l = r(38816);
            async function signTransaction(e, t) {
                let {
                    account: r = e.account,
                    chain: d = e.chain,
                    ...f
                } = t;
                if (!r) throw new i.AccountNotFoundError({
                    docsPath: "/docs/actions/wallet/signTransaction"
                });
                let p = (0, n.parseAccount)(r);
                (0, u.assertRequest)({
                    account: p,
                    ...t
                });
                let y = await (0, s.getAction)(e, l.getChainId, "getChainId")({});
                null !== d && (0, o.assertCurrentChain)({
                    currentChainId: y,
                    chain: d
                });
                let g = d ? .formatters || e.chain ? .formatters,
                    v = g ? .transactionRequest ? .format || a.formatTransactionRequest;
                return "local" === p.type ? p.signTransaction({ ...f,
                    chainId: y
                }, {
                    serializer: e.chain ? .serializers ? .transaction
                }) : await e.request({
                    method: "eth_signTransaction",
                    params: [{ ...v(f),
                        chainId: (0, c.numberToHex)(y),
                        from: p.address
                    }]
                })
            }
            t.signTransaction = signTransaction
        },
        50709: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.signTypedData = void 0;
            let n = r(9783),
                i = r(53093),
                o = r(90383),
                a = r(42701),
                s = r(87059);
            async function signTypedData(e, {
                account: t = e.account,
                domain: r,
                message: c,
                primaryType: u,
                types: l
            }) {
                if (!t) throw new i.AccountNotFoundError({
                    docsPath: "/docs/actions/wallet/signTypedData"
                });
                let d = (0, n.parseAccount)(t),
                    f = {
                        EIP712Domain: (0, s.getTypesForEIP712Domain)({
                            domain: r
                        }),
                        ...l
                    };
                if ((0, s.validateTypedData)({
                        domain: r,
                        message: c,
                        primaryType: u,
                        types: f
                    }), "local" === d.type) return d.signTypedData({
                    domain: r,
                    primaryType: u,
                    types: f,
                    message: c
                });
                let p = (0, a.stringify)({
                    domain: r ? ? {},
                    primaryType: u,
                    types: f,
                    message: c
                }, (e, t) => (0, o.isHex)(t) ? t.toLowerCase() : t);
                return e.request({
                    method: "eth_signTypedData_v4",
                    params: [d.address, p]
                })
            }
            t.signTypedData = signTypedData
        },
        70494: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.switchChain = void 0;
            let n = r(32054);
            async function switchChain(e, {
                id: t
            }) {
                await e.request({
                    method: "wallet_switchEthereumChain",
                    params: [{
                        chainId: (0, n.numberToHex)(t)
                    }]
                })
            }
            t.switchChain = switchChain
        },
        10679: function(e, t) {
            "use strict";
            async function watchAsset(e, t) {
                let r = await e.request({
                    method: "wallet_watchAsset",
                    params: t
                });
                return r
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.watchAsset = void 0, t.watchAsset = watchAsset
        },
        97545: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.writeContract = void 0;
            let n = r(61895),
                i = r(76103),
                o = r(45879);
            async function writeContract(e, {
                abi: t,
                address: r,
                args: a,
                dataSuffix: s,
                functionName: c,
                ...u
            }) {
                let l = (0, n.encodeFunctionData)({
                        abi: t,
                        args: a,
                        functionName: c
                    }),
                    d = await (0, i.getAction)(e, o.sendTransaction, "sendTransaction")({
                        data: `${l}${s?s.replace("0x",""):""}`,
                        to: r,
                        ...u
                    });
                return d
            }
            t.writeContract = writeContract
        },
        89377: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.createClient = void 0;
            let n = r(90881),
                i = r(10539);
            t.createClient = function(e) {
                let {
                    batch: t,
                    cacheTime: r = e.pollingInterval ? ? 4e3,
                    key: o = "base",
                    name: a = "Base Client",
                    pollingInterval: s = 4e3,
                    type: c = "base"
                } = e, u = e.chain, l = e.account ? (0, n.parseAccount)(e.account) : void 0, {
                    config: d,
                    request: f,
                    value: p
                } = e.transport({
                    chain: u,
                    pollingInterval: s
                }), y = { ...d,
                    ...p
                }, g = {
                    account: l,
                    batch: t,
                    cacheTime: r,
                    chain: u,
                    key: o,
                    name: a,
                    pollingInterval: s,
                    request: f,
                    transport: y,
                    type: c,
                    uid: (0, i.uid)()
                };
                return Object.assign(g, {
                    extend: function extend(e) {
                        return t => {
                            let r = t(e);
                            for (let e in g) delete r[e];
                            let n = { ...e,
                                ...r
                            };
                            return Object.assign(n, {
                                extend: extend(n)
                            })
                        }
                    }(g)
                })
            }
        },
        48573: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.createPublicClient = void 0;
            let n = r(89377),
                i = r(84856);
            t.createPublicClient = function(e) {
                let {
                    key: t = "public",
                    name: r = "Public Client"
                } = e, o = (0, n.createClient)({ ...e,
                    key: t,
                    name: r,
                    type: "publicClient"
                });
                return o.extend(i.publicActions)
            }
        },
        57771: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.createTestClient = void 0;
            let n = r(89377),
                i = r(5384);
            t.createTestClient = function(e) {
                let {
                    key: t = "test",
                    name: r = "Test Client",
                    mode: o
                } = e, a = (0, n.createClient)({ ...e,
                    key: t,
                    name: r,
                    type: "testClient"
                });
                return a.extend(e => ({
                    mode: o,
                    ...(0, i.testActions)({
                        mode: o
                    })(e)
                }))
            }
        },
        85069: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.createWalletClient = void 0;
            let n = r(89377),
                i = r(96841);
            t.createWalletClient = function(e) {
                let {
                    key: t = "wallet",
                    name: r = "Wallet Client",
                    transport: o
                } = e, a = (0, n.createClient)({ ...e,
                    key: t,
                    name: r,
                    transport: e => o({ ...e,
                        retryCount: 0
                    }),
                    type: "walletClient"
                });
                return a.extend(i.walletActions)
            }
        },
        84856: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.publicActions = void 0;
            let n = r(64164),
                i = r(97150),
                o = r(39941),
                a = r(64086),
                s = r(50285),
                c = r(64057),
                u = r(79484),
                l = r(60335),
                d = r(3083),
                f = r(12604),
                p = r(20670),
                y = r(93204),
                g = r(85296),
                v = r(14274),
                E = r(41656),
                _ = r(54467),
                P = r(30649),
                T = r(59846),
                x = r(53006),
                A = r(38816),
                M = r(32535),
                B = r(92735),
                F = r(41327),
                N = r(70574),
                L = r(36950),
                U = r(61865),
                z = r(41837),
                G = r(52177),
                W = r(79633),
                V = r(9332),
                Q = r(32549),
                K = r(5107),
                Y = r(49812),
                J = r(94508),
                X = r(80120),
                er = r(59023),
                en = r(39988),
                ei = r(2554),
                eo = r(38318),
                ea = r(56448),
                es = r(69808),
                ec = r(97356),
                eu = r(68205),
                el = r(75477),
                ed = r(48945),
                ef = r(77745);
            t.publicActions = function(e) {
                return {
                    call: t => (0, c.call)(e, t),
                    createBlockFilter: () => (0, u.createBlockFilter)(e),
                    createContractEventFilter: t => (0, l.createContractEventFilter)(e, t),
                    createEventFilter: t => (0, d.createEventFilter)(e, t),
                    createPendingTransactionFilter: () => (0, f.createPendingTransactionFilter)(e),
                    estimateContractGas: t => (0, p.estimateContractGas)(e, t),
                    estimateGas: t => (0, g.estimateGas)(e, t),
                    getBalance: t => (0, E.getBalance)(e, t),
                    getBlock: t => (0, _.getBlock)(e, t),
                    getBlockNumber: t => (0, P.getBlockNumber)(e, t),
                    getBlockTransactionCount: t => (0, T.getBlockTransactionCount)(e, t),
                    getBytecode: t => (0, x.getBytecode)(e, t),
                    getChainId: () => (0, A.getChainId)(e),
                    getContractEvents: t => (0, M.getContractEvents)(e, t),
                    getEnsAddress: t => (0, n.getEnsAddress)(e, t),
                    getEnsAvatar: t => (0, i.getEnsAvatar)(e, t),
                    getEnsName: t => (0, o.getEnsName)(e, t),
                    getEnsResolver: t => (0, a.getEnsResolver)(e, t),
                    getEnsText: t => (0, s.getEnsText)(e, t),
                    getFeeHistory: t => (0, B.getFeeHistory)(e, t),
                    estimateFeesPerGas: t => (0, y.estimateFeesPerGas)(e, t),
                    getFilterChanges: t => (0, F.getFilterChanges)(e, t),
                    getFilterLogs: t => (0, N.getFilterLogs)(e, t),
                    getGasPrice: () => (0, L.getGasPrice)(e),
                    getLogs: t => (0, U.getLogs)(e, t),
                    getProof: t => (0, z.getProof)(e, t),
                    estimateMaxPriorityFeePerGas: t => (0, v.estimateMaxPriorityFeePerGas)(e, t),
                    getStorageAt: t => (0, G.getStorageAt)(e, t),
                    getTransaction: t => (0, W.getTransaction)(e, t),
                    getTransactionConfirmations: t => (0, V.getTransactionConfirmations)(e, t),
                    getTransactionCount: t => (0, Q.getTransactionCount)(e, t),
                    getTransactionReceipt: t => (0, K.getTransactionReceipt)(e, t),
                    multicall: t => (0, Y.multicall)(e, t),
                    prepareTransactionRequest: t => (0, ed.prepareTransactionRequest)(e, t),
                    readContract: t => (0, J.readContract)(e, t),
                    sendRawTransaction: t => (0, ef.sendRawTransaction)(e, t),
                    simulateContract: t => (0, X.simulateContract)(e, t),
                    verifyMessage: t => (0, en.verifyMessage)(e, t),
                    verifyTypedData: t => (0, ei.verifyTypedData)(e, t),
                    uninstallFilter: t => (0, er.uninstallFilter)(e, t),
                    waitForTransactionReceipt: t => (0, eo.waitForTransactionReceipt)(e, t),
                    watchBlocks: t => (0, es.watchBlocks)(e, t),
                    watchBlockNumber: t => (0, ea.watchBlockNumber)(e, t),
                    watchContractEvent: t => (0, ec.watchContractEvent)(e, t),
                    watchEvent: t => (0, eu.watchEvent)(e, t),
                    watchPendingTransactions: t => (0, el.watchPendingTransactions)(e, t)
                }
            }
        },
        5384: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.testActions = void 0;
            let n = r(52036),
                i = r(41410),
                o = r(58561),
                a = r(67996),
                s = r(37870),
                c = r(76778),
                u = r(33362),
                l = r(14673),
                d = r(98416),
                f = r(9828),
                p = r(61424),
                y = r(11702),
                g = r(12086),
                v = r(74787),
                E = r(96595),
                _ = r(12327),
                P = r(93405),
                T = r(87606),
                x = r(92305),
                A = r(21929),
                M = r(46094),
                B = r(17925),
                F = r(52367),
                N = r(95891),
                L = r(16514),
                U = r(28952),
                z = r(77132),
                G = r(81221),
                W = r(35365),
                V = r(66774);
            t.testActions = function({
                mode: e
            }) {
                return t => {
                    let r = t.extend(() => ({
                        mode: e
                    }));
                    return {
                        dropTransaction: e => (0, n.dropTransaction)(r, e),
                        dumpState: () => (0, i.dumpState)(r),
                        getAutomine: () => (0, o.getAutomine)(r),
                        getTxpoolContent: () => (0, a.getTxpoolContent)(r),
                        getTxpoolStatus: () => (0, s.getTxpoolStatus)(r),
                        impersonateAccount: e => (0, c.impersonateAccount)(r, e),
                        increaseTime: e => (0, u.increaseTime)(r, e),
                        inspectTxpool: () => (0, l.inspectTxpool)(r),
                        loadState: e => (0, d.loadState)(r, e),
                        mine: e => (0, f.mine)(r, e),
                        removeBlockTimestampInterval: () => (0, p.removeBlockTimestampInterval)(r),
                        reset: e => (0, y.reset)(r, e),
                        revert: e => (0, g.revert)(r, e),
                        sendUnsignedTransaction: e => (0, v.sendUnsignedTransaction)(r, e),
                        setAutomine: e => (0, E.setAutomine)(r, e),
                        setBalance: e => (0, _.setBalance)(r, e),
                        setBlockGasLimit: e => (0, P.setBlockGasLimit)(r, e),
                        setBlockTimestampInterval: e => (0, T.setBlockTimestampInterval)(r, e),
                        setCode: e => (0, x.setCode)(r, e),
                        setCoinbase: e => (0, A.setCoinbase)(r, e),
                        setIntervalMining: e => (0, M.setIntervalMining)(r, e),
                        setLoggingEnabled: e => (0, B.setLoggingEnabled)(r, e),
                        setMinGasPrice: e => (0, F.setMinGasPrice)(r, e),
                        setNextBlockBaseFeePerGas: e => (0, N.setNextBlockBaseFeePerGas)(r, e),
                        setNextBlockTimestamp: e => (0, L.setNextBlockTimestamp)(r, e),
                        setNonce: e => (0, U.setNonce)(r, e),
                        setRpcUrl: e => (0, z.setRpcUrl)(r, e),
                        setStorageAt: e => (0, G.setStorageAt)(r, e),
                        snapshot: () => (0, W.snapshot)(r),
                        stopImpersonatingAccount: e => (0, V.stopImpersonatingAccount)(r, e)
                    }
                }
            }
        },
        96841: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.walletActions = void 0;
            let n = r(38816),
                i = r(45929),
                o = r(81817),
                a = r(52407),
                s = r(96255),
                c = r(48945),
                u = r(92952),
                l = r(40841),
                d = r(77745),
                f = r(45879),
                p = r(54854),
                y = r(40589),
                g = r(50709),
                v = r(70494),
                E = r(10679),
                _ = r(97545);
            t.walletActions = function(e) {
                return {
                    addChain: t => (0, i.addChain)(e, t),
                    deployContract: t => (0, o.deployContract)(e, t),
                    getAddresses: () => (0, a.getAddresses)(e),
                    getChainId: () => (0, n.getChainId)(e),
                    getPermissions: () => (0, s.getPermissions)(e),
                    prepareTransactionRequest: t => (0, c.prepareTransactionRequest)(e, t),
                    requestAddresses: () => (0, u.requestAddresses)(e),
                    requestPermissions: t => (0, l.requestPermissions)(e, t),
                    sendRawTransaction: t => (0, d.sendRawTransaction)(e, t),
                    sendTransaction: t => (0, f.sendTransaction)(e, t),
                    signMessage: t => (0, p.signMessage)(e, t),
                    signTransaction: t => (0, y.signTransaction)(e, t),
                    signTypedData: t => (0, g.signTypedData)(e, t),
                    switchChain: t => (0, v.switchChain)(e, t),
                    watchAsset: t => (0, E.watchAsset)(e, t),
                    writeContract: t => (0, _.writeContract)(e, t)
                }
            }
        },
        78456: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.createTransport = void 0;
            let n = r(75238);
            t.createTransport = function({
                key: e,
                name: t,
                request: r,
                retryCount: i = 3,
                retryDelay: o = 150,
                timeout: a,
                type: s
            }, c) {
                return {
                    config: {
                        key: e,
                        name: t,
                        request: r,
                        retryCount: i,
                        retryDelay: o,
                        timeout: a,
                        type: s
                    },
                    request: (0, n.buildRequest)(r, {
                        retryCount: i,
                        retryDelay: o
                    }),
                    value: c
                }
            }
        },
        79243: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.custom = void 0;
            let n = r(78456);
            t.custom = function(e, t = {}) {
                let {
                    key: r = "custom",
                    name: i = "Custom Provider",
                    retryDelay: o
                } = t;
                return ({
                    retryCount: a
                }) => (0, n.createTransport)({
                    key: r,
                    name: i,
                    request: e.request.bind(e),
                    retryCount: t.retryCount ? ? a,
                    retryDelay: o,
                    type: "custom"
                })
            }
        },
        1282: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.rankTransports = t.fallback = void 0;
            let n = r(75238),
                i = r(99501),
                o = r(78456);

            function rankTransports({
                chain: e,
                interval: t = 4e3,
                onTransports: r,
                sampleCount: n = 10,
                timeout: o = 1e3,
                transports: a,
                weights: s = {}
            }) {
                let {
                    stability: c = .7,
                    latency: u = .3
                } = s, l = [], rankTransports_ = async () => {
                    let s = await Promise.all(a.map(async t => {
                        let r, n;
                        let i = t({
                                chain: e,
                                retryCount: 0,
                                timeout: o
                            }),
                            a = Date.now();
                        try {
                            await i.request({
                                method: "net_listening"
                            }), n = 1
                        } catch {
                            n = 0
                        } finally {
                            r = Date.now()
                        }
                        let s = r - a;
                        return {
                            latency: s,
                            success: n
                        }
                    }));
                    l.push(s), l.length > n && l.shift();
                    let d = Math.max(...l.map(e => Math.max(...e.map(({
                            latency: e
                        }) => e)))),
                        f = a.map((e, t) => {
                            let r = l.map(e => e[t].latency),
                                n = r.reduce((e, t) => e + t, 0) / r.length,
                                i = l.map(e => e[t].success),
                                o = i.reduce((e, t) => e + t, 0) / i.length;
                            return 0 === o ? [0, t] : [u * (1 - n / d) + c * o, t]
                        }).sort((e, t) => t[0] - e[0]);
                    r(f.map(([, e]) => a[e])), await (0, i.wait)(t), rankTransports_()
                };
                rankTransports_()
            }
            t.fallback = function(e, t = {}) {
                let {
                    key: r = "fallback",
                    name: i = "Fallback",
                    rank: a = !1,
                    retryCount: s,
                    retryDelay: c
                } = t;
                return ({
                    chain: t,
                    pollingInterval: u = 4e3,
                    timeout: l
                }) => {
                    let d = e,
                        onResponse = () => {},
                        f = (0, o.createTransport)({
                            key: r,
                            name: i,
                            async request({
                                method: e,
                                params: r
                            }) {
                                let fetch = async (i = 0) => {
                                    let o = d[i]({
                                        chain: t,
                                        retryCount: 0,
                                        timeout: l
                                    });
                                    try {
                                        let t = await o.request({
                                            method: e,
                                            params: r
                                        });
                                        return onResponse({
                                            method: e,
                                            params: r,
                                            response: t,
                                            transport: o,
                                            status: "success"
                                        }), t
                                    } catch (t) {
                                        if (onResponse({
                                                error: t,
                                                method: e,
                                                params: r,
                                                transport: o,
                                                status: "error"
                                            }), (0, n.isDeterministicError)(t) || i === d.length - 1) throw t;
                                        return fetch(i + 1)
                                    }
                                };
                                return fetch()
                            },
                            retryCount: s,
                            retryDelay: c,
                            type: "fallback"
                        }, {
                            onResponse: e => onResponse = e,
                            transports: d.map(e => e({
                                chain: t,
                                retryCount: 0
                            }))
                        });
                    if (a) {
                        let e = "object" == typeof a ? a : {};
                        rankTransports({
                            chain: t,
                            interval: e.interval ? ? u,
                            onTransports: e => d = e,
                            sampleCount: e.sampleCount,
                            timeout: e.timeout,
                            transports: d,
                            weights: e.weights
                        })
                    }
                    return f
                }
            }, t.rankTransports = rankTransports
        },
        43422: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.http = void 0;
            let n = r(58323),
                i = r(86388),
                o = r(1678),
                a = r(27658),
                s = r(78456);
            t.http = function(e, t = {}) {
                let {
                    batch: r,
                    fetchOptions: c,
                    key: u = "http",
                    name: l = "HTTP JSON-RPC",
                    retryDelay: d
                } = t;
                return ({
                    chain: f,
                    retryCount: p,
                    timeout: y
                }) => {
                    let {
                        batchSize: g = 1e3,
                        wait: v = 0
                    } = "object" == typeof r ? r : {}, E = t.retryCount ? ? p, _ = y ? ? t.timeout ? ? 1e4, P = e || f ? .rpcUrls.default.http[0];
                    if (!P) throw new i.UrlRequiredError;
                    return (0, s.createTransport)({
                        key: u,
                        name: l,
                        async request({
                            method: t,
                            params: i
                        }) {
                            let s = {
                                    method: t,
                                    params: i
                                },
                                {
                                    schedule: u
                                } = (0, o.createBatchScheduler)({
                                    id: `${e}`,
                                    wait: v,
                                    shouldSplitBatch: e => e.length > g,
                                    fn: e => a.rpc.http(P, {
                                        body: e,
                                        fetchOptions: c,
                                        timeout: _
                                    }),
                                    sort: (e, t) => e.id - t.id
                                }),
                                fn = async e => r ? u(e) : [await a.rpc.http(P, {
                                    body: e,
                                    fetchOptions: c,
                                    timeout: _
                                })],
                                [{
                                    error: l,
                                    result: d
                                }] = await fn(s);
                            if (l) throw new n.RpcRequestError({
                                body: s,
                                error: l,
                                url: P
                            });
                            return d
                        },
                        retryCount: E,
                        retryDelay: d,
                        timeout: _,
                        type: "http"
                    }, {
                        fetchOptions: c,
                        url: e
                    })
                }
            }
        },
        4807: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.webSocket = void 0;
            let n = r(58323),
                i = r(86388),
                o = r(27658),
                a = r(78456);
            t.webSocket = function(e, t = {}) {
                let {
                    key: r = "webSocket",
                    name: s = "WebSocket JSON-RPC",
                    retryDelay: c
                } = t;
                return ({
                    chain: u,
                    retryCount: l,
                    timeout: d
                }) => {
                    let f = t.retryCount ? ? l,
                        p = d ? ? t.timeout ? ? 1e4,
                        y = e || u ? .rpcUrls.default.webSocket ? .[0];
                    if (!y) throw new i.UrlRequiredError;
                    return (0, a.createTransport)({
                        key: r,
                        name: s,
                        async request({
                            method: e,
                            params: t
                        }) {
                            let r = {
                                    method: e,
                                    params: t
                                },
                                i = await (0, o.getSocket)(y),
                                {
                                    error: a,
                                    result: s
                                } = await o.rpc.webSocketAsync(i, {
                                    body: r,
                                    timeout: p
                                });
                            if (a) throw new n.RpcRequestError({
                                body: r,
                                error: a,
                                url: y
                            });
                            return s
                        },
                        retryCount: f,
                        retryDelay: c,
                        timeout: p,
                        type: "webSocket"
                    }, {
                        getSocket: () => (0, o.getSocket)(y),
                        async subscribe({
                            params: e,
                            onData: t,
                            onError: r
                        }) {
                            let n = await (0, o.getSocket)(y),
                                {
                                    result: i
                                } = await new Promise((i, a) => o.rpc.webSocket(n, {
                                    body: {
                                        method: "eth_subscribe",
                                        params: e
                                    },
                                    onResponse(e) {
                                        if (e.error) {
                                            a(e.error), r ? .(e.error);
                                            return
                                        }
                                        if ("number" == typeof e.id) {
                                            i(e);
                                            return
                                        }
                                        "eth_subscription" === e.method && t(e.params)
                                    }
                                }));
                            return {
                                subscriptionId: i,
                                unsubscribe: async () => new Promise(e => o.rpc.webSocket(n, {
                                    body: {
                                        method: "eth_unsubscribe",
                                        params: [i]
                                    },
                                    onResponse: e
                                }))
                            }
                        }
                    })
                }
            }
        },
        23757: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.universalSignatureValidatorAbi = t.smartAccountAbi = t.addressResolverAbi = t.textResolverAbi = t.universalResolverReverseAbi = t.universalResolverResolveAbi = t.multicall3Abi = void 0, t.multicall3Abi = [{
                inputs: [{
                    components: [{
                        name: "target",
                        type: "address"
                    }, {
                        name: "allowFailure",
                        type: "bool"
                    }, {
                        name: "callData",
                        type: "bytes"
                    }],
                    name: "calls",
                    type: "tuple[]"
                }],
                name: "aggregate3",
                outputs: [{
                    components: [{
                        name: "success",
                        type: "bool"
                    }, {
                        name: "returnData",
                        type: "bytes"
                    }],
                    name: "returnData",
                    type: "tuple[]"
                }],
                stateMutability: "view",
                type: "function"
            }];
            let r = [{
                inputs: [],
                name: "ResolverNotFound",
                type: "error"
            }, {
                inputs: [],
                name: "ResolverWildcardNotSupported",
                type: "error"
            }];
            t.universalResolverResolveAbi = [...r, {
                name: "resolve",
                type: "function",
                stateMutability: "view",
                inputs: [{
                    name: "name",
                    type: "bytes"
                }, {
                    name: "data",
                    type: "bytes"
                }],
                outputs: [{
                    name: "",
                    type: "bytes"
                }, {
                    name: "address",
                    type: "address"
                }]
            }], t.universalResolverReverseAbi = [...r, {
                name: "reverse",
                type: "function",
                stateMutability: "view",
                inputs: [{
                    type: "bytes",
                    name: "reverseName"
                }],
                outputs: [{
                    type: "string",
                    name: "resolvedName"
                }, {
                    type: "address",
                    name: "resolvedAddress"
                }, {
                    type: "address",
                    name: "reverseResolver"
                }, {
                    type: "address",
                    name: "resolver"
                }]
            }], t.textResolverAbi = [{
                name: "text",
                type: "function",
                stateMutability: "view",
                inputs: [{
                    name: "name",
                    type: "bytes32"
                }, {
                    name: "key",
                    type: "string"
                }],
                outputs: [{
                    name: "",
                    type: "string"
                }]
            }], t.addressResolverAbi = [{
                name: "addr",
                type: "function",
                stateMutability: "view",
                inputs: [{
                    name: "name",
                    type: "bytes32"
                }],
                outputs: [{
                    name: "",
                    type: "address"
                }]
            }, {
                name: "addr",
                type: "function",
                stateMutability: "view",
                inputs: [{
                    name: "name",
                    type: "bytes32"
                }, {
                    name: "coinType",
                    type: "uint256"
                }],
                outputs: [{
                    name: "",
                    type: "bytes"
                }]
            }], t.smartAccountAbi = [{
                name: "isValidSignature",
                type: "function",
                stateMutability: "view",
                inputs: [{
                    name: "hash",
                    type: "bytes32"
                }, {
                    name: "signature",
                    type: "bytes"
                }],
                outputs: [{
                    name: "",
                    type: "bytes4"
                }]
            }], t.universalSignatureValidatorAbi = [{
                inputs: [{
                    internalType: "address",
                    name: "_signer",
                    type: "address"
                }, {
                    internalType: "bytes32",
                    name: "_hash",
                    type: "bytes32"
                }, {
                    internalType: "bytes",
                    name: "_signature",
                    type: "bytes"
                }],
                stateMutability: "nonpayable",
                type: "constructor"
            }]
        },
        34854: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.zeroAddress = void 0, t.zeroAddress = "0x0000000000000000000000000000000000000000"
        },
        15014: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.zeroHash = void 0, t.zeroHash = "0x0000000000000000000000000000000000000000000000000000000000000000"
        },
        24018: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.aggregate3Signature = void 0, t.aggregate3Signature = "0x82ad56cb"
        },
        15765: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.universalSignatureValidatorByteCode = void 0, t.universalSignatureValidatorByteCode = "0x60806040523480156200001157600080fd5b50604051620007003803806200070083398101604081905262000034916200056f565b6000620000438484846200004f565b9050806000526001601ff35b600080846001600160a01b0316803b806020016040519081016040528181526000908060200190933c90507f6492649264926492649264926492649264926492649264926492649264926492620000a68462000451565b036200021f57600060608085806020019051810190620000c79190620005ce565b8651929550909350915060000362000192576000836001600160a01b031683604051620000f5919062000643565b6000604051808303816000865af19150503d806000811462000134576040519150601f19603f3d011682016040523d82523d6000602084013e62000139565b606091505b5050905080620001905760405162461bcd60e51b815260206004820152601e60248201527f5369676e617475726556616c696461746f723a206465706c6f796d656e74000060448201526064015b60405180910390fd5b505b604051630b135d3f60e11b808252906001600160a01b038a1690631626ba7e90620001c4908b90869060040162000661565b602060405180830381865afa158015620001e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200020891906200069d565b6001600160e01b031916149450505050506200044a565b805115620002b157604051630b135d3f60e11b808252906001600160a01b03871690631626ba7e9062000259908890889060040162000661565b602060405180830381865afa15801562000277573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200029d91906200069d565b6001600160e01b031916149150506200044a565b8251604114620003195760405162461bcd60e51b815260206004820152603a6024820152600080516020620006e083398151915260448201527f3a20696e76616c6964207369676e6174757265206c656e677468000000000000606482015260840162000187565b620003236200046b565b506020830151604080850151855186939260009185919081106200034b576200034b620006c9565b016020015160f81c9050601b81148015906200036b57508060ff16601c14155b15620003cf5760405162461bcd60e51b815260206004820152603b6024820152600080516020620006e083398151915260448201527f3a20696e76616c6964207369676e617475726520762076616c75650000000000606482015260840162000187565b6040805160008152602081018083528a905260ff83169181019190915260608101849052608081018390526001600160a01b038a169060019060a0016020604051602081039080840390855afa1580156200042e573d6000803e3d6000fd5b505050602060405103516001600160a01b031614955050505050505b9392505050565b60006020825110156200046357600080fd5b508051015190565b60405180606001604052806003906020820280368337509192915050565b6001600160a01b03811681146200049f57600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b60005b83811015620004d5578181015183820152602001620004bb565b50506000910152565b600082601f830112620004f057600080fd5b81516001600160401b03808211156200050d576200050d620004a2565b604051601f8301601f19908116603f01168101908282118183101715620005385762000538620004a2565b816040528381528660208588010111156200055257600080fd5b62000565846020830160208901620004b8565b9695505050505050565b6000806000606084860312156200058557600080fd5b8351620005928162000489565b6020850151604086015191945092506001600160401b03811115620005b657600080fd5b620005c486828701620004de565b9150509250925092565b600080600060608486031215620005e457600080fd5b8351620005f18162000489565b60208501519093506001600160401b03808211156200060f57600080fd5b6200061d87838801620004de565b935060408601519150808211156200063457600080fd5b50620005c486828701620004de565b6000825162000657818460208701620004b8565b9190910192915050565b828152604060208201526000825180604084015262000688816060850160208701620004b8565b601f01601f1916919091016060019392505050565b600060208284031215620006b057600080fd5b81516001600160e01b0319811681146200044a57600080fd5b634e487b7160e01b600052603260045260246000fdfe5369676e617475726556616c696461746f72237265636f7665725369676e6572"
        },
        92022: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.minInt144 = t.minInt136 = t.minInt128 = t.minInt120 = t.minInt112 = t.minInt104 = t.minInt96 = t.minInt88 = t.minInt80 = t.minInt72 = t.minInt64 = t.minInt56 = t.minInt48 = t.minInt40 = t.minInt32 = t.minInt24 = t.minInt16 = t.minInt8 = t.maxInt256 = t.maxInt248 = t.maxInt240 = t.maxInt232 = t.maxInt224 = t.maxInt216 = t.maxInt208 = t.maxInt200 = t.maxInt192 = t.maxInt184 = t.maxInt176 = t.maxInt168 = t.maxInt160 = t.maxInt152 = t.maxInt144 = t.maxInt136 = t.maxInt128 = t.maxInt120 = t.maxInt112 = t.maxInt104 = t.maxInt96 = t.maxInt88 = t.maxInt80 = t.maxInt72 = t.maxInt64 = t.maxInt56 = t.maxInt48 = t.maxInt40 = t.maxInt32 = t.maxInt24 = t.maxInt16 = t.maxInt8 = void 0, t.maxUint256 = t.maxUint248 = t.maxUint240 = t.maxUint232 = t.maxUint224 = t.maxUint216 = t.maxUint208 = t.maxUint200 = t.maxUint192 = t.maxUint184 = t.maxUint176 = t.maxUint168 = t.maxUint160 = t.maxUint152 = t.maxUint144 = t.maxUint136 = t.maxUint128 = t.maxUint120 = t.maxUint112 = t.maxUint104 = t.maxUint96 = t.maxUint88 = t.maxUint80 = t.maxUint72 = t.maxUint64 = t.maxUint56 = t.maxUint48 = t.maxUint40 = t.maxUint32 = t.maxUint24 = t.maxUint16 = t.maxUint8 = t.minInt256 = t.minInt248 = t.minInt240 = t.minInt232 = t.minInt224 = t.minInt216 = t.minInt208 = t.minInt200 = t.minInt192 = t.minInt184 = t.minInt176 = t.minInt168 = t.minInt160 = t.minInt152 = void 0, t.maxInt8 = 2 n ** (8 n - 1 n) - 1 n, t.maxInt16 = 2 n ** (16 n - 1 n) - 1 n, t.maxInt24 = 2 n ** (24 n - 1 n) - 1 n, t.maxInt32 = 2 n ** (32 n - 1 n) - 1 n, t.maxInt40 = 2 n ** (40 n - 1 n) - 1 n, t.maxInt48 = 2 n ** (48 n - 1 n) - 1 n, t.maxInt56 = 2 n ** (56 n - 1 n) - 1 n, t.maxInt64 = 2 n ** (64 n - 1 n) - 1 n, t.maxInt72 = 2 n ** (72 n - 1 n) - 1 n, t.maxInt80 = 2 n ** (80 n - 1 n) - 1 n, t.maxInt88 = 2 n ** (88 n - 1 n) - 1 n, t.maxInt96 = 2 n ** (96 n - 1 n) - 1 n, t.maxInt104 = 2 n ** (104 n - 1 n) - 1 n, t.maxInt112 = 2 n ** (112 n - 1 n) - 1 n, t.maxInt120 = 2 n ** (120 n - 1 n) - 1 n, t.maxInt128 = 2 n ** (128 n - 1 n) - 1 n, t.maxInt136 = 2 n ** (136 n - 1 n) - 1 n, t.maxInt144 = 2 n ** (144 n - 1 n) - 1 n, t.maxInt152 = 2 n ** (152 n - 1 n) - 1 n, t.maxInt160 = 2 n ** (160 n - 1 n) - 1 n, t.maxInt168 = 2 n ** (168 n - 1 n) - 1 n, t.maxInt176 = 2 n ** (176 n - 1 n) - 1 n, t.maxInt184 = 2 n ** (184 n - 1 n) - 1 n, t.maxInt192 = 2 n ** (192 n - 1 n) - 1 n, t.maxInt200 = 2 n ** (200 n - 1 n) - 1 n, t.maxInt208 = 2 n ** (208 n - 1 n) - 1 n, t.maxInt216 = 2 n ** (216 n - 1 n) - 1 n, t.maxInt224 = 2 n ** (224 n - 1 n) - 1 n, t.maxInt232 = 2 n ** (232 n - 1 n) - 1 n, t.maxInt240 = 2 n ** (240 n - 1 n) - 1 n, t.maxInt248 = 2 n ** (248 n - 1 n) - 1 n, t.maxInt256 = 2 n ** (256 n - 1 n) - 1 n, t.minInt8 = -(2 n ** (8 n - 1 n)), t.minInt16 = -(2 n ** (16 n - 1 n)), t.minInt24 = -(2 n ** (24 n - 1 n)), t.minInt32 = -(2 n ** (32 n - 1 n)), t.minInt40 = -(2 n ** (40 n - 1 n)), t.minInt48 = -(2 n ** (48 n - 1 n)), t.minInt56 = -(2 n ** (56 n - 1 n)), t.minInt64 = -(2 n ** (64 n - 1 n)), t.minInt72 = -(2 n ** (72 n - 1 n)), t.minInt80 = -(2 n ** (80 n - 1 n)), t.minInt88 = -(2 n ** (88 n - 1 n)), t.minInt96 = -(2 n ** (96 n - 1 n)), t.minInt104 = -(2 n ** (104 n - 1 n)), t.minInt112 = -(2 n ** (112 n - 1 n)), t.minInt120 = -(2 n ** (120 n - 1 n)), t.minInt128 = -(2 n ** (128 n - 1 n)), t.minInt136 = -(2 n ** (136 n - 1 n)), t.minInt144 = -(2 n ** (144 n - 1 n)), t.minInt152 = -(2 n ** (152 n - 1 n)), t.minInt160 = -(2 n ** (160 n - 1 n)), t.minInt168 = -(2 n ** (168 n - 1 n)), t.minInt176 = -(2 n ** (176 n - 1 n)), t.minInt184 = -(2 n ** (184 n - 1 n)), t.minInt192 = -(2 n ** (192 n - 1 n)), t.minInt200 = -(2 n ** (200 n - 1 n)), t.minInt208 = -(2 n ** (208 n - 1 n)), t.minInt216 = -(2 n ** (216 n - 1 n)), t.minInt224 = -(2 n ** (224 n - 1 n)), t.minInt232 = -(2 n ** (232 n - 1 n)), t.minInt240 = -(2 n ** (240 n - 1 n)), t.minInt248 = -(2 n ** (248 n - 1 n)), t.minInt256 = -(2 n ** (256 n - 1 n)), t.maxUint8 = 2 n ** 8 n - 1 n, t.maxUint16 = 2 n ** 16 n - 1 n, t.maxUint24 = 2 n ** 24 n - 1 n, t.maxUint32 = 2 n ** 32 n - 1 n, t.maxUint40 = 2 n ** 40 n - 1 n, t.maxUint48 = 2 n ** 48 n - 1 n, t.maxUint56 = 2 n ** 56 n - 1 n, t.maxUint64 = 2 n ** 64 n - 1 n, t.maxUint72 = 2 n ** 72 n - 1 n, t.maxUint80 = 2 n ** 80 n - 1 n, t.maxUint88 = 2 n ** 88 n - 1 n, t.maxUint96 = 2 n ** 96 n - 1 n, t.maxUint104 = 2 n ** 104 n - 1 n, t.maxUint112 = 2 n ** 112 n - 1 n, t.maxUint120 = 2 n ** 120 n - 1 n, t.maxUint128 = 2 n ** 128 n - 1 n, t.maxUint136 = 2 n ** 136 n - 1 n, t.maxUint144 = 2 n ** 144 n - 1 n, t.maxUint152 = 2 n ** 152 n - 1 n, t.maxUint160 = 2 n ** 160 n - 1 n, t.maxUint168 = 2 n ** 168 n - 1 n, t.maxUint176 = 2 n ** 176 n - 1 n, t.maxUint184 = 2 n ** 184 n - 1 n, t.maxUint192 = 2 n ** 192 n - 1 n, t.maxUint200 = 2 n ** 200 n - 1 n, t.maxUint208 = 2 n ** 208 n - 1 n, t.maxUint216 = 2 n ** 216 n - 1 n, t.maxUint224 = 2 n ** 224 n - 1 n, t.maxUint232 = 2 n ** 232 n - 1 n, t.maxUint240 = 2 n ** 240 n - 1 n, t.maxUint248 = 2 n ** 248 n - 1 n, t.maxUint256 = 2 n ** 256 n - 1 n
        },
        23056: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.solidityPanic = t.solidityError = t.panicReasons = void 0, t.panicReasons = {
                1: "An `assert` condition failed.",
                17: "Arithmic operation resulted in underflow or overflow.",
                18: "Division or modulo by zero (e.g. `5 / 0` or `23 % 0`).",
                33: "Attempted to convert to an invalid type.",
                34: "Attempted to access a storage byte array that is incorrectly encoded.",
                49: "Performed `.pop()` on an empty array",
                50: "Array index is out of bounds.",
                65: "Allocated too much memory or created an array which is too large.",
                81: "Attempted to call a zero-initialized variable of internal function type."
            }, t.solidityError = {
                inputs: [{
                    name: "message",
                    type: "string"
                }],
                name: "Error",
                type: "error"
            }, t.solidityPanic = {
                inputs: [{
                    name: "reason",
                    type: "uint256"
                }],
                name: "Panic",
                type: "error"
            }
        },
        39173: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.presignMessagePrefix = void 0, t.presignMessagePrefix = "\x19Ethereum Signed Message:\n"
        },
        49955: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.weiUnits = t.gweiUnits = t.etherUnits = void 0, t.etherUnits = {
                gwei: 9,
                wei: 18
            }, t.gweiUnits = {
                ether: -9,
                wei: 9
            }, t.weiUnits = {
                ether: -18,
                gwei: -9
            }
        },
        31480: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.UnsupportedPackedAbiType = t.InvalidDefinitionTypeError = t.InvalidArrayError = t.InvalidAbiDecodingTypeError = t.InvalidAbiEncodingTypeError = t.DecodeLogTopicsMismatch = t.DecodeLogDataMismatch = t.BytesSizeMismatchError = t.AbiFunctionSignatureNotFoundError = t.AbiFunctionOutputsNotFoundError = t.AbiFunctionNotFoundError = t.AbiEventNotFoundError = t.AbiEventSignatureNotFoundError = t.AbiEventSignatureEmptyTopicsError = t.AbiErrorSignatureNotFoundError = t.AbiErrorNotFoundError = t.AbiErrorInputsNotFoundError = t.AbiEncodingLengthMismatchError = t.AbiEncodingBytesSizeMismatchError = t.AbiEncodingArrayLengthMismatchError = t.AbiDecodingZeroDataError = t.AbiDecodingDataSizeTooSmallError = t.AbiDecodingDataSizeInvalidError = t.AbiConstructorParamsNotFoundError = t.AbiConstructorNotFoundError = void 0;
            let n = r(32901),
                i = r(93071),
                o = r(9537);
            let AbiConstructorNotFoundError = class AbiConstructorNotFoundError extends o.BaseError {
                constructor({
                    docsPath: e
                }) {
                    super("A constructor was not found on the ABI.\nMake sure you are using the correct ABI and that the constructor exists on it.", {
                        docsPath: e
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "AbiConstructorNotFoundError"
                    })
                }
            };
            t.AbiConstructorNotFoundError = AbiConstructorNotFoundError;
            let AbiConstructorParamsNotFoundError = class AbiConstructorParamsNotFoundError extends o.BaseError {
                constructor({
                    docsPath: e
                }) {
                    super("Constructor arguments were provided (`args`), but a constructor parameters (`inputs`) were not found on the ABI.\nMake sure you are using the correct ABI, and that the `inputs` attribute on the constructor exists.", {
                        docsPath: e
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "AbiConstructorParamsNotFoundError"
                    })
                }
            };
            t.AbiConstructorParamsNotFoundError = AbiConstructorParamsNotFoundError;
            let AbiDecodingDataSizeInvalidError = class AbiDecodingDataSizeInvalidError extends o.BaseError {
                constructor({
                    data: e,
                    size: t
                }) {
                    super(`Data size of ${t} bytes is invalid.
Size must be in increments of 32 bytes (size % 32 === 0).`, {
                        metaMessages: [`Data: ${e} (${t} bytes)`]
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "AbiDecodingDataSizeInvalidError"
                    })
                }
            };
            t.AbiDecodingDataSizeInvalidError = AbiDecodingDataSizeInvalidError;
            let AbiDecodingDataSizeTooSmallError = class AbiDecodingDataSizeTooSmallError extends o.BaseError {
                constructor({
                    data: e,
                    params: t,
                    size: r
                }) {
                    super(`Data size of ${r} bytes is too small for given parameters.`, {
                        metaMessages: [`Params: (${(0,n.formatAbiParams)(t,{includeName:!0})})`, `Data:   ${e} (${r} bytes)`]
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "AbiDecodingDataSizeTooSmallError"
                    }), Object.defineProperty(this, "data", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "params", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "size", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), this.data = e, this.params = t, this.size = r
                }
            };
            t.AbiDecodingDataSizeTooSmallError = AbiDecodingDataSizeTooSmallError;
            let AbiDecodingZeroDataError = class AbiDecodingZeroDataError extends o.BaseError {
                constructor() {
                    super('Cannot decode zero data ("0x") with ABI parameters.'), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "AbiDecodingZeroDataError"
                    })
                }
            };
            t.AbiDecodingZeroDataError = AbiDecodingZeroDataError;
            let AbiEncodingArrayLengthMismatchError = class AbiEncodingArrayLengthMismatchError extends o.BaseError {
                constructor({
                    expectedLength: e,
                    givenLength: t,
                    type: r
                }) {
                    super(`ABI encoding array length mismatch for type ${r}.
Expected length: ${e}
Given length: ${t}`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "AbiEncodingArrayLengthMismatchError"
                    })
                }
            };
            t.AbiEncodingArrayLengthMismatchError = AbiEncodingArrayLengthMismatchError;
            let AbiEncodingBytesSizeMismatchError = class AbiEncodingBytesSizeMismatchError extends o.BaseError {
                constructor({
                    expectedSize: e,
                    value: t
                }) {
                    super(`Size of bytes "${t}" (bytes${(0,i.size)(t)}) does not match expected size (bytes${e}).`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "AbiEncodingBytesSizeMismatchError"
                    })
                }
            };
            t.AbiEncodingBytesSizeMismatchError = AbiEncodingBytesSizeMismatchError;
            let AbiEncodingLengthMismatchError = class AbiEncodingLengthMismatchError extends o.BaseError {
                constructor({
                    expectedLength: e,
                    givenLength: t
                }) {
                    super(`ABI encoding params/values length mismatch.
Expected length (params): ${e}
Given length (values): ${t}`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "AbiEncodingLengthMismatchError"
                    })
                }
            };
            t.AbiEncodingLengthMismatchError = AbiEncodingLengthMismatchError;
            let AbiErrorInputsNotFoundError = class AbiErrorInputsNotFoundError extends o.BaseError {
                constructor(e, {
                    docsPath: t
                }) {
                    super(`Arguments (\`args\`) were provided to "${e}", but "${e}" on the ABI does not contain any parameters (\`inputs\`).
Cannot encode error result without knowing what the parameter types are.
Make sure you are using the correct ABI and that the inputs exist on it.`, {
                        docsPath: t
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "AbiErrorInputsNotFoundError"
                    })
                }
            };
            t.AbiErrorInputsNotFoundError = AbiErrorInputsNotFoundError;
            let AbiErrorNotFoundError = class AbiErrorNotFoundError extends o.BaseError {
                constructor(e, {
                    docsPath: t
                } = {}) {
                    super(`Error ${e?`"${e}" `:""}not found on ABI.
Make sure you are using the correct ABI and that the error exists on it.`, {
                        docsPath: t
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "AbiErrorNotFoundError"
                    })
                }
            };
            t.AbiErrorNotFoundError = AbiErrorNotFoundError;
            let AbiErrorSignatureNotFoundError = class AbiErrorSignatureNotFoundError extends o.BaseError {
                constructor(e, {
                    docsPath: t
                }) {
                    super(`Encoded error signature "${e}" not found on ABI.
Make sure you are using the correct ABI and that the error exists on it.
You can look up the decoded signature here: https://openchain.xyz/signatures?query=${e}.`, {
                        docsPath: t
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "AbiErrorSignatureNotFoundError"
                    }), Object.defineProperty(this, "signature", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), this.signature = e
                }
            };
            t.AbiErrorSignatureNotFoundError = AbiErrorSignatureNotFoundError;
            let AbiEventSignatureEmptyTopicsError = class AbiEventSignatureEmptyTopicsError extends o.BaseError {
                constructor({
                    docsPath: e
                }) {
                    super("Cannot extract event signature from empty topics.", {
                        docsPath: e
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "AbiEventSignatureEmptyTopicsError"
                    })
                }
            };
            t.AbiEventSignatureEmptyTopicsError = AbiEventSignatureEmptyTopicsError;
            let AbiEventSignatureNotFoundError = class AbiEventSignatureNotFoundError extends o.BaseError {
                constructor(e, {
                    docsPath: t
                }) {
                    super(`Encoded event signature "${e}" not found on ABI.
Make sure you are using the correct ABI and that the event exists on it.
You can look up the signature here: https://openchain.xyz/signatures?query=${e}.`, {
                        docsPath: t
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "AbiEventSignatureNotFoundError"
                    })
                }
            };
            t.AbiEventSignatureNotFoundError = AbiEventSignatureNotFoundError;
            let AbiEventNotFoundError = class AbiEventNotFoundError extends o.BaseError {
                constructor(e, {
                    docsPath: t
                } = {}) {
                    super(`Event ${e?`"${e}" `:""}not found on ABI.
Make sure you are using the correct ABI and that the event exists on it.`, {
                        docsPath: t
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "AbiEventNotFoundError"
                    })
                }
            };
            t.AbiEventNotFoundError = AbiEventNotFoundError;
            let AbiFunctionNotFoundError = class AbiFunctionNotFoundError extends o.BaseError {
                constructor(e, {
                    docsPath: t
                } = {}) {
                    super(`Function ${e?`"${e}" `:""}not found on ABI.
Make sure you are using the correct ABI and that the function exists on it.`, {
                        docsPath: t
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "AbiFunctionNotFoundError"
                    })
                }
            };
            t.AbiFunctionNotFoundError = AbiFunctionNotFoundError;
            let AbiFunctionOutputsNotFoundError = class AbiFunctionOutputsNotFoundError extends o.BaseError {
                constructor(e, {
                    docsPath: t
                }) {
                    super(`Function "${e}" does not contain any \`outputs\` on ABI.
Cannot decode function result without knowing what the parameter types are.
Make sure you are using the correct ABI and that the function exists on it.`, {
                        docsPath: t
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "AbiFunctionOutputsNotFoundError"
                    })
                }
            };
            t.AbiFunctionOutputsNotFoundError = AbiFunctionOutputsNotFoundError;
            let AbiFunctionSignatureNotFoundError = class AbiFunctionSignatureNotFoundError extends o.BaseError {
                constructor(e, {
                    docsPath: t
                }) {
                    super(`Encoded function signature "${e}" not found on ABI.
Make sure you are using the correct ABI and that the function exists on it.
You can look up the signature here: https://openchain.xyz/signatures?query=${e}.`, {
                        docsPath: t
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "AbiFunctionSignatureNotFoundError"
                    })
                }
            };
            t.AbiFunctionSignatureNotFoundError = AbiFunctionSignatureNotFoundError;
            let BytesSizeMismatchError = class BytesSizeMismatchError extends o.BaseError {
                constructor({
                    expectedSize: e,
                    givenSize: t
                }) {
                    super(`Expected bytes${e}, got bytes${t}.`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "BytesSizeMismatchError"
                    })
                }
            };
            t.BytesSizeMismatchError = BytesSizeMismatchError;
            let DecodeLogDataMismatch = class DecodeLogDataMismatch extends o.BaseError {
                constructor({
                    abiItem: e,
                    data: t,
                    params: r,
                    size: i
                }) {
                    super(`Data size of ${i} bytes is too small for non-indexed event parameters.`, {
                        metaMessages: [`Params: (${(0,n.formatAbiParams)(r,{includeName:!0})})`, `Data:   ${t} (${i} bytes)`]
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "DecodeLogDataMismatch"
                    }), Object.defineProperty(this, "abiItem", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "data", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "params", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "size", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), this.abiItem = e, this.data = t, this.params = r, this.size = i
                }
            };
            t.DecodeLogDataMismatch = DecodeLogDataMismatch;
            let DecodeLogTopicsMismatch = class DecodeLogTopicsMismatch extends o.BaseError {
                constructor({
                    abiItem: e,
                    param: t
                }) {
                    super(`Expected a topic for indexed event parameter${t.name?` "${t.name}"`:""} on event "${(0,n.formatAbiItem)(e,{includeName:!0})}".`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "DecodeLogTopicsMismatch"
                    }), Object.defineProperty(this, "abiItem", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), this.abiItem = e
                }
            };
            t.DecodeLogTopicsMismatch = DecodeLogTopicsMismatch;
            let InvalidAbiEncodingTypeError = class InvalidAbiEncodingTypeError extends o.BaseError {
                constructor(e, {
                    docsPath: t
                }) {
                    super(`Type "${e}" is not a valid encoding type.
Please provide a valid ABI type.`, {
                        docsPath: t
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidAbiEncodingType"
                    })
                }
            };
            t.InvalidAbiEncodingTypeError = InvalidAbiEncodingTypeError;
            let InvalidAbiDecodingTypeError = class InvalidAbiDecodingTypeError extends o.BaseError {
                constructor(e, {
                    docsPath: t
                }) {
                    super(`Type "${e}" is not a valid decoding type.
Please provide a valid ABI type.`, {
                        docsPath: t
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidAbiDecodingType"
                    })
                }
            };
            t.InvalidAbiDecodingTypeError = InvalidAbiDecodingTypeError;
            let InvalidArrayError = class InvalidArrayError extends o.BaseError {
                constructor(e) {
                    super(`Value "${e}" is not a valid array.`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidArrayError"
                    })
                }
            };
            t.InvalidArrayError = InvalidArrayError;
            let InvalidDefinitionTypeError = class InvalidDefinitionTypeError extends o.BaseError {
                constructor(e) {
                    super(`"${e}" is not a valid definition type.
Valid types: "function", "event", "error"`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidDefinitionTypeError"
                    })
                }
            };
            t.InvalidDefinitionTypeError = InvalidDefinitionTypeError;
            let UnsupportedPackedAbiType = class UnsupportedPackedAbiType extends o.BaseError {
                constructor(e) {
                    super(`Type "${e}" is not supported for packed encoding.`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "UnsupportedPackedAbiType"
                    })
                }
            };
            t.UnsupportedPackedAbiType = UnsupportedPackedAbiType
        },
        53093: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.AccountNotFoundError = void 0;
            let n = r(9537);
            let AccountNotFoundError = class AccountNotFoundError extends n.BaseError {
                constructor({
                    docsPath: e
                } = {}) {
                    super("Could not find an Account to execute with this Action.\nPlease provide an Account with the `account` argument on the Action, or by supplying an `account` to the WalletClient.", {
                        docsPath: e,
                        docsSlug: "account"
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "AccountNotFoundError"
                    })
                }
            };
            t.AccountNotFoundError = AccountNotFoundError
        },
        90874: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.InvalidAddressError = void 0;
            let n = r(9537);
            let InvalidAddressError = class InvalidAddressError extends n.BaseError {
                constructor({
                    address: e
                }) {
                    super(`Address "${e}" is invalid.`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidAddressError"
                    })
                }
            };
            t.InvalidAddressError = InvalidAddressError
        },
        9537: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.BaseError = void 0;
            let n = r(41397);
            let BaseError = class BaseError extends Error {
                constructor(e, t = {}) {
                    super(), Object.defineProperty(this, "details", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "docsPath", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "metaMessages", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "shortMessage", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "ViemError"
                    }), Object.defineProperty(this, "version", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: (0, n.getVersion)()
                    });
                    let r = t.cause instanceof BaseError ? t.cause.details : t.cause ? .message ? t.cause.message : t.details,
                        i = t.cause instanceof BaseError && t.cause.docsPath || t.docsPath;
                    this.message = [e || "An error occurred.", "", ...t.metaMessages ? [...t.metaMessages, ""] : [], ...i ? [`Docs: https://viem.sh${i}.html${t.docsSlug?`#${t.docsSlug}`:""}`] : [], ...r ? [`Details: ${r}`] : [], `Version: ${this.version}`].join("\n"), t.cause && (this.cause = t.cause), this.details = r, this.docsPath = i, this.metaMessages = t.metaMessages, this.shortMessage = e
                }
                walk(e) {
                    return function walk(e, t) {
                        return t ? .(e) ? e : e && "object" == typeof e && "cause" in e ? walk(e.cause, t) : t ? null : e
                    }(this, e)
                }
            };
            t.BaseError = BaseError
        },
        28396: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.BlockNotFoundError = void 0;
            let n = r(9537);
            let BlockNotFoundError = class BlockNotFoundError extends n.BaseError {
                constructor({
                    blockHash: e,
                    blockNumber: t
                }) {
                    let r = "Block";
                    e && (r = `Block at hash "${e}"`), t && (r = `Block at number "${t}"`), super(`${r} could not be found.`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "BlockNotFoundError"
                    })
                }
            };
            t.BlockNotFoundError = BlockNotFoundError
        },
        64039: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.OffchainLookupSenderMismatchError = t.OffchainLookupResponseMalformedError = t.OffchainLookupError = void 0;
            let n = r(42701),
                i = r(9537),
                o = r(41397);
            let OffchainLookupError = class OffchainLookupError extends i.BaseError {
                constructor({
                    callbackSelector: e,
                    cause: t,
                    data: r,
                    extraData: n,
                    sender: i,
                    urls: a
                }) {
                    super(t.shortMessage || "An error occurred while fetching for an offchain result.", {
                        cause: t,
                        metaMessages: [...t.metaMessages || [], t.metaMessages ? .length ? "" : [], "Offchain Gateway Call:", a && ["  Gateway URL(s):", ...a.map(e => `    ${(0,o.getUrl)(e)}`)], `  Sender: ${i}`, `  Data: ${r}`, `  Callback selector: ${e}`, `  Extra data: ${n}`].flat()
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "OffchainLookupError"
                    })
                }
            };
            t.OffchainLookupError = OffchainLookupError;
            let OffchainLookupResponseMalformedError = class OffchainLookupResponseMalformedError extends i.BaseError {
                constructor({
                    result: e,
                    url: t
                }) {
                    super("Offchain gateway response is malformed. Response data must be a hex value.", {
                        metaMessages: [`Gateway URL: ${(0,o.getUrl)(t)}`, `Response: ${(0,n.stringify)(e)}`]
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "OffchainLookupResponseMalformedError"
                    })
                }
            };
            t.OffchainLookupResponseMalformedError = OffchainLookupResponseMalformedError;
            let OffchainLookupSenderMismatchError = class OffchainLookupSenderMismatchError extends i.BaseError {
                constructor({
                    sender: e,
                    to: t
                }) {
                    super("Reverted sender address does not match target contract address (`to`).", {
                        metaMessages: [`Contract address: ${t}`, `OffchainLookup sender address: ${e}`]
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "OffchainLookupSenderMismatchError"
                    })
                }
            };
            t.OffchainLookupSenderMismatchError = OffchainLookupSenderMismatchError
        },
        95047: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.InvalidChainIdError = t.ClientChainNotConfiguredError = t.ChainNotFoundError = t.ChainMismatchError = t.ChainDoesNotSupportContract = void 0;
            let n = r(9537);
            let ChainDoesNotSupportContract = class ChainDoesNotSupportContract extends n.BaseError {
                constructor({
                    blockNumber: e,
                    chain: t,
                    contract: r
                }) {
                    super(`Chain "${t.name}" does not support contract "${r.name}".`, {
                        metaMessages: ["This could be due to any of the following:", ...e && r.blockCreated && r.blockCreated > e ? [`- The contract "${r.name}" was not deployed until block ${r.blockCreated} (current block ${e}).`] : [`- The chain does not have the contract "${r.name}" configured.`]]
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "ChainDoesNotSupportContract"
                    })
                }
            };
            t.ChainDoesNotSupportContract = ChainDoesNotSupportContract;
            let ChainMismatchError = class ChainMismatchError extends n.BaseError {
                constructor({
                    chain: e,
                    currentChainId: t
                }) {
                    super(`The current chain of the wallet (id: ${t}) does not match the target chain for the transaction (id: ${e.id} – ${e.name}).`, {
                        metaMessages: [`Current Chain ID:  ${t}`, `Expected Chain ID: ${e.id} – ${e.name}`]
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "ChainMismatchError"
                    })
                }
            };
            t.ChainMismatchError = ChainMismatchError;
            let ChainNotFoundError = class ChainNotFoundError extends n.BaseError {
                constructor() {
                    super("No chain was provided to the request.\nPlease provide a chain with the `chain` argument on the Action, or by supplying a `chain` to WalletClient."), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "ChainNotFoundError"
                    })
                }
            };
            t.ChainNotFoundError = ChainNotFoundError;
            let ClientChainNotConfiguredError = class ClientChainNotConfiguredError extends n.BaseError {
                constructor() {
                    super("No chain was provided to the Client."), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "ClientChainNotConfiguredError"
                    })
                }
            };
            t.ClientChainNotConfiguredError = ClientChainNotConfiguredError;
            let InvalidChainIdError = class InvalidChainIdError extends n.BaseError {
                constructor({
                    chainId: e
                }) {
                    super(`Chain ID "${e}" is invalid.`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidChainIdError"
                    })
                }
            };
            t.InvalidChainIdError = InvalidChainIdError
        },
        32405: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.RawContractError = t.ContractFunctionZeroDataError = t.ContractFunctionRevertedError = t.ContractFunctionExecutionError = t.CallExecutionError = void 0;
            let n = r(9783),
                i = r(23056),
                o = r(55865),
                a = r(32901),
                s = r(82865),
                c = r(33493),
                u = r(53711),
                l = r(14958),
                d = r(31480),
                f = r(9537),
                p = r(65750),
                y = r(41397);
            let CallExecutionError = class CallExecutionError extends f.BaseError {
                constructor(e, {
                    account: t,
                    docsPath: r,
                    chain: i,
                    data: o,
                    gas: a,
                    gasPrice: s,
                    maxFeePerGas: c,
                    maxPriorityFeePerGas: d,
                    nonce: f,
                    to: y,
                    value: g
                }) {
                    let v = t ? (0, n.parseAccount)(t) : void 0,
                        E = (0, p.prettyPrint)({
                            from: v ? .address,
                            to: y,
                            value: void 0 !== g && `${(0,u.formatEther)(g)} ${i?.nativeCurrency?.symbol||"ETH"}`,
                            data: o,
                            gas: a,
                            gasPrice: void 0 !== s && `${(0,l.formatGwei)(s)} gwei`,
                            maxFeePerGas: void 0 !== c && `${(0,l.formatGwei)(c)} gwei`,
                            maxPriorityFeePerGas: void 0 !== d && `${(0,l.formatGwei)(d)} gwei`,
                            nonce: f
                        });
                    super(e.shortMessage, {
                        cause: e,
                        docsPath: r,
                        metaMessages: [...e.metaMessages ? [...e.metaMessages, " "] : [], "Raw Call Arguments:", E].filter(Boolean)
                    }), Object.defineProperty(this, "cause", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "CallExecutionError"
                    }), this.cause = e
                }
            };
            t.CallExecutionError = CallExecutionError;
            let ContractFunctionExecutionError = class ContractFunctionExecutionError extends f.BaseError {
                constructor(e, {
                    abi: t,
                    args: r,
                    contractAddress: n,
                    docsPath: i,
                    functionName: o,
                    sender: u
                }) {
                    let l = (0, c.getAbiItem)({
                            abi: t,
                            args: r,
                            name: o
                        }),
                        d = l ? (0, s.formatAbiItemWithArgs)({
                            abiItem: l,
                            args: r,
                            includeFunctionName: !1,
                            includeName: !1
                        }) : void 0,
                        f = l ? (0, a.formatAbiItem)(l, {
                            includeName: !0
                        }) : void 0,
                        g = (0, p.prettyPrint)({
                            address: n && (0, y.getContractAddress)(n),
                            function: f,
                            args: d && "()" !== d && `${[...Array(o?.length??0).keys()].map(()=>" ").join("")}${d}`,
                            sender: u
                        });
                    super(e.shortMessage || `An unknown error occurred while executing the contract function "${o}".`, {
                        cause: e,
                        docsPath: i,
                        metaMessages: [...e.metaMessages ? [...e.metaMessages, " "] : [], "Contract Call:", g].filter(Boolean)
                    }), Object.defineProperty(this, "abi", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "args", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "cause", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "contractAddress", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "formattedArgs", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "functionName", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "sender", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "ContractFunctionExecutionError"
                    }), this.abi = t, this.args = r, this.cause = e, this.contractAddress = n, this.functionName = o, this.sender = u
                }
            };
            t.ContractFunctionExecutionError = ContractFunctionExecutionError;
            let ContractFunctionRevertedError = class ContractFunctionRevertedError extends f.BaseError {
                constructor({
                    abi: e,
                    data: t,
                    functionName: r,
                    message: n
                }) {
                    let c, u, l, f, p;
                    if (t && "0x" !== t) try {
                        p = (0, o.decodeErrorResult)({
                            abi: e,
                            data: t
                        });
                        let {
                            abiItem: r,
                            errorName: n,
                            args: c
                        } = p;
                        if ("Error" === n) l = c[0];
                        else if ("Panic" === n) {
                            let [e] = c;
                            l = i.panicReasons[e]
                        } else {
                            let e = r ? (0, a.formatAbiItem)(r, {
                                    includeName: !0
                                }) : void 0,
                                t = r && c ? (0, s.formatAbiItemWithArgs)({
                                    abiItem: r,
                                    args: c,
                                    includeFunctionName: !1,
                                    includeName: !1
                                }) : void 0;
                            u = [e ? `Error: ${e}` : "", t && "()" !== t ? `       ${[...Array(n?.length??0).keys()].map(()=>" ").join("")}${t}` : ""]
                        }
                    } catch (e) {
                        c = e
                    } else n && (l = n);
                    c instanceof d.AbiErrorSignatureNotFoundError && (f = c.signature, u = [`Unable to decode signature "${f}" as it was not found on the provided ABI.`, "Make sure you are using the correct ABI and that the error exists on it.", `You can look up the decoded signature here: https://openchain.xyz/signatures?query=${f}.`]), super(l && "execution reverted" !== l || f ? [`The contract function "${r}" reverted with the following ${f?"signature":"reason"}:`, l || f].join("\n") : `The contract function "${r}" reverted.`, {
                        cause: c,
                        metaMessages: u
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "ContractFunctionRevertedError"
                    }), Object.defineProperty(this, "data", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "reason", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "signature", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), this.data = p, this.reason = l, this.signature = f
                }
            };
            t.ContractFunctionRevertedError = ContractFunctionRevertedError;
            let ContractFunctionZeroDataError = class ContractFunctionZeroDataError extends f.BaseError {
                constructor({
                    functionName: e
                }) {
                    super(`The contract function "${e}" returned no data ("0x").`, {
                        metaMessages: ["This could be due to any of the following:", `  - The contract does not have the function "${e}",`, "  - The parameters passed to the contract function may be invalid, or", "  - The address is not a contract."]
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "ContractFunctionZeroDataError"
                    })
                }
            };
            t.ContractFunctionZeroDataError = ContractFunctionZeroDataError;
            let RawContractError = class RawContractError extends f.BaseError {
                constructor({
                    data: e,
                    message: t
                }) {
                    super(t || ""), Object.defineProperty(this, "code", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: 3
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "RawContractError"
                    }), Object.defineProperty(this, "data", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), this.data = e
                }
            };
            t.RawContractError = RawContractError
        },
        15169: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.PositionOutOfBoundsError = t.NegativeOffsetError = void 0;
            let n = r(9537);
            let NegativeOffsetError = class NegativeOffsetError extends n.BaseError {
                constructor({
                    offset: e
                }) {
                    super(`Offset \`${e}\` cannot be negative.`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "NegativeOffsetError"
                    })
                }
            };
            t.NegativeOffsetError = NegativeOffsetError;
            let PositionOutOfBoundsError = class PositionOutOfBoundsError extends n.BaseError {
                constructor({
                    length: e,
                    position: t
                }) {
                    super(`Position \`${t}\` is out of bounds (\`0 < position < ${e}\`).`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "PositionOutOfBoundsError"
                    })
                }
            };
            t.PositionOutOfBoundsError = PositionOutOfBoundsError
        },
        47037: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.SizeExceedsPaddingSizeError = t.SliceOffsetOutOfBoundsError = void 0;
            let n = r(9537);
            let SliceOffsetOutOfBoundsError = class SliceOffsetOutOfBoundsError extends n.BaseError {
                constructor({
                    offset: e,
                    position: t,
                    size: r
                }) {
                    super(`Slice ${"start"===t?"starting":"ending"} at offset "${e}" is out-of-bounds (size: ${r}).`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "SliceOffsetOutOfBoundsError"
                    })
                }
            };
            t.SliceOffsetOutOfBoundsError = SliceOffsetOutOfBoundsError;
            let SizeExceedsPaddingSizeError = class SizeExceedsPaddingSizeError extends n.BaseError {
                constructor({
                    size: e,
                    targetSize: t,
                    type: r
                }) {
                    super(`${r.charAt(0).toUpperCase()}${r.slice(1).toLowerCase()} size (${e}) exceeds padding size (${t}).`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "SizeExceedsPaddingSizeError"
                    })
                }
            };
            t.SizeExceedsPaddingSizeError = SizeExceedsPaddingSizeError
        },
        44225: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.SizeOverflowError = t.OffsetOutOfBoundsError = t.InvalidHexValueError = t.InvalidHexBooleanError = t.InvalidBytesBooleanError = t.IntegerOutOfRangeError = t.DataLengthTooShortError = t.DataLengthTooLongError = void 0;
            let n = r(9537);
            let DataLengthTooLongError = class DataLengthTooLongError extends n.BaseError {
                constructor({
                    consumed: e,
                    length: t
                }) {
                    super(`Consumed bytes (${e}) is shorter than data length (${t-1}).`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "DataLengthTooLongError"
                    })
                }
            };
            t.DataLengthTooLongError = DataLengthTooLongError;
            let DataLengthTooShortError = class DataLengthTooShortError extends n.BaseError {
                constructor({
                    length: e,
                    dataLength: t
                }) {
                    super(`Data length (${t-1}) is shorter than consumed bytes length (${e-1}).`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "DataLengthTooShortError"
                    })
                }
            };
            t.DataLengthTooShortError = DataLengthTooShortError;
            let IntegerOutOfRangeError = class IntegerOutOfRangeError extends n.BaseError {
                constructor({
                    max: e,
                    min: t,
                    signed: r,
                    size: n,
                    value: i
                }) {
                    super(`Number "${i}" is not in safe ${n?`${8*n}-bit ${r?"signed":"unsigned"} `:""}integer range ${e?`(${t} to ${e})`:`(above ${t})`}`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "IntegerOutOfRangeError"
                    })
                }
            };
            t.IntegerOutOfRangeError = IntegerOutOfRangeError;
            let InvalidBytesBooleanError = class InvalidBytesBooleanError extends n.BaseError {
                constructor(e) {
                    super(`Bytes value "${e}" is not a valid boolean. The bytes array must contain a single byte of either a 0 or 1 value.`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidBytesBooleanError"
                    })
                }
            };
            t.InvalidBytesBooleanError = InvalidBytesBooleanError;
            let InvalidHexBooleanError = class InvalidHexBooleanError extends n.BaseError {
                constructor(e) {
                    super(`Hex value "${e}" is not a valid boolean. The hex value must be "0x0" (false) or "0x1" (true).`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidHexBooleanError"
                    })
                }
            };
            t.InvalidHexBooleanError = InvalidHexBooleanError;
            let InvalidHexValueError = class InvalidHexValueError extends n.BaseError {
                constructor(e) {
                    super(`Hex value "${e}" is an odd length (${e.length}). It must be an even length.`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidHexValueError"
                    })
                }
            };
            t.InvalidHexValueError = InvalidHexValueError;
            let OffsetOutOfBoundsError = class OffsetOutOfBoundsError extends n.BaseError {
                constructor({
                    nextOffset: e,
                    offset: t
                }) {
                    super(`Next offset (${e}) is greater than previous offset + consumed bytes (${t})`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "OffsetOutOfBoundsError"
                    })
                }
            };
            t.OffsetOutOfBoundsError = OffsetOutOfBoundsError;
            let SizeOverflowError = class SizeOverflowError extends n.BaseError {
                constructor({
                    givenSize: e,
                    maxSize: t
                }) {
                    super(`Size cannot exceed ${t} bytes. Given size: ${e} bytes.`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "SizeOverflowError"
                    })
                }
            };
            t.SizeOverflowError = SizeOverflowError
        },
        4836: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.EnsAvatarUnsupportedNamespaceError = t.EnsAvatarUriResolutionError = t.EnsAvatarInvalidNftUriError = t.EnsAvatarInvalidMetadataError = void 0;
            let n = r(9537);
            let EnsAvatarInvalidMetadataError = class EnsAvatarInvalidMetadataError extends n.BaseError {
                constructor({
                    data: e
                }) {
                    super("Unable to extract image from metadata. The metadata may be malformed or invalid.", {
                        metaMessages: ["- Metadata must be a JSON object with at least an `image`, `image_url` or `image_data` property.", "", `Provided data: ${JSON.stringify(e)}`]
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "EnsAvatarInvalidMetadataError"
                    })
                }
            };
            t.EnsAvatarInvalidMetadataError = EnsAvatarInvalidMetadataError;
            let EnsAvatarInvalidNftUriError = class EnsAvatarInvalidNftUriError extends n.BaseError {
                constructor({
                    reason: e
                }) {
                    super(`ENS NFT avatar URI is invalid. ${e}`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "EnsAvatarInvalidNftUriError"
                    })
                }
            };
            t.EnsAvatarInvalidNftUriError = EnsAvatarInvalidNftUriError;
            let EnsAvatarUriResolutionError = class EnsAvatarUriResolutionError extends n.BaseError {
                constructor({
                    uri: e
                }) {
                    super(`Unable to resolve ENS avatar URI "${e}". The URI may be malformed, invalid, or does not respond with a valid image.`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "EnsAvatarUriResolutionError"
                    })
                }
            };
            t.EnsAvatarUriResolutionError = EnsAvatarUriResolutionError;
            let EnsAvatarUnsupportedNamespaceError = class EnsAvatarUnsupportedNamespaceError extends n.BaseError {
                constructor({
                    namespace: e
                }) {
                    super(`ENS NFT avatar namespace "${e}" is not supported. Must be "erc721" or "erc1155".`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "EnsAvatarUnsupportedNamespaceError"
                    })
                }
            };
            t.EnsAvatarUnsupportedNamespaceError = EnsAvatarUnsupportedNamespaceError
        },
        22577: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.EstimateGasExecutionError = void 0;
            let n = r(53711),
                i = r(14958),
                o = r(9537),
                a = r(65750);
            let EstimateGasExecutionError = class EstimateGasExecutionError extends o.BaseError {
                constructor(e, {
                    account: t,
                    docsPath: r,
                    chain: o,
                    data: s,
                    gas: c,
                    gasPrice: u,
                    maxFeePerGas: l,
                    maxPriorityFeePerGas: d,
                    nonce: f,
                    to: p,
                    value: y
                }) {
                    let g = (0, a.prettyPrint)({
                        from: t ? .address,
                        to: p,
                        value: void 0 !== y && `${(0,n.formatEther)(y)} ${o?.nativeCurrency?.symbol||"ETH"}`,
                        data: s,
                        gas: c,
                        gasPrice: void 0 !== u && `${(0,i.formatGwei)(u)} gwei`,
                        maxFeePerGas: void 0 !== l && `${(0,i.formatGwei)(l)} gwei`,
                        maxPriorityFeePerGas: void 0 !== d && `${(0,i.formatGwei)(d)} gwei`,
                        nonce: f
                    });
                    super(e.shortMessage, {
                        cause: e,
                        docsPath: r,
                        metaMessages: [...e.metaMessages ? [...e.metaMessages, " "] : [], "Estimate Gas Arguments:", g].filter(Boolean)
                    }), Object.defineProperty(this, "cause", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "EstimateGasExecutionError"
                    }), this.cause = e
                }
            };
            t.EstimateGasExecutionError = EstimateGasExecutionError
        },
        80892: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.MaxFeePerGasTooLowError = t.Eip1559FeesNotSupportedError = t.BaseFeeScalarError = void 0;
            let n = r(14958),
                i = r(9537);
            let BaseFeeScalarError = class BaseFeeScalarError extends i.BaseError {
                constructor() {
                    super("`baseFeeMultiplier` must be greater than 1."), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "BaseFeeScalarError"
                    })
                }
            };
            t.BaseFeeScalarError = BaseFeeScalarError;
            let Eip1559FeesNotSupportedError = class Eip1559FeesNotSupportedError extends i.BaseError {
                constructor() {
                    super("Chain does not support EIP-1559 fees."), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "Eip1559FeesNotSupportedError"
                    })
                }
            };
            t.Eip1559FeesNotSupportedError = Eip1559FeesNotSupportedError;
            let MaxFeePerGasTooLowError = class MaxFeePerGasTooLowError extends i.BaseError {
                constructor({
                    maxPriorityFeePerGas: e
                }) {
                    super(`\`maxFeePerGas\` cannot be less than the \`maxPriorityFeePerGas\` (${(0,n.formatGwei)(e)} gwei).`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "MaxFeePerGasTooLowError"
                    })
                }
            };
            t.MaxFeePerGasTooLowError = MaxFeePerGasTooLowError
        },
        25624: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.FilterTypeNotSupportedError = void 0;
            let n = r(9537);
            let FilterTypeNotSupportedError = class FilterTypeNotSupportedError extends n.BaseError {
                constructor(e) {
                    super(`Filter type "${e}" is not supported.`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "FilterTypeNotSupportedError"
                    })
                }
            };
            t.FilterTypeNotSupportedError = FilterTypeNotSupportedError
        },
        72911: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.UnknownNodeError = t.TipAboveFeeCapError = t.TransactionTypeNotSupportedError = t.IntrinsicGasTooLowError = t.IntrinsicGasTooHighError = t.InsufficientFundsError = t.NonceMaxValueError = t.NonceTooLowError = t.NonceTooHighError = t.FeeCapTooLowError = t.FeeCapTooHighError = t.ExecutionRevertedError = void 0;
            let n = r(14958),
                i = r(9537);
            let ExecutionRevertedError = class ExecutionRevertedError extends i.BaseError {
                constructor({
                    cause: e,
                    message: t
                } = {}) {
                    let r = t ? .replace("execution reverted: ", "") ? .replace("execution reverted", "");
                    super(`Execution reverted ${r?`with reason: ${r}`:"for an unknown reason"}.`, {
                        cause: e
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "ExecutionRevertedError"
                    })
                }
            };
            Object.defineProperty(ExecutionRevertedError, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: 3
            }), Object.defineProperty(ExecutionRevertedError, "nodeMessage", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: /execution reverted/
            }), t.ExecutionRevertedError = ExecutionRevertedError;
            let FeeCapTooHighError = class FeeCapTooHighError extends i.BaseError {
                constructor({
                    cause: e,
                    maxFeePerGas: t
                } = {}) {
                    super(`The fee cap (\`maxFeePerGas\`${t?` = ${(0,n.formatGwei)(t)} gwei`:""}) cannot be higher than the maximum allowed value (2^256-1).`, {
                        cause: e
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "FeeCapTooHigh"
                    })
                }
            };
            Object.defineProperty(FeeCapTooHighError, "nodeMessage", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: /max fee per gas higher than 2\^256-1|fee cap higher than 2\^256-1/
            }), t.FeeCapTooHighError = FeeCapTooHighError;
            let FeeCapTooLowError = class FeeCapTooLowError extends i.BaseError {
                constructor({
                    cause: e,
                    maxFeePerGas: t
                } = {}) {
                    super(`The fee cap (\`maxFeePerGas\`${t?` = ${(0,n.formatGwei)(t)}`:""} gwei) cannot be lower than the block base fee.`, {
                        cause: e
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "FeeCapTooLow"
                    })
                }
            };
            Object.defineProperty(FeeCapTooLowError, "nodeMessage", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: /max fee per gas less than block base fee|fee cap less than block base fee|transaction is outdated/
            }), t.FeeCapTooLowError = FeeCapTooLowError;
            let NonceTooHighError = class NonceTooHighError extends i.BaseError {
                constructor({
                    cause: e,
                    nonce: t
                } = {}) {
                    super(`Nonce provided for the transaction ${t?`(${t}) `:""}is higher than the next one expected.`, {
                        cause: e
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "NonceTooHighError"
                    })
                }
            };
            Object.defineProperty(NonceTooHighError, "nodeMessage", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: /nonce too high/
            }), t.NonceTooHighError = NonceTooHighError;
            let NonceTooLowError = class NonceTooLowError extends i.BaseError {
                constructor({
                    cause: e,
                    nonce: t
                } = {}) {
                    super(`Nonce provided for the transaction ${t?`(${t}) `:""}is lower than the current nonce of the account.
Try increasing the nonce or find the latest nonce with \`getTransactionCount\`.`, {
                        cause: e
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "NonceTooLowError"
                    })
                }
            };
            Object.defineProperty(NonceTooLowError, "nodeMessage", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: /nonce too low|transaction already imported|already known/
            }), t.NonceTooLowError = NonceTooLowError;
            let NonceMaxValueError = class NonceMaxValueError extends i.BaseError {
                constructor({
                    cause: e,
                    nonce: t
                } = {}) {
                    super(`Nonce provided for the transaction ${t?`(${t}) `:""}exceeds the maximum allowed nonce.`, {
                        cause: e
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "NonceMaxValueError"
                    })
                }
            };
            Object.defineProperty(NonceMaxValueError, "nodeMessage", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: /nonce has max value/
            }), t.NonceMaxValueError = NonceMaxValueError;
            let InsufficientFundsError = class InsufficientFundsError extends i.BaseError {
                constructor({
                    cause: e
                } = {}) {
                    super("The total cost (gas * gas fee + value) of executing this transaction exceeds the balance of the account.", {
                        cause: e,
                        metaMessages: ["This error could arise when the account does not have enough funds to:", " - pay for the total gas fee,", " - pay for the value to send.", " ", "The cost of the transaction is calculated as `gas * gas fee + value`, where:", " - `gas` is the amount of gas needed for transaction to execute,", " - `gas fee` is the gas fee,", " - `value` is the amount of ether to send to the recipient."]
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InsufficientFundsError"
                    })
                }
            };
            Object.defineProperty(InsufficientFundsError, "nodeMessage", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: /insufficient funds/
            }), t.InsufficientFundsError = InsufficientFundsError;
            let IntrinsicGasTooHighError = class IntrinsicGasTooHighError extends i.BaseError {
                constructor({
                    cause: e,
                    gas: t
                } = {}) {
                    super(`The amount of gas ${t?`(${t}) `:""}provided for the transaction exceeds the limit allowed for the block.`, {
                        cause: e
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "IntrinsicGasTooHighError"
                    })
                }
            };
            Object.defineProperty(IntrinsicGasTooHighError, "nodeMessage", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: /intrinsic gas too high|gas limit reached/
            }), t.IntrinsicGasTooHighError = IntrinsicGasTooHighError;
            let IntrinsicGasTooLowError = class IntrinsicGasTooLowError extends i.BaseError {
                constructor({
                    cause: e,
                    gas: t
                } = {}) {
                    super(`The amount of gas ${t?`(${t}) `:""}provided for the transaction is too low.`, {
                        cause: e
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "IntrinsicGasTooLowError"
                    })
                }
            };
            Object.defineProperty(IntrinsicGasTooLowError, "nodeMessage", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: /intrinsic gas too low/
            }), t.IntrinsicGasTooLowError = IntrinsicGasTooLowError;
            let TransactionTypeNotSupportedError = class TransactionTypeNotSupportedError extends i.BaseError {
                constructor({
                    cause: e
                }) {
                    super("The transaction type is not supported for this chain.", {
                        cause: e
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "TransactionTypeNotSupportedError"
                    })
                }
            };
            Object.defineProperty(TransactionTypeNotSupportedError, "nodeMessage", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: /transaction type not valid/
            }), t.TransactionTypeNotSupportedError = TransactionTypeNotSupportedError;
            let TipAboveFeeCapError = class TipAboveFeeCapError extends i.BaseError {
                constructor({
                    cause: e,
                    maxPriorityFeePerGas: t,
                    maxFeePerGas: r
                } = {}) {
                    super(`The provided tip (\`maxPriorityFeePerGas\`${t?` = ${(0,n.formatGwei)(t)} gwei`:""}) cannot be higher than the fee cap (\`maxFeePerGas\`${r?` = ${(0,n.formatGwei)(r)} gwei`:""}).`, {
                        cause: e
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "TipAboveFeeCapError"
                    })
                }
            };
            Object.defineProperty(TipAboveFeeCapError, "nodeMessage", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: /max priority fee per gas higher than max fee per gas|tip higher than fee cap/
            }), t.TipAboveFeeCapError = TipAboveFeeCapError;
            let UnknownNodeError = class UnknownNodeError extends i.BaseError {
                constructor({
                    cause: e
                }) {
                    super(`An error occurred while executing: ${e?.shortMessage}`, {
                        cause: e
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "UnknownNodeError"
                    })
                }
            };
            t.UnknownNodeError = UnknownNodeError
        },
        58323: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.TimeoutError = t.RpcRequestError = t.WebSocketRequestError = t.HttpRequestError = void 0;
            let n = r(42701),
                i = r(9537),
                o = r(41397);
            let HttpRequestError = class HttpRequestError extends i.BaseError {
                constructor({
                    body: e,
                    details: t,
                    headers: r,
                    status: i,
                    url: a
                }) {
                    super("HTTP request failed.", {
                        details: t,
                        metaMessages: [i && `Status: ${i}`, `URL: ${(0,o.getUrl)(a)}`, e && `Request body: ${(0,n.stringify)(e)}`].filter(Boolean)
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "HttpRequestError"
                    }), Object.defineProperty(this, "body", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "headers", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "status", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "url", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), this.body = e, this.headers = r, this.status = i, this.url = a
                }
            };
            t.HttpRequestError = HttpRequestError;
            let WebSocketRequestError = class WebSocketRequestError extends i.BaseError {
                constructor({
                    body: e,
                    details: t,
                    url: r
                }) {
                    super("WebSocket request failed.", {
                        details: t,
                        metaMessages: [`URL: ${(0,o.getUrl)(r)}`, `Request body: ${(0,n.stringify)(e)}`]
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "WebSocketRequestError"
                    })
                }
            };
            t.WebSocketRequestError = WebSocketRequestError;
            let RpcRequestError = class RpcRequestError extends i.BaseError {
                constructor({
                    body: e,
                    error: t,
                    url: r
                }) {
                    super("RPC Request failed.", {
                        cause: t,
                        details: t.message,
                        metaMessages: [`URL: ${(0,o.getUrl)(r)}`, `Request body: ${(0,n.stringify)(e)}`]
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "RpcRequestError"
                    }), Object.defineProperty(this, "code", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), this.code = t.code
                }
            };
            t.RpcRequestError = RpcRequestError;
            let TimeoutError = class TimeoutError extends i.BaseError {
                constructor({
                    body: e,
                    url: t
                }) {
                    super("The request took too long to respond.", {
                        details: "The request timed out.",
                        metaMessages: [`URL: ${(0,o.getUrl)(t)}`, `Request body: ${(0,n.stringify)(e)}`]
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "TimeoutError"
                    })
                }
            };
            t.TimeoutError = TimeoutError
        },
        52091: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.UnknownRpcError = t.SwitchChainError = t.ChainDisconnectedError = t.ProviderDisconnectedError = t.UnsupportedProviderMethodError = t.UnauthorizedProviderError = t.UserRejectedRequestError = t.JsonRpcVersionUnsupportedError = t.LimitExceededRpcError = t.MethodNotSupportedRpcError = t.TransactionRejectedRpcError = t.ResourceUnavailableRpcError = t.ResourceNotFoundRpcError = t.InvalidInputRpcError = t.InternalRpcError = t.InvalidParamsRpcError = t.MethodNotFoundRpcError = t.InvalidRequestRpcError = t.ParseRpcError = t.ProviderRpcError = t.RpcError = void 0;
            let n = r(9537),
                i = r(58323);
            let RpcError = class RpcError extends n.BaseError {
                constructor(e, {
                    code: t,
                    docsPath: r,
                    metaMessages: n,
                    shortMessage: o
                }) {
                    super(o, {
                        cause: e,
                        docsPath: r,
                        metaMessages: n || e ? .metaMessages
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "RpcError"
                    }), Object.defineProperty(this, "code", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), this.name = e.name, this.code = e instanceof i.RpcRequestError ? e.code : t ? ? -1
                }
            };
            t.RpcError = RpcError;
            let ProviderRpcError = class ProviderRpcError extends RpcError {
                constructor(e, t) {
                    super(e, t), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "ProviderRpcError"
                    }), Object.defineProperty(this, "data", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), this.data = t.data
                }
            };
            t.ProviderRpcError = ProviderRpcError;
            let ParseRpcError = class ParseRpcError extends RpcError {
                constructor(e) {
                    super(e, {
                        code: ParseRpcError.code,
                        shortMessage: "Invalid JSON was received by the server. An error occurred on the server while parsing the JSON text."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "ParseRpcError"
                    })
                }
            };
            Object.defineProperty(ParseRpcError, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: -32700
            }), t.ParseRpcError = ParseRpcError;
            let InvalidRequestRpcError = class InvalidRequestRpcError extends RpcError {
                constructor(e) {
                    super(e, {
                        code: InvalidRequestRpcError.code,
                        shortMessage: "JSON is not a valid request object."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidRequestRpcError"
                    })
                }
            };
            Object.defineProperty(InvalidRequestRpcError, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: -32600
            }), t.InvalidRequestRpcError = InvalidRequestRpcError;
            let MethodNotFoundRpcError = class MethodNotFoundRpcError extends RpcError {
                constructor(e) {
                    super(e, {
                        code: MethodNotFoundRpcError.code,
                        shortMessage: "The method does not exist / is not available."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "MethodNotFoundRpcError"
                    })
                }
            };
            Object.defineProperty(MethodNotFoundRpcError, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: -32601
            }), t.MethodNotFoundRpcError = MethodNotFoundRpcError;
            let InvalidParamsRpcError = class InvalidParamsRpcError extends RpcError {
                constructor(e) {
                    super(e, {
                        code: InvalidParamsRpcError.code,
                        shortMessage: "Invalid parameters were provided to the RPC method.\nDouble check you have provided the correct parameters."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidParamsRpcError"
                    })
                }
            };
            Object.defineProperty(InvalidParamsRpcError, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: -32602
            }), t.InvalidParamsRpcError = InvalidParamsRpcError;
            let InternalRpcError = class InternalRpcError extends RpcError {
                constructor(e) {
                    super(e, {
                        code: InternalRpcError.code,
                        shortMessage: "An internal error was received."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InternalRpcError"
                    })
                }
            };
            Object.defineProperty(InternalRpcError, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: -32603
            }), t.InternalRpcError = InternalRpcError;
            let InvalidInputRpcError = class InvalidInputRpcError extends RpcError {
                constructor(e) {
                    super(e, {
                        code: InvalidInputRpcError.code,
                        shortMessage: "Missing or invalid parameters.\nDouble check you have provided the correct parameters."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidInputRpcError"
                    })
                }
            };
            Object.defineProperty(InvalidInputRpcError, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: -32e3
            }), t.InvalidInputRpcError = InvalidInputRpcError;
            let ResourceNotFoundRpcError = class ResourceNotFoundRpcError extends RpcError {
                constructor(e) {
                    super(e, {
                        code: ResourceNotFoundRpcError.code,
                        shortMessage: "Requested resource not found."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "ResourceNotFoundRpcError"
                    })
                }
            };
            Object.defineProperty(ResourceNotFoundRpcError, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: -32001
            }), t.ResourceNotFoundRpcError = ResourceNotFoundRpcError;
            let ResourceUnavailableRpcError = class ResourceUnavailableRpcError extends RpcError {
                constructor(e) {
                    super(e, {
                        code: ResourceUnavailableRpcError.code,
                        shortMessage: "Requested resource not available."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "ResourceUnavailableRpcError"
                    })
                }
            };
            Object.defineProperty(ResourceUnavailableRpcError, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: -32002
            }), t.ResourceUnavailableRpcError = ResourceUnavailableRpcError;
            let TransactionRejectedRpcError = class TransactionRejectedRpcError extends RpcError {
                constructor(e) {
                    super(e, {
                        code: TransactionRejectedRpcError.code,
                        shortMessage: "Transaction creation failed."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "TransactionRejectedRpcError"
                    })
                }
            };
            Object.defineProperty(TransactionRejectedRpcError, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: -32003
            }), t.TransactionRejectedRpcError = TransactionRejectedRpcError;
            let MethodNotSupportedRpcError = class MethodNotSupportedRpcError extends RpcError {
                constructor(e) {
                    super(e, {
                        code: MethodNotSupportedRpcError.code,
                        shortMessage: "Method is not implemented."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "MethodNotSupportedRpcError"
                    })
                }
            };
            Object.defineProperty(MethodNotSupportedRpcError, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: -32004
            }), t.MethodNotSupportedRpcError = MethodNotSupportedRpcError;
            let LimitExceededRpcError = class LimitExceededRpcError extends RpcError {
                constructor(e) {
                    super(e, {
                        code: LimitExceededRpcError.code,
                        shortMessage: "Request exceeds defined limit."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "LimitExceededRpcError"
                    })
                }
            };
            Object.defineProperty(LimitExceededRpcError, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: -32005
            }), t.LimitExceededRpcError = LimitExceededRpcError;
            let JsonRpcVersionUnsupportedError = class JsonRpcVersionUnsupportedError extends RpcError {
                constructor(e) {
                    super(e, {
                        code: JsonRpcVersionUnsupportedError.code,
                        shortMessage: "Version of JSON-RPC protocol is not supported."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "JsonRpcVersionUnsupportedError"
                    })
                }
            };
            Object.defineProperty(JsonRpcVersionUnsupportedError, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: -32006
            }), t.JsonRpcVersionUnsupportedError = JsonRpcVersionUnsupportedError;
            let UserRejectedRequestError = class UserRejectedRequestError extends ProviderRpcError {
                constructor(e) {
                    super(e, {
                        code: UserRejectedRequestError.code,
                        shortMessage: "User rejected the request."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "UserRejectedRequestError"
                    })
                }
            };
            Object.defineProperty(UserRejectedRequestError, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: 4001
            }), t.UserRejectedRequestError = UserRejectedRequestError;
            let UnauthorizedProviderError = class UnauthorizedProviderError extends ProviderRpcError {
                constructor(e) {
                    super(e, {
                        code: UnauthorizedProviderError.code,
                        shortMessage: "The requested method and/or account has not been authorized by the user."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "UnauthorizedProviderError"
                    })
                }
            };
            Object.defineProperty(UnauthorizedProviderError, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: 4100
            }), t.UnauthorizedProviderError = UnauthorizedProviderError;
            let UnsupportedProviderMethodError = class UnsupportedProviderMethodError extends ProviderRpcError {
                constructor(e) {
                    super(e, {
                        code: UnsupportedProviderMethodError.code,
                        shortMessage: "The Provider does not support the requested method."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "UnsupportedProviderMethodError"
                    })
                }
            };
            Object.defineProperty(UnsupportedProviderMethodError, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: 4200
            }), t.UnsupportedProviderMethodError = UnsupportedProviderMethodError;
            let ProviderDisconnectedError = class ProviderDisconnectedError extends ProviderRpcError {
                constructor(e) {
                    super(e, {
                        code: ProviderDisconnectedError.code,
                        shortMessage: "The Provider is disconnected from all chains."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "ProviderDisconnectedError"
                    })
                }
            };
            Object.defineProperty(ProviderDisconnectedError, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: 4900
            }), t.ProviderDisconnectedError = ProviderDisconnectedError;
            let ChainDisconnectedError = class ChainDisconnectedError extends ProviderRpcError {
                constructor(e) {
                    super(e, {
                        code: ChainDisconnectedError.code,
                        shortMessage: "The Provider is not connected to the requested chain."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "ChainDisconnectedError"
                    })
                }
            };
            Object.defineProperty(ChainDisconnectedError, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: 4901
            }), t.ChainDisconnectedError = ChainDisconnectedError;
            let SwitchChainError = class SwitchChainError extends ProviderRpcError {
                constructor(e) {
                    super(e, {
                        code: SwitchChainError.code,
                        shortMessage: "An error occurred when attempting to switch chain."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "SwitchChainError"
                    })
                }
            };
            Object.defineProperty(SwitchChainError, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: 4902
            }), t.SwitchChainError = SwitchChainError, t.UnknownRpcError = class extends RpcError {
                constructor(e) {
                    super(e, {
                        shortMessage: "An unknown RPC error occurred."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "UnknownRpcError"
                    })
                }
            }
        },
        65750: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.WaitForTransactionReceiptTimeoutError = t.TransactionReceiptNotFoundError = t.TransactionNotFoundError = t.TransactionExecutionError = t.InvalidStorageKeySizeError = t.InvalidSerializedTransactionError = t.InvalidSerializedTransactionTypeError = t.InvalidSerializableTransactionError = t.InvalidLegacyVError = t.FeeConflictError = t.prettyPrint = void 0;
            let n = r(53711),
                i = r(14958),
                o = r(9537);

            function prettyPrint(e) {
                let t = Object.entries(e).map(([e, t]) => void 0 === t || !1 === t ? null : [e, t]).filter(Boolean),
                    r = t.reduce((e, [t]) => Math.max(e, t.length), 0);
                return t.map(([e, t]) => `  ${`${e}:`.padEnd(r+1)}  ${t}`).join("\n")
            }
            t.prettyPrint = prettyPrint;
            let FeeConflictError = class FeeConflictError extends o.BaseError {
                constructor() {
                    super("Cannot specify both a `gasPrice` and a `maxFeePerGas`/`maxPriorityFeePerGas`.\nUse `maxFeePerGas`/`maxPriorityFeePerGas` for EIP-1559 compatible networks, and `gasPrice` for others."), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "FeeConflictError"
                    })
                }
            };
            t.FeeConflictError = FeeConflictError;
            let InvalidLegacyVError = class InvalidLegacyVError extends o.BaseError {
                constructor({
                    v: e
                }) {
                    super(`Invalid \`v\` value "${e}". Expected 27 or 28.`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidLegacyVError"
                    })
                }
            };
            t.InvalidLegacyVError = InvalidLegacyVError;
            let InvalidSerializableTransactionError = class InvalidSerializableTransactionError extends o.BaseError {
                constructor({
                    transaction: e
                }) {
                    super("Cannot infer a transaction type from provided transaction.", {
                        metaMessages: ["Provided Transaction:", "{", prettyPrint(e), "}", "", "To infer the type, either provide:", "- a `type` to the Transaction, or", "- an EIP-1559 Transaction with `maxFeePerGas`, or", "- an EIP-2930 Transaction with `gasPrice` & `accessList`, or", "- a Legacy Transaction with `gasPrice`"]
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidSerializableTransactionError"
                    })
                }
            };
            t.InvalidSerializableTransactionError = InvalidSerializableTransactionError;
            let InvalidSerializedTransactionTypeError = class InvalidSerializedTransactionTypeError extends o.BaseError {
                constructor({
                    serializedType: e
                }) {
                    super(`Serialized transaction type "${e}" is invalid.`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidSerializedTransactionType"
                    }), Object.defineProperty(this, "serializedType", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), this.serializedType = e
                }
            };
            t.InvalidSerializedTransactionTypeError = InvalidSerializedTransactionTypeError;
            let InvalidSerializedTransactionError = class InvalidSerializedTransactionError extends o.BaseError {
                constructor({
                    attributes: e,
                    serializedTransaction: t,
                    type: r
                }) {
                    let n = Object.entries(e).map(([e, t]) => void 0 === t ? e : void 0).filter(Boolean);
                    super(`Invalid serialized transaction of type "${r}" was provided.`, {
                        metaMessages: [`Serialized Transaction: "${t}"`, n.length > 0 ? `Missing Attributes: ${n.join(", ")}` : ""].filter(Boolean)
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidSerializedTransactionError"
                    }), Object.defineProperty(this, "serializedTransaction", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "type", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), this.serializedTransaction = t, this.type = r
                }
            };
            t.InvalidSerializedTransactionError = InvalidSerializedTransactionError;
            let InvalidStorageKeySizeError = class InvalidStorageKeySizeError extends o.BaseError {
                constructor({
                    storageKey: e
                }) {
                    super(`Size for storage key "${e}" is invalid. Expected 32 bytes. Got ${Math.floor((e.length-2)/2)} bytes.`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidStorageKeySizeError"
                    })
                }
            };
            t.InvalidStorageKeySizeError = InvalidStorageKeySizeError;
            let TransactionExecutionError = class TransactionExecutionError extends o.BaseError {
                constructor(e, {
                    account: t,
                    docsPath: r,
                    chain: o,
                    data: a,
                    gas: s,
                    gasPrice: c,
                    maxFeePerGas: u,
                    maxPriorityFeePerGas: l,
                    nonce: d,
                    to: f,
                    value: p
                }) {
                    let y = prettyPrint({
                        chain: o && `${o?.name} (id: ${o?.id})`,
                        from: t ? .address,
                        to: f,
                        value: void 0 !== p && `${(0,n.formatEther)(p)} ${o?.nativeCurrency?.symbol||"ETH"}`,
                        data: a,
                        gas: s,
                        gasPrice: void 0 !== c && `${(0,i.formatGwei)(c)} gwei`,
                        maxFeePerGas: void 0 !== u && `${(0,i.formatGwei)(u)} gwei`,
                        maxPriorityFeePerGas: void 0 !== l && `${(0,i.formatGwei)(l)} gwei`,
                        nonce: d
                    });
                    super(e.shortMessage, {
                        cause: e,
                        docsPath: r,
                        metaMessages: [...e.metaMessages ? [...e.metaMessages, " "] : [], "Request Arguments:", y].filter(Boolean)
                    }), Object.defineProperty(this, "cause", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "TransactionExecutionError"
                    }), this.cause = e
                }
            };
            t.TransactionExecutionError = TransactionExecutionError;
            let TransactionNotFoundError = class TransactionNotFoundError extends o.BaseError {
                constructor({
                    blockHash: e,
                    blockNumber: t,
                    blockTag: r,
                    hash: n,
                    index: i
                }) {
                    let o = "Transaction";
                    r && void 0 !== i && (o = `Transaction at block time "${r}" at index "${i}"`), e && void 0 !== i && (o = `Transaction at block hash "${e}" at index "${i}"`), t && void 0 !== i && (o = `Transaction at block number "${t}" at index "${i}"`), n && (o = `Transaction with hash "${n}"`), super(`${o} could not be found.`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "TransactionNotFoundError"
                    })
                }
            };
            t.TransactionNotFoundError = TransactionNotFoundError;
            let TransactionReceiptNotFoundError = class TransactionReceiptNotFoundError extends o.BaseError {
                constructor({
                    hash: e
                }) {
                    super(`Transaction receipt with hash "${e}" could not be found. The Transaction may not be processed on a block yet.`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "TransactionReceiptNotFoundError"
                    })
                }
            };
            t.TransactionReceiptNotFoundError = TransactionReceiptNotFoundError;
            let WaitForTransactionReceiptTimeoutError = class WaitForTransactionReceiptTimeoutError extends o.BaseError {
                constructor({
                    hash: e
                }) {
                    super(`Timed out while waiting for transaction with hash "${e}" to be confirmed.`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "WaitForTransactionReceiptTimeoutError"
                    })
                }
            };
            t.WaitForTransactionReceiptTimeoutError = WaitForTransactionReceiptTimeoutError
        },
        86388: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.UrlRequiredError = void 0;
            let n = r(9537);
            let UrlRequiredError = class UrlRequiredError extends n.BaseError {
                constructor() {
                    super("No URL was provided to the Transport. Please provide a valid RPC URL to the Transport.", {
                        docsPath: "/docs/clients/intro"
                    })
                }
            };
            t.UrlRequiredError = UrlRequiredError
        },
        41397: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getVersion = t.getUrl = t.getContractAddress = void 0;
            let n = r(1719);
            t.getContractAddress = e => e, t.getUrl = e => e, t.getVersion = () => `viem@${n.version}`
        },
        1719: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.version = void 0, t.version = "1.19.10"
        },
        33122: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.maxInt112 = t.maxInt104 = t.maxInt96 = t.maxInt88 = t.maxInt80 = t.maxInt72 = t.maxInt64 = t.maxInt56 = t.maxInt48 = t.maxInt40 = t.maxInt32 = t.maxInt24 = t.maxInt16 = t.maxInt8 = t.weiUnits = t.gweiUnits = t.etherUnits = t.zeroAddress = t.multicall3Abi = t.webSocket = t.createWalletClient = t.createTransport = t.walletActions = t.testActions = t.publicActions = t.createTestClient = t.createPublicClient = t.http = t.fallback = t.custom = t.createClient = t.getContract = t.parseAbiParameters = t.parseAbiParameter = t.parseAbiItem = t.parseAbi = t.UnknownSignatureError = t.UnknownTypeError = t.SolidityProtectedKeywordError = t.InvalidStructSignatureError = t.InvalidSignatureError = t.InvalidParenthesisError = t.InvalidParameterError = t.InvalidModifierError = t.InvalidFunctionModifierError = t.InvalidAbiTypeParameterError = t.InvalidAbiItemError = t.InvalidAbiParametersError = t.InvalidAbiParameterError = t.CircularReferenceError = void 0, t.maxUint256 = t.maxUint248 = t.maxUint240 = t.maxUint232 = t.maxUint224 = t.maxUint216 = t.maxUint208 = t.maxUint200 = t.maxUint192 = t.maxUint184 = t.maxUint176 = t.maxUint168 = t.maxUint160 = t.maxUint152 = t.maxUint144 = t.maxUint136 = t.maxUint128 = t.maxUint120 = t.maxUint112 = t.maxUint104 = t.maxUint96 = t.maxUint88 = t.maxUint80 = t.maxUint72 = t.maxUint64 = t.maxUint56 = t.maxUint48 = t.maxUint40 = t.maxUint32 = t.maxUint24 = t.maxUint16 = t.maxUint8 = t.maxInt256 = t.maxInt248 = t.maxInt240 = t.maxInt232 = t.maxInt224 = t.maxInt216 = t.maxInt208 = t.maxInt200 = t.maxInt192 = t.maxInt184 = t.maxInt176 = t.maxInt168 = t.maxInt160 = t.maxInt152 = t.maxInt144 = t.maxInt136 = t.maxInt128 = t.maxInt120 = void 0, t.AbiFunctionOutputsNotFoundError = t.AbiFunctionNotFoundError = t.AbiEventSignatureNotFoundError = t.AbiEventSignatureEmptyTopicsError = t.AbiEventNotFoundError = t.AbiErrorSignatureNotFoundError = t.AbiErrorNotFoundError = t.AbiErrorInputsNotFoundError = t.AbiEncodingBytesSizeMismatchError = t.AbiEncodingLengthMismatchError = t.AbiEncodingArrayLengthMismatchError = t.AbiDecodingZeroDataError = t.AbiDecodingDataSizeTooSmallError = t.AbiDecodingDataSizeInvalidError = t.AbiConstructorParamsNotFoundError = t.AbiConstructorNotFoundError = t.presignMessagePrefix = t.zeroHash = t.minInt256 = t.minInt248 = t.minInt240 = t.minInt232 = t.minInt224 = t.minInt216 = t.minInt208 = t.minInt200 = t.minInt192 = t.minInt184 = t.minInt176 = t.minInt168 = t.minInt160 = t.minInt152 = t.minInt144 = t.minInt136 = t.minInt128 = t.minInt120 = t.minInt112 = t.minInt104 = t.minInt96 = t.minInt88 = t.minInt80 = t.minInt72 = t.minInt64 = t.minInt56 = t.minInt48 = t.minInt40 = t.minInt32 = t.minInt24 = t.minInt16 = t.minInt8 = void 0, t.InvalidHexBooleanError = t.IntegerOutOfRangeError = t.InvalidBytesBooleanError = t.DataLengthTooShortError = t.DataLengthTooLongError = t.InvalidChainIdError = t.ClientChainNotConfiguredError = t.ChainNotFoundError = t.ChainMismatchError = t.ChainDoesNotSupportContract = t.UserRejectedRequestError = t.UnsupportedProviderMethodError = t.UnknownRpcError = t.UnauthorizedProviderError = t.TransactionRejectedRpcError = t.SwitchChainError = t.RpcError = t.ResourceUnavailableRpcError = t.ResourceNotFoundRpcError = t.ProviderRpcError = t.ProviderDisconnectedError = t.ParseRpcError = t.MethodNotSupportedRpcError = t.MethodNotFoundRpcError = t.LimitExceededRpcError = t.JsonRpcVersionUnsupportedError = t.InvalidRequestRpcError = t.InvalidParamsRpcError = t.InvalidInputRpcError = t.InternalRpcError = t.ChainDisconnectedError = t.MaxFeePerGasTooLowError = t.Eip1559FeesNotSupportedError = t.BaseFeeScalarError = t.RawContractError = t.ContractFunctionZeroDataError = t.ContractFunctionRevertedError = t.ContractFunctionExecutionError = t.CallExecutionError = t.BlockNotFoundError = t.BaseError = t.UnsupportedPackedAbiType = t.InvalidDefinitionTypeError = t.InvalidArrayError = t.InvalidAbiEncodingTypeError = t.InvalidAbiDecodingTypeError = t.DecodeLogTopicsMismatch = t.DecodeLogDataMismatch = t.BytesSizeMismatchError = t.AbiFunctionSignatureNotFoundError = void 0, t.encodeAbiParameters = t.decodeFunctionResult = t.decodeFunctionData = t.decodeEventLog = t.decodeErrorResult = t.decodeDeployData = t.decodeAbiParameters = t.formatLog = t.formatBlock = t.defineBlock = t.namehash = t.labelhash = t.UrlRequiredError = t.SliceOffsetOutOfBoundsError = t.SizeExceedsPaddingSizeError = t.WaitForTransactionReceiptTimeoutError = t.TransactionReceiptNotFoundError = t.TransactionNotFoundError = t.TransactionExecutionError = t.InvalidStorageKeySizeError = t.InvalidSerializedTransactionTypeError = t.InvalidSerializedTransactionError = t.InvalidSerializableTransactionError = t.InvalidLegacyVError = t.FeeConflictError = t.InvalidAddressError = t.WebSocketRequestError = t.TimeoutError = t.RpcRequestError = t.HttpRequestError = t.FilterTypeNotSupportedError = t.UnknownNodeError = t.TransactionTypeNotSupportedError = t.TipAboveFeeCapError = t.NonceTooLowError = t.NonceTooHighError = t.NonceMaxValueError = t.IntrinsicGasTooLowError = t.IntrinsicGasTooHighError = t.InsufficientFundsError = t.FeeCapTooLowError = t.FeeCapTooHighError = t.ExecutionRevertedError = t.EstimateGasExecutionError = t.EnsAvatarUnsupportedNamespaceError = t.EnsAvatarInvalidNftUriError = t.EnsAvatarUriResolutionError = t.SizeOverflowError = t.OffsetOutOfBoundsError = t.InvalidHexValueError = void 0, t.toHex = t.stringToHex = t.numberToHex = t.bytesToHex = t.boolToHex = t.toBytes = t.stringToBytes = t.numberToBytes = t.hexToBytes = t.boolToBytes = t.assertTransactionLegacy = t.assertTransactionEIP2930 = t.assertTransactionEIP1559 = t.assertRequest = t.verifyTypedData = t.verifyMessage = t.toRlp = t.hexToRlp = t.bytesToRlp = t.signatureToHex = t.compactSignatureToHex = t.signatureToCompactSignature = t.recoverTypedDataAddress = t.recoverPublicKey = t.recoverMessageAddress = t.recoverAddress = t.hexToSignature = t.hexToCompactSignature = t.compactSignatureToSignature = t.hashTypedData = t.hashDomain = t.getTransactionType = t.getSerializedTransactionType = t.getCreateAddress = t.getCreate2Address = t.getContractAddress = t.getAbiItem = t.rpcTransactionType = t.formatTransactionRequest = t.defineTransactionRequest = t.formatTransactionReceipt = t.defineTransactionReceipt = t.transactionType = t.formatTransaction = t.defineTransaction = t.encodeFunctionResult = t.encodeFunctionData = t.encodeEventTopics = t.encodeErrorResult = t.encodeDeployData = void 0, t.serializeTransaction = t.serializeAccessList = t.parseUnits = t.parseTransaction = t.parseGwei = t.parseEther = t.padHex = t.padBytes = t.pad = t.keccak256 = t.isHex = t.isHash = t.isBytes = t.isAddressEqual = t.isAddress = t.hashMessage = t.getFunctionSignature = t.getFunctionSelector = t.getEventSignature = t.getEventSelector = t.getContractError = t.getAddress = t.checksumAddress = t.fromRlp = t.hexToString = t.hexToNumber = t.hexToBool = t.hexToBigInt = t.fromHex = t.formatUnits = t.formatGwei = t.formatEther = t.encodePacked = t.getChainContractAddress = t.extractChain = t.defineChain = t.assertCurrentChain = t.concatHex = t.concatBytes = t.concat = t.offchainLookupSignature = t.offchainLookupAbiItem = t.offchainLookup = t.ccipFetch = t.fromBytes = t.bytesToString = t.bytesToNumber = t.bytesToBool = t.bytesToBigint = t.bytesToBigInt = void 0, t.getTypesForEIP712Domain = t.domainSeparator = t.validateTypedData = t.trim = t.stringify = t.sliceHex = t.sliceBytes = t.slice = t.size = void 0;
            var n = r(84595);
            Object.defineProperty(t, "CircularReferenceError", {
                enumerable: !0,
                get: function() {
                    return n.CircularReferenceError
                }
            }), Object.defineProperty(t, "InvalidAbiParameterError", {
                enumerable: !0,
                get: function() {
                    return n.InvalidAbiParameterError
                }
            }), Object.defineProperty(t, "InvalidAbiParametersError", {
                enumerable: !0,
                get: function() {
                    return n.InvalidAbiParametersError
                }
            }), Object.defineProperty(t, "InvalidAbiItemError", {
                enumerable: !0,
                get: function() {
                    return n.InvalidAbiItemError
                }
            }), Object.defineProperty(t, "InvalidAbiTypeParameterError", {
                enumerable: !0,
                get: function() {
                    return n.InvalidAbiTypeParameterError
                }
            }), Object.defineProperty(t, "InvalidFunctionModifierError", {
                enumerable: !0,
                get: function() {
                    return n.InvalidFunctionModifierError
                }
            }), Object.defineProperty(t, "InvalidModifierError", {
                enumerable: !0,
                get: function() {
                    return n.InvalidModifierError
                }
            }), Object.defineProperty(t, "InvalidParameterError", {
                enumerable: !0,
                get: function() {
                    return n.InvalidParameterError
                }
            }), Object.defineProperty(t, "InvalidParenthesisError", {
                enumerable: !0,
                get: function() {
                    return n.InvalidParenthesisError
                }
            }), Object.defineProperty(t, "InvalidSignatureError", {
                enumerable: !0,
                get: function() {
                    return n.InvalidSignatureError
                }
            }), Object.defineProperty(t, "InvalidStructSignatureError", {
                enumerable: !0,
                get: function() {
                    return n.InvalidStructSignatureError
                }
            }), Object.defineProperty(t, "SolidityProtectedKeywordError", {
                enumerable: !0,
                get: function() {
                    return n.SolidityProtectedKeywordError
                }
            }), Object.defineProperty(t, "UnknownTypeError", {
                enumerable: !0,
                get: function() {
                    return n.UnknownTypeError
                }
            }), Object.defineProperty(t, "UnknownSignatureError", {
                enumerable: !0,
                get: function() {
                    return n.UnknownSignatureError
                }
            }), Object.defineProperty(t, "parseAbi", {
                enumerable: !0,
                get: function() {
                    return n.parseAbi
                }
            }), Object.defineProperty(t, "parseAbiItem", {
                enumerable: !0,
                get: function() {
                    return n.parseAbiItem
                }
            }), Object.defineProperty(t, "parseAbiParameter", {
                enumerable: !0,
                get: function() {
                    return n.parseAbiParameter
                }
            }), Object.defineProperty(t, "parseAbiParameters", {
                enumerable: !0,
                get: function() {
                    return n.parseAbiParameters
                }
            });
            var i = r(59331);
            Object.defineProperty(t, "getContract", {
                enumerable: !0,
                get: function() {
                    return i.getContract
                }
            });
            var o = r(89377);
            Object.defineProperty(t, "createClient", {
                enumerable: !0,
                get: function() {
                    return o.createClient
                }
            });
            var a = r(79243);
            Object.defineProperty(t, "custom", {
                enumerable: !0,
                get: function() {
                    return a.custom
                }
            });
            var s = r(1282);
            Object.defineProperty(t, "fallback", {
                enumerable: !0,
                get: function() {
                    return s.fallback
                }
            });
            var c = r(43422);
            Object.defineProperty(t, "http", {
                enumerable: !0,
                get: function() {
                    return c.http
                }
            });
            var u = r(48573);
            Object.defineProperty(t, "createPublicClient", {
                enumerable: !0,
                get: function() {
                    return u.createPublicClient
                }
            });
            var l = r(57771);
            Object.defineProperty(t, "createTestClient", {
                enumerable: !0,
                get: function() {
                    return l.createTestClient
                }
            });
            var d = r(84856);
            Object.defineProperty(t, "publicActions", {
                enumerable: !0,
                get: function() {
                    return d.publicActions
                }
            });
            var f = r(5384);
            Object.defineProperty(t, "testActions", {
                enumerable: !0,
                get: function() {
                    return f.testActions
                }
            });
            var p = r(96841);
            Object.defineProperty(t, "walletActions", {
                enumerable: !0,
                get: function() {
                    return p.walletActions
                }
            });
            var y = r(78456);
            Object.defineProperty(t, "createTransport", {
                enumerable: !0,
                get: function() {
                    return y.createTransport
                }
            });
            var g = r(85069);
            Object.defineProperty(t, "createWalletClient", {
                enumerable: !0,
                get: function() {
                    return g.createWalletClient
                }
            });
            var v = r(4807);
            Object.defineProperty(t, "webSocket", {
                enumerable: !0,
                get: function() {
                    return v.webSocket
                }
            });
            var E = r(23757);
            Object.defineProperty(t, "multicall3Abi", {
                enumerable: !0,
                get: function() {
                    return E.multicall3Abi
                }
            });
            var _ = r(34854);
            Object.defineProperty(t, "zeroAddress", {
                enumerable: !0,
                get: function() {
                    return _.zeroAddress
                }
            });
            var P = r(49955);
            Object.defineProperty(t, "etherUnits", {
                enumerable: !0,
                get: function() {
                    return P.etherUnits
                }
            }), Object.defineProperty(t, "gweiUnits", {
                enumerable: !0,
                get: function() {
                    return P.gweiUnits
                }
            }), Object.defineProperty(t, "weiUnits", {
                enumerable: !0,
                get: function() {
                    return P.weiUnits
                }
            });
            var T = r(92022);
            Object.defineProperty(t, "maxInt8", {
                enumerable: !0,
                get: function() {
                    return T.maxInt8
                }
            }), Object.defineProperty(t, "maxInt16", {
                enumerable: !0,
                get: function() {
                    return T.maxInt16
                }
            }), Object.defineProperty(t, "maxInt24", {
                enumerable: !0,
                get: function() {
                    return T.maxInt24
                }
            }), Object.defineProperty(t, "maxInt32", {
                enumerable: !0,
                get: function() {
                    return T.maxInt32
                }
            }), Object.defineProperty(t, "maxInt40", {
                enumerable: !0,
                get: function() {
                    return T.maxInt40
                }
            }), Object.defineProperty(t, "maxInt48", {
                enumerable: !0,
                get: function() {
                    return T.maxInt48
                }
            }), Object.defineProperty(t, "maxInt56", {
                enumerable: !0,
                get: function() {
                    return T.maxInt56
                }
            }), Object.defineProperty(t, "maxInt64", {
                enumerable: !0,
                get: function() {
                    return T.maxInt64
                }
            }), Object.defineProperty(t, "maxInt72", {
                enumerable: !0,
                get: function() {
                    return T.maxInt72
                }
            }), Object.defineProperty(t, "maxInt80", {
                enumerable: !0,
                get: function() {
                    return T.maxInt80
                }
            }), Object.defineProperty(t, "maxInt88", {
                enumerable: !0,
                get: function() {
                    return T.maxInt88
                }
            }), Object.defineProperty(t, "maxInt96", {
                enumerable: !0,
                get: function() {
                    return T.maxInt96
                }
            }), Object.defineProperty(t, "maxInt104", {
                enumerable: !0,
                get: function() {
                    return T.maxInt104
                }
            }), Object.defineProperty(t, "maxInt112", {
                enumerable: !0,
                get: function() {
                    return T.maxInt112
                }
            }), Object.defineProperty(t, "maxInt120", {
                enumerable: !0,
                get: function() {
                    return T.maxInt120
                }
            }), Object.defineProperty(t, "maxInt128", {
                enumerable: !0,
                get: function() {
                    return T.maxInt128
                }
            }), Object.defineProperty(t, "maxInt136", {
                enumerable: !0,
                get: function() {
                    return T.maxInt136
                }
            }), Object.defineProperty(t, "maxInt144", {
                enumerable: !0,
                get: function() {
                    return T.maxInt144
                }
            }), Object.defineProperty(t, "maxInt152", {
                enumerable: !0,
                get: function() {
                    return T.maxInt152
                }
            }), Object.defineProperty(t, "maxInt160", {
                enumerable: !0,
                get: function() {
                    return T.maxInt160
                }
            }), Object.defineProperty(t, "maxInt168", {
                enumerable: !0,
                get: function() {
                    return T.maxInt168
                }
            }), Object.defineProperty(t, "maxInt176", {
                enumerable: !0,
                get: function() {
                    return T.maxInt176
                }
            }), Object.defineProperty(t, "maxInt184", {
                enumerable: !0,
                get: function() {
                    return T.maxInt184
                }
            }), Object.defineProperty(t, "maxInt192", {
                enumerable: !0,
                get: function() {
                    return T.maxInt192
                }
            }), Object.defineProperty(t, "maxInt200", {
                enumerable: !0,
                get: function() {
                    return T.maxInt200
                }
            }), Object.defineProperty(t, "maxInt208", {
                enumerable: !0,
                get: function() {
                    return T.maxInt208
                }
            }), Object.defineProperty(t, "maxInt216", {
                enumerable: !0,
                get: function() {
                    return T.maxInt216
                }
            }), Object.defineProperty(t, "maxInt224", {
                enumerable: !0,
                get: function() {
                    return T.maxInt224
                }
            }), Object.defineProperty(t, "maxInt232", {
                enumerable: !0,
                get: function() {
                    return T.maxInt232
                }
            }), Object.defineProperty(t, "maxInt240", {
                enumerable: !0,
                get: function() {
                    return T.maxInt240
                }
            }), Object.defineProperty(t, "maxInt248", {
                enumerable: !0,
                get: function() {
                    return T.maxInt248
                }
            }), Object.defineProperty(t, "maxInt256", {
                enumerable: !0,
                get: function() {
                    return T.maxInt256
                }
            }), Object.defineProperty(t, "maxUint8", {
                enumerable: !0,
                get: function() {
                    return T.maxUint8
                }
            }), Object.defineProperty(t, "maxUint16", {
                enumerable: !0,
                get: function() {
                    return T.maxUint16
                }
            }), Object.defineProperty(t, "maxUint24", {
                enumerable: !0,
                get: function() {
                    return T.maxUint24
                }
            }), Object.defineProperty(t, "maxUint32", {
                enumerable: !0,
                get: function() {
                    return T.maxUint32
                }
            }), Object.defineProperty(t, "maxUint40", {
                enumerable: !0,
                get: function() {
                    return T.maxUint40
                }
            }), Object.defineProperty(t, "maxUint48", {
                enumerable: !0,
                get: function() {
                    return T.maxUint48
                }
            }), Object.defineProperty(t, "maxUint56", {
                enumerable: !0,
                get: function() {
                    return T.maxUint56
                }
            }), Object.defineProperty(t, "maxUint64", {
                enumerable: !0,
                get: function() {
                    return T.maxUint64
                }
            }), Object.defineProperty(t, "maxUint72", {
                enumerable: !0,
                get: function() {
                    return T.maxUint72
                }
            }), Object.defineProperty(t, "maxUint80", {
                enumerable: !0,
                get: function() {
                    return T.maxUint80
                }
            }), Object.defineProperty(t, "maxUint88", {
                enumerable: !0,
                get: function() {
                    return T.maxUint88
                }
            }), Object.defineProperty(t, "maxUint96", {
                enumerable: !0,
                get: function() {
                    return T.maxUint96
                }
            }), Object.defineProperty(t, "maxUint104", {
                enumerable: !0,
                get: function() {
                    return T.maxUint104
                }
            }), Object.defineProperty(t, "maxUint112", {
                enumerable: !0,
                get: function() {
                    return T.maxUint112
                }
            }), Object.defineProperty(t, "maxUint120", {
                enumerable: !0,
                get: function() {
                    return T.maxUint120
                }
            }), Object.defineProperty(t, "maxUint128", {
                enumerable: !0,
                get: function() {
                    return T.maxUint128
                }
            }), Object.defineProperty(t, "maxUint136", {
                enumerable: !0,
                get: function() {
                    return T.maxUint136
                }
            }), Object.defineProperty(t, "maxUint144", {
                enumerable: !0,
                get: function() {
                    return T.maxUint144
                }
            }), Object.defineProperty(t, "maxUint152", {
                enumerable: !0,
                get: function() {
                    return T.maxUint152
                }
            }), Object.defineProperty(t, "maxUint160", {
                enumerable: !0,
                get: function() {
                    return T.maxUint160
                }
            }), Object.defineProperty(t, "maxUint168", {
                enumerable: !0,
                get: function() {
                    return T.maxUint168
                }
            }), Object.defineProperty(t, "maxUint176", {
                enumerable: !0,
                get: function() {
                    return T.maxUint176
                }
            }), Object.defineProperty(t, "maxUint184", {
                enumerable: !0,
                get: function() {
                    return T.maxUint184
                }
            }), Object.defineProperty(t, "maxUint192", {
                enumerable: !0,
                get: function() {
                    return T.maxUint192
                }
            }), Object.defineProperty(t, "maxUint200", {
                enumerable: !0,
                get: function() {
                    return T.maxUint200
                }
            }), Object.defineProperty(t, "maxUint208", {
                enumerable: !0,
                get: function() {
                    return T.maxUint208
                }
            }), Object.defineProperty(t, "maxUint216", {
                enumerable: !0,
                get: function() {
                    return T.maxUint216
                }
            }), Object.defineProperty(t, "maxUint224", {
                enumerable: !0,
                get: function() {
                    return T.maxUint224
                }
            }), Object.defineProperty(t, "maxUint232", {
                enumerable: !0,
                get: function() {
                    return T.maxUint232
                }
            }), Object.defineProperty(t, "maxUint240", {
                enumerable: !0,
                get: function() {
                    return T.maxUint240
                }
            }), Object.defineProperty(t, "maxUint248", {
                enumerable: !0,
                get: function() {
                    return T.maxUint248
                }
            }), Object.defineProperty(t, "maxUint256", {
                enumerable: !0,
                get: function() {
                    return T.maxUint256
                }
            }), Object.defineProperty(t, "minInt8", {
                enumerable: !0,
                get: function() {
                    return T.minInt8
                }
            }), Object.defineProperty(t, "minInt16", {
                enumerable: !0,
                get: function() {
                    return T.minInt16
                }
            }), Object.defineProperty(t, "minInt24", {
                enumerable: !0,
                get: function() {
                    return T.minInt24
                }
            }), Object.defineProperty(t, "minInt32", {
                enumerable: !0,
                get: function() {
                    return T.minInt32
                }
            }), Object.defineProperty(t, "minInt40", {
                enumerable: !0,
                get: function() {
                    return T.minInt40
                }
            }), Object.defineProperty(t, "minInt48", {
                enumerable: !0,
                get: function() {
                    return T.minInt48
                }
            }), Object.defineProperty(t, "minInt56", {
                enumerable: !0,
                get: function() {
                    return T.minInt56
                }
            }), Object.defineProperty(t, "minInt64", {
                enumerable: !0,
                get: function() {
                    return T.minInt64
                }
            }), Object.defineProperty(t, "minInt72", {
                enumerable: !0,
                get: function() {
                    return T.minInt72
                }
            }), Object.defineProperty(t, "minInt80", {
                enumerable: !0,
                get: function() {
                    return T.minInt80
                }
            }), Object.defineProperty(t, "minInt88", {
                enumerable: !0,
                get: function() {
                    return T.minInt88
                }
            }), Object.defineProperty(t, "minInt96", {
                enumerable: !0,
                get: function() {
                    return T.minInt96
                }
            }), Object.defineProperty(t, "minInt104", {
                enumerable: !0,
                get: function() {
                    return T.minInt104
                }
            }), Object.defineProperty(t, "minInt112", {
                enumerable: !0,
                get: function() {
                    return T.minInt112
                }
            }), Object.defineProperty(t, "minInt120", {
                enumerable: !0,
                get: function() {
                    return T.minInt120
                }
            }), Object.defineProperty(t, "minInt128", {
                enumerable: !0,
                get: function() {
                    return T.minInt128
                }
            }), Object.defineProperty(t, "minInt136", {
                enumerable: !0,
                get: function() {
                    return T.minInt136
                }
            }), Object.defineProperty(t, "minInt144", {
                enumerable: !0,
                get: function() {
                    return T.minInt144
                }
            }), Object.defineProperty(t, "minInt152", {
                enumerable: !0,
                get: function() {
                    return T.minInt152
                }
            }), Object.defineProperty(t, "minInt160", {
                enumerable: !0,
                get: function() {
                    return T.minInt160
                }
            }), Object.defineProperty(t, "minInt168", {
                enumerable: !0,
                get: function() {
                    return T.minInt168
                }
            }), Object.defineProperty(t, "minInt176", {
                enumerable: !0,
                get: function() {
                    return T.minInt176
                }
            }), Object.defineProperty(t, "minInt184", {
                enumerable: !0,
                get: function() {
                    return T.minInt184
                }
            }), Object.defineProperty(t, "minInt192", {
                enumerable: !0,
                get: function() {
                    return T.minInt192
                }
            }), Object.defineProperty(t, "minInt200", {
                enumerable: !0,
                get: function() {
                    return T.minInt200
                }
            }), Object.defineProperty(t, "minInt208", {
                enumerable: !0,
                get: function() {
                    return T.minInt208
                }
            }), Object.defineProperty(t, "minInt216", {
                enumerable: !0,
                get: function() {
                    return T.minInt216
                }
            }), Object.defineProperty(t, "minInt224", {
                enumerable: !0,
                get: function() {
                    return T.minInt224
                }
            }), Object.defineProperty(t, "minInt232", {
                enumerable: !0,
                get: function() {
                    return T.minInt232
                }
            }), Object.defineProperty(t, "minInt240", {
                enumerable: !0,
                get: function() {
                    return T.minInt240
                }
            }), Object.defineProperty(t, "minInt248", {
                enumerable: !0,
                get: function() {
                    return T.minInt248
                }
            }), Object.defineProperty(t, "minInt256", {
                enumerable: !0,
                get: function() {
                    return T.minInt256
                }
            });
            var x = r(15014);
            Object.defineProperty(t, "zeroHash", {
                enumerable: !0,
                get: function() {
                    return x.zeroHash
                }
            });
            var A = r(39173);
            Object.defineProperty(t, "presignMessagePrefix", {
                enumerable: !0,
                get: function() {
                    return A.presignMessagePrefix
                }
            });
            var M = r(31480);
            Object.defineProperty(t, "AbiConstructorNotFoundError", {
                enumerable: !0,
                get: function() {
                    return M.AbiConstructorNotFoundError
                }
            }), Object.defineProperty(t, "AbiConstructorParamsNotFoundError", {
                enumerable: !0,
                get: function() {
                    return M.AbiConstructorParamsNotFoundError
                }
            }), Object.defineProperty(t, "AbiDecodingDataSizeInvalidError", {
                enumerable: !0,
                get: function() {
                    return M.AbiDecodingDataSizeInvalidError
                }
            }), Object.defineProperty(t, "AbiDecodingDataSizeTooSmallError", {
                enumerable: !0,
                get: function() {
                    return M.AbiDecodingDataSizeTooSmallError
                }
            }), Object.defineProperty(t, "AbiDecodingZeroDataError", {
                enumerable: !0,
                get: function() {
                    return M.AbiDecodingZeroDataError
                }
            }), Object.defineProperty(t, "AbiEncodingArrayLengthMismatchError", {
                enumerable: !0,
                get: function() {
                    return M.AbiEncodingArrayLengthMismatchError
                }
            }), Object.defineProperty(t, "AbiEncodingLengthMismatchError", {
                enumerable: !0,
                get: function() {
                    return M.AbiEncodingLengthMismatchError
                }
            }), Object.defineProperty(t, "AbiEncodingBytesSizeMismatchError", {
                enumerable: !0,
                get: function() {
                    return M.AbiEncodingBytesSizeMismatchError
                }
            }), Object.defineProperty(t, "AbiErrorInputsNotFoundError", {
                enumerable: !0,
                get: function() {
                    return M.AbiErrorInputsNotFoundError
                }
            }), Object.defineProperty(t, "AbiErrorNotFoundError", {
                enumerable: !0,
                get: function() {
                    return M.AbiErrorNotFoundError
                }
            }), Object.defineProperty(t, "AbiErrorSignatureNotFoundError", {
                enumerable: !0,
                get: function() {
                    return M.AbiErrorSignatureNotFoundError
                }
            }), Object.defineProperty(t, "AbiEventNotFoundError", {
                enumerable: !0,
                get: function() {
                    return M.AbiEventNotFoundError
                }
            }), Object.defineProperty(t, "AbiEventSignatureEmptyTopicsError", {
                enumerable: !0,
                get: function() {
                    return M.AbiEventSignatureEmptyTopicsError
                }
            }), Object.defineProperty(t, "AbiEventSignatureNotFoundError", {
                enumerable: !0,
                get: function() {
                    return M.AbiEventSignatureNotFoundError
                }
            }), Object.defineProperty(t, "AbiFunctionNotFoundError", {
                enumerable: !0,
                get: function() {
                    return M.AbiFunctionNotFoundError
                }
            }), Object.defineProperty(t, "AbiFunctionOutputsNotFoundError", {
                enumerable: !0,
                get: function() {
                    return M.AbiFunctionOutputsNotFoundError
                }
            }), Object.defineProperty(t, "AbiFunctionSignatureNotFoundError", {
                enumerable: !0,
                get: function() {
                    return M.AbiFunctionSignatureNotFoundError
                }
            }), Object.defineProperty(t, "BytesSizeMismatchError", {
                enumerable: !0,
                get: function() {
                    return M.BytesSizeMismatchError
                }
            }), Object.defineProperty(t, "DecodeLogDataMismatch", {
                enumerable: !0,
                get: function() {
                    return M.DecodeLogDataMismatch
                }
            }), Object.defineProperty(t, "DecodeLogTopicsMismatch", {
                enumerable: !0,
                get: function() {
                    return M.DecodeLogTopicsMismatch
                }
            }), Object.defineProperty(t, "InvalidAbiDecodingTypeError", {
                enumerable: !0,
                get: function() {
                    return M.InvalidAbiDecodingTypeError
                }
            }), Object.defineProperty(t, "InvalidAbiEncodingTypeError", {
                enumerable: !0,
                get: function() {
                    return M.InvalidAbiEncodingTypeError
                }
            }), Object.defineProperty(t, "InvalidArrayError", {
                enumerable: !0,
                get: function() {
                    return M.InvalidArrayError
                }
            }), Object.defineProperty(t, "InvalidDefinitionTypeError", {
                enumerable: !0,
                get: function() {
                    return M.InvalidDefinitionTypeError
                }
            }), Object.defineProperty(t, "UnsupportedPackedAbiType", {
                enumerable: !0,
                get: function() {
                    return M.UnsupportedPackedAbiType
                }
            });
            var B = r(9537);
            Object.defineProperty(t, "BaseError", {
                enumerable: !0,
                get: function() {
                    return B.BaseError
                }
            });
            var F = r(28396);
            Object.defineProperty(t, "BlockNotFoundError", {
                enumerable: !0,
                get: function() {
                    return F.BlockNotFoundError
                }
            });
            var N = r(32405);
            Object.defineProperty(t, "CallExecutionError", {
                enumerable: !0,
                get: function() {
                    return N.CallExecutionError
                }
            }), Object.defineProperty(t, "ContractFunctionExecutionError", {
                enumerable: !0,
                get: function() {
                    return N.ContractFunctionExecutionError
                }
            }), Object.defineProperty(t, "ContractFunctionRevertedError", {
                enumerable: !0,
                get: function() {
                    return N.ContractFunctionRevertedError
                }
            }), Object.defineProperty(t, "ContractFunctionZeroDataError", {
                enumerable: !0,
                get: function() {
                    return N.ContractFunctionZeroDataError
                }
            }), Object.defineProperty(t, "RawContractError", {
                enumerable: !0,
                get: function() {
                    return N.RawContractError
                }
            });
            var L = r(80892);
            Object.defineProperty(t, "BaseFeeScalarError", {
                enumerable: !0,
                get: function() {
                    return L.BaseFeeScalarError
                }
            }), Object.defineProperty(t, "Eip1559FeesNotSupportedError", {
                enumerable: !0,
                get: function() {
                    return L.Eip1559FeesNotSupportedError
                }
            }), Object.defineProperty(t, "MaxFeePerGasTooLowError", {
                enumerable: !0,
                get: function() {
                    return L.MaxFeePerGasTooLowError
                }
            });
            var U = r(52091);
            Object.defineProperty(t, "ChainDisconnectedError", {
                enumerable: !0,
                get: function() {
                    return U.ChainDisconnectedError
                }
            }), Object.defineProperty(t, "InternalRpcError", {
                enumerable: !0,
                get: function() {
                    return U.InternalRpcError
                }
            }), Object.defineProperty(t, "InvalidInputRpcError", {
                enumerable: !0,
                get: function() {
                    return U.InvalidInputRpcError
                }
            }), Object.defineProperty(t, "InvalidParamsRpcError", {
                enumerable: !0,
                get: function() {
                    return U.InvalidParamsRpcError
                }
            }), Object.defineProperty(t, "InvalidRequestRpcError", {
                enumerable: !0,
                get: function() {
                    return U.InvalidRequestRpcError
                }
            }), Object.defineProperty(t, "JsonRpcVersionUnsupportedError", {
                enumerable: !0,
                get: function() {
                    return U.JsonRpcVersionUnsupportedError
                }
            }), Object.defineProperty(t, "LimitExceededRpcError", {
                enumerable: !0,
                get: function() {
                    return U.LimitExceededRpcError
                }
            }), Object.defineProperty(t, "MethodNotFoundRpcError", {
                enumerable: !0,
                get: function() {
                    return U.MethodNotFoundRpcError
                }
            }), Object.defineProperty(t, "MethodNotSupportedRpcError", {
                enumerable: !0,
                get: function() {
                    return U.MethodNotSupportedRpcError
                }
            }), Object.defineProperty(t, "ParseRpcError", {
                enumerable: !0,
                get: function() {
                    return U.ParseRpcError
                }
            }), Object.defineProperty(t, "ProviderDisconnectedError", {
                enumerable: !0,
                get: function() {
                    return U.ProviderDisconnectedError
                }
            }), Object.defineProperty(t, "ProviderRpcError", {
                enumerable: !0,
                get: function() {
                    return U.ProviderRpcError
                }
            }), Object.defineProperty(t, "ResourceNotFoundRpcError", {
                enumerable: !0,
                get: function() {
                    return U.ResourceNotFoundRpcError
                }
            }), Object.defineProperty(t, "ResourceUnavailableRpcError", {
                enumerable: !0,
                get: function() {
                    return U.ResourceUnavailableRpcError
                }
            }), Object.defineProperty(t, "RpcError", {
                enumerable: !0,
                get: function() {
                    return U.RpcError
                }
            }), Object.defineProperty(t, "SwitchChainError", {
                enumerable: !0,
                get: function() {
                    return U.SwitchChainError
                }
            }), Object.defineProperty(t, "TransactionRejectedRpcError", {
                enumerable: !0,
                get: function() {
                    return U.TransactionRejectedRpcError
                }
            }), Object.defineProperty(t, "UnauthorizedProviderError", {
                enumerable: !0,
                get: function() {
                    return U.UnauthorizedProviderError
                }
            }), Object.defineProperty(t, "UnknownRpcError", {
                enumerable: !0,
                get: function() {
                    return U.UnknownRpcError
                }
            }), Object.defineProperty(t, "UnsupportedProviderMethodError", {
                enumerable: !0,
                get: function() {
                    return U.UnsupportedProviderMethodError
                }
            }), Object.defineProperty(t, "UserRejectedRequestError", {
                enumerable: !0,
                get: function() {
                    return U.UserRejectedRequestError
                }
            });
            var z = r(95047);
            Object.defineProperty(t, "ChainDoesNotSupportContract", {
                enumerable: !0,
                get: function() {
                    return z.ChainDoesNotSupportContract
                }
            }), Object.defineProperty(t, "ChainMismatchError", {
                enumerable: !0,
                get: function() {
                    return z.ChainMismatchError
                }
            }), Object.defineProperty(t, "ChainNotFoundError", {
                enumerable: !0,
                get: function() {
                    return z.ChainNotFoundError
                }
            }), Object.defineProperty(t, "ClientChainNotConfiguredError", {
                enumerable: !0,
                get: function() {
                    return z.ClientChainNotConfiguredError
                }
            }), Object.defineProperty(t, "InvalidChainIdError", {
                enumerable: !0,
                get: function() {
                    return z.InvalidChainIdError
                }
            });
            var G = r(44225);
            Object.defineProperty(t, "DataLengthTooLongError", {
                enumerable: !0,
                get: function() {
                    return G.DataLengthTooLongError
                }
            }), Object.defineProperty(t, "DataLengthTooShortError", {
                enumerable: !0,
                get: function() {
                    return G.DataLengthTooShortError
                }
            }), Object.defineProperty(t, "InvalidBytesBooleanError", {
                enumerable: !0,
                get: function() {
                    return G.InvalidBytesBooleanError
                }
            }), Object.defineProperty(t, "IntegerOutOfRangeError", {
                enumerable: !0,
                get: function() {
                    return G.IntegerOutOfRangeError
                }
            }), Object.defineProperty(t, "InvalidHexBooleanError", {
                enumerable: !0,
                get: function() {
                    return G.InvalidHexBooleanError
                }
            }), Object.defineProperty(t, "InvalidHexValueError", {
                enumerable: !0,
                get: function() {
                    return G.InvalidHexValueError
                }
            }), Object.defineProperty(t, "OffsetOutOfBoundsError", {
                enumerable: !0,
                get: function() {
                    return G.OffsetOutOfBoundsError
                }
            }), Object.defineProperty(t, "SizeOverflowError", {
                enumerable: !0,
                get: function() {
                    return G.SizeOverflowError
                }
            });
            var W = r(4836);
            Object.defineProperty(t, "EnsAvatarUriResolutionError", {
                enumerable: !0,
                get: function() {
                    return W.EnsAvatarUriResolutionError
                }
            }), Object.defineProperty(t, "EnsAvatarInvalidNftUriError", {
                enumerable: !0,
                get: function() {
                    return W.EnsAvatarInvalidNftUriError
                }
            }), Object.defineProperty(t, "EnsAvatarUnsupportedNamespaceError", {
                enumerable: !0,
                get: function() {
                    return W.EnsAvatarUnsupportedNamespaceError
                }
            });
            var V = r(22577);
            Object.defineProperty(t, "EstimateGasExecutionError", {
                enumerable: !0,
                get: function() {
                    return V.EstimateGasExecutionError
                }
            });
            var Q = r(72911);
            Object.defineProperty(t, "ExecutionRevertedError", {
                enumerable: !0,
                get: function() {
                    return Q.ExecutionRevertedError
                }
            }), Object.defineProperty(t, "FeeCapTooHighError", {
                enumerable: !0,
                get: function() {
                    return Q.FeeCapTooHighError
                }
            }), Object.defineProperty(t, "FeeCapTooLowError", {
                enumerable: !0,
                get: function() {
                    return Q.FeeCapTooLowError
                }
            }), Object.defineProperty(t, "InsufficientFundsError", {
                enumerable: !0,
                get: function() {
                    return Q.InsufficientFundsError
                }
            }), Object.defineProperty(t, "IntrinsicGasTooHighError", {
                enumerable: !0,
                get: function() {
                    return Q.IntrinsicGasTooHighError
                }
            }), Object.defineProperty(t, "IntrinsicGasTooLowError", {
                enumerable: !0,
                get: function() {
                    return Q.IntrinsicGasTooLowError
                }
            }), Object.defineProperty(t, "NonceMaxValueError", {
                enumerable: !0,
                get: function() {
                    return Q.NonceMaxValueError
                }
            }), Object.defineProperty(t, "NonceTooHighError", {
                enumerable: !0,
                get: function() {
                    return Q.NonceTooHighError
                }
            }), Object.defineProperty(t, "NonceTooLowError", {
                enumerable: !0,
                get: function() {
                    return Q.NonceTooLowError
                }
            }), Object.defineProperty(t, "TipAboveFeeCapError", {
                enumerable: !0,
                get: function() {
                    return Q.TipAboveFeeCapError
                }
            }), Object.defineProperty(t, "TransactionTypeNotSupportedError", {
                enumerable: !0,
                get: function() {
                    return Q.TransactionTypeNotSupportedError
                }
            }), Object.defineProperty(t, "UnknownNodeError", {
                enumerable: !0,
                get: function() {
                    return Q.UnknownNodeError
                }
            });
            var K = r(25624);
            Object.defineProperty(t, "FilterTypeNotSupportedError", {
                enumerable: !0,
                get: function() {
                    return K.FilterTypeNotSupportedError
                }
            });
            var Y = r(58323);
            Object.defineProperty(t, "HttpRequestError", {
                enumerable: !0,
                get: function() {
                    return Y.HttpRequestError
                }
            }), Object.defineProperty(t, "RpcRequestError", {
                enumerable: !0,
                get: function() {
                    return Y.RpcRequestError
                }
            }), Object.defineProperty(t, "TimeoutError", {
                enumerable: !0,
                get: function() {
                    return Y.TimeoutError
                }
            }), Object.defineProperty(t, "WebSocketRequestError", {
                enumerable: !0,
                get: function() {
                    return Y.WebSocketRequestError
                }
            });
            var J = r(90874);
            Object.defineProperty(t, "InvalidAddressError", {
                enumerable: !0,
                get: function() {
                    return J.InvalidAddressError
                }
            });
            var X = r(65750);
            Object.defineProperty(t, "FeeConflictError", {
                enumerable: !0,
                get: function() {
                    return X.FeeConflictError
                }
            }), Object.defineProperty(t, "InvalidLegacyVError", {
                enumerable: !0,
                get: function() {
                    return X.InvalidLegacyVError
                }
            }), Object.defineProperty(t, "InvalidSerializableTransactionError", {
                enumerable: !0,
                get: function() {
                    return X.InvalidSerializableTransactionError
                }
            }), Object.defineProperty(t, "InvalidSerializedTransactionError", {
                enumerable: !0,
                get: function() {
                    return X.InvalidSerializedTransactionError
                }
            }), Object.defineProperty(t, "InvalidSerializedTransactionTypeError", {
                enumerable: !0,
                get: function() {
                    return X.InvalidSerializedTransactionTypeError
                }
            }), Object.defineProperty(t, "InvalidStorageKeySizeError", {
                enumerable: !0,
                get: function() {
                    return X.InvalidStorageKeySizeError
                }
            }), Object.defineProperty(t, "TransactionExecutionError", {
                enumerable: !0,
                get: function() {
                    return X.TransactionExecutionError
                }
            }), Object.defineProperty(t, "TransactionNotFoundError", {
                enumerable: !0,
                get: function() {
                    return X.TransactionNotFoundError
                }
            }), Object.defineProperty(t, "TransactionReceiptNotFoundError", {
                enumerable: !0,
                get: function() {
                    return X.TransactionReceiptNotFoundError
                }
            }), Object.defineProperty(t, "WaitForTransactionReceiptTimeoutError", {
                enumerable: !0,
                get: function() {
                    return X.WaitForTransactionReceiptTimeoutError
                }
            });
            var er = r(47037);
            Object.defineProperty(t, "SizeExceedsPaddingSizeError", {
                enumerable: !0,
                get: function() {
                    return er.SizeExceedsPaddingSizeError
                }
            }), Object.defineProperty(t, "SliceOffsetOutOfBoundsError", {
                enumerable: !0,
                get: function() {
                    return er.SliceOffsetOutOfBoundsError
                }
            });
            var en = r(86388);
            Object.defineProperty(t, "UrlRequiredError", {
                enumerable: !0,
                get: function() {
                    return en.UrlRequiredError
                }
            });
            var ei = r(91356);
            Object.defineProperty(t, "labelhash", {
                enumerable: !0,
                get: function() {
                    return ei.labelhash
                }
            });
            var eo = r(86373);
            Object.defineProperty(t, "namehash", {
                enumerable: !0,
                get: function() {
                    return eo.namehash
                }
            });
            var ea = r(94160);
            Object.defineProperty(t, "defineBlock", {
                enumerable: !0,
                get: function() {
                    return ea.defineBlock
                }
            }), Object.defineProperty(t, "formatBlock", {
                enumerable: !0,
                get: function() {
                    return ea.formatBlock
                }
            });
            var es = r(75765);
            Object.defineProperty(t, "formatLog", {
                enumerable: !0,
                get: function() {
                    return es.formatLog
                }
            });
            var ec = r(29784);
            Object.defineProperty(t, "decodeAbiParameters", {
                enumerable: !0,
                get: function() {
                    return ec.decodeAbiParameters
                }
            });
            var eu = r(42772);
            Object.defineProperty(t, "decodeDeployData", {
                enumerable: !0,
                get: function() {
                    return eu.decodeDeployData
                }
            });
            var el = r(55865);
            Object.defineProperty(t, "decodeErrorResult", {
                enumerable: !0,
                get: function() {
                    return el.decodeErrorResult
                }
            });
            var ed = r(8334);
            Object.defineProperty(t, "decodeEventLog", {
                enumerable: !0,
                get: function() {
                    return ed.decodeEventLog
                }
            });
            var ef = r(17354);
            Object.defineProperty(t, "decodeFunctionData", {
                enumerable: !0,
                get: function() {
                    return ef.decodeFunctionData
                }
            });
            var ep = r(7889);
            Object.defineProperty(t, "decodeFunctionResult", {
                enumerable: !0,
                get: function() {
                    return ep.decodeFunctionResult
                }
            });
            var eh = r(43044);
            Object.defineProperty(t, "encodeAbiParameters", {
                enumerable: !0,
                get: function() {
                    return eh.encodeAbiParameters
                }
            });
            var em = r(59697);
            Object.defineProperty(t, "encodeDeployData", {
                enumerable: !0,
                get: function() {
                    return em.encodeDeployData
                }
            });
            var ey = r(19265);
            Object.defineProperty(t, "encodeErrorResult", {
                enumerable: !0,
                get: function() {
                    return ey.encodeErrorResult
                }
            });
            var eb = r(35840);
            Object.defineProperty(t, "encodeEventTopics", {
                enumerable: !0,
                get: function() {
                    return eb.encodeEventTopics
                }
            });
            var eg = r(61895);
            Object.defineProperty(t, "encodeFunctionData", {
                enumerable: !0,
                get: function() {
                    return eg.encodeFunctionData
                }
            });
            var ev = r(10606);
            Object.defineProperty(t, "encodeFunctionResult", {
                enumerable: !0,
                get: function() {
                    return ev.encodeFunctionResult
                }
            });
            var eE = r(1603);
            Object.defineProperty(t, "defineTransaction", {
                enumerable: !0,
                get: function() {
                    return eE.defineTransaction
                }
            }), Object.defineProperty(t, "formatTransaction", {
                enumerable: !0,
                get: function() {
                    return eE.formatTransaction
                }
            }), Object.defineProperty(t, "transactionType", {
                enumerable: !0,
                get: function() {
                    return eE.transactionType
                }
            });
            var ew = r(89189);
            Object.defineProperty(t, "defineTransactionReceipt", {
                enumerable: !0,
                get: function() {
                    return ew.defineTransactionReceipt
                }
            }), Object.defineProperty(t, "formatTransactionReceipt", {
                enumerable: !0,
                get: function() {
                    return ew.formatTransactionReceipt
                }
            });
            var e_ = r(63465);
            Object.defineProperty(t, "defineTransactionRequest", {
                enumerable: !0,
                get: function() {
                    return e_.defineTransactionRequest
                }
            }), Object.defineProperty(t, "formatTransactionRequest", {
                enumerable: !0,
                get: function() {
                    return e_.formatTransactionRequest
                }
            }), Object.defineProperty(t, "rpcTransactionType", {
                enumerable: !0,
                get: function() {
                    return e_.rpcTransactionType
                }
            });
            var eP = r(33493);
            Object.defineProperty(t, "getAbiItem", {
                enumerable: !0,
                get: function() {
                    return eP.getAbiItem
                }
            });
            var eO = r(62105);
            Object.defineProperty(t, "getContractAddress", {
                enumerable: !0,
                get: function() {
                    return eO.getContractAddress
                }
            }), Object.defineProperty(t, "getCreate2Address", {
                enumerable: !0,
                get: function() {
                    return eO.getCreate2Address
                }
            }), Object.defineProperty(t, "getCreateAddress", {
                enumerable: !0,
                get: function() {
                    return eO.getCreateAddress
                }
            });
            var eT = r(17814);
            Object.defineProperty(t, "getSerializedTransactionType", {
                enumerable: !0,
                get: function() {
                    return eT.getSerializedTransactionType
                }
            });
            var ex = r(38799);
            Object.defineProperty(t, "getTransactionType", {
                enumerable: !0,
                get: function() {
                    return ex.getTransactionType
                }
            });
            var eS = r(11699);
            Object.defineProperty(t, "hashDomain", {
                enumerable: !0,
                get: function() {
                    return eS.hashDomain
                }
            }), Object.defineProperty(t, "hashTypedData", {
                enumerable: !0,
                get: function() {
                    return eS.hashTypedData
                }
            });
            var eI = r(40792);
            Object.defineProperty(t, "compactSignatureToSignature", {
                enumerable: !0,
                get: function() {
                    return eI.compactSignatureToSignature
                }
            });
            var eA = r(7482);
            Object.defineProperty(t, "hexToCompactSignature", {
                enumerable: !0,
                get: function() {
                    return eA.hexToCompactSignature
                }
            });
            var eC = r(56233);
            Object.defineProperty(t, "hexToSignature", {
                enumerable: !0,
                get: function() {
                    return eC.hexToSignature
                }
            });
            var eD = r(73809);
            Object.defineProperty(t, "recoverAddress", {
                enumerable: !0,
                get: function() {
                    return eD.recoverAddress
                }
            });
            var ej = r(26596);
            Object.defineProperty(t, "recoverMessageAddress", {
                enumerable: !0,
                get: function() {
                    return ej.recoverMessageAddress
                }
            });
            var ek = r(18021);
            Object.defineProperty(t, "recoverPublicKey", {
                enumerable: !0,
                get: function() {
                    return ek.recoverPublicKey
                }
            });
            var eR = r(42577);
            Object.defineProperty(t, "recoverTypedDataAddress", {
                enumerable: !0,
                get: function() {
                    return eR.recoverTypedDataAddress
                }
            });
            var eM = r(95549);
            Object.defineProperty(t, "signatureToCompactSignature", {
                enumerable: !0,
                get: function() {
                    return eM.signatureToCompactSignature
                }
            });
            var eB = r(24741);
            Object.defineProperty(t, "compactSignatureToHex", {
                enumerable: !0,
                get: function() {
                    return eB.compactSignatureToHex
                }
            });
            var eF = r(80742);
            Object.defineProperty(t, "signatureToHex", {
                enumerable: !0,
                get: function() {
                    return eF.signatureToHex
                }
            });
            var eN = r(57116);
            Object.defineProperty(t, "bytesToRlp", {
                enumerable: !0,
                get: function() {
                    return eN.bytesToRlp
                }
            }), Object.defineProperty(t, "hexToRlp", {
                enumerable: !0,
                get: function() {
                    return eN.hexToRlp
                }
            }), Object.defineProperty(t, "toRlp", {
                enumerable: !0,
                get: function() {
                    return eN.toRlp
                }
            });
            var eL = r(15781);
            Object.defineProperty(t, "verifyMessage", {
                enumerable: !0,
                get: function() {
                    return eL.verifyMessage
                }
            });
            var eU = r(91022);
            Object.defineProperty(t, "verifyTypedData", {
                enumerable: !0,
                get: function() {
                    return eU.verifyTypedData
                }
            });
            var eq = r(89399);
            Object.defineProperty(t, "assertRequest", {
                enumerable: !0,
                get: function() {
                    return eq.assertRequest
                }
            });
            var eH = r(10261);
            Object.defineProperty(t, "assertTransactionEIP1559", {
                enumerable: !0,
                get: function() {
                    return eH.assertTransactionEIP1559
                }
            }), Object.defineProperty(t, "assertTransactionEIP2930", {
                enumerable: !0,
                get: function() {
                    return eH.assertTransactionEIP2930
                }
            }), Object.defineProperty(t, "assertTransactionLegacy", {
                enumerable: !0,
                get: function() {
                    return eH.assertTransactionLegacy
                }
            });
            var e$ = r(58640);
            Object.defineProperty(t, "boolToBytes", {
                enumerable: !0,
                get: function() {
                    return e$.boolToBytes
                }
            }), Object.defineProperty(t, "hexToBytes", {
                enumerable: !0,
                get: function() {
                    return e$.hexToBytes
                }
            }), Object.defineProperty(t, "numberToBytes", {
                enumerable: !0,
                get: function() {
                    return e$.numberToBytes
                }
            }), Object.defineProperty(t, "stringToBytes", {
                enumerable: !0,
                get: function() {
                    return e$.stringToBytes
                }
            }), Object.defineProperty(t, "toBytes", {
                enumerable: !0,
                get: function() {
                    return e$.toBytes
                }
            });
            var ez = r(32054);
            Object.defineProperty(t, "boolToHex", {
                enumerable: !0,
                get: function() {
                    return ez.boolToHex
                }
            }), Object.defineProperty(t, "bytesToHex", {
                enumerable: !0,
                get: function() {
                    return ez.bytesToHex
                }
            }), Object.defineProperty(t, "numberToHex", {
                enumerable: !0,
                get: function() {
                    return ez.numberToHex
                }
            }), Object.defineProperty(t, "stringToHex", {
                enumerable: !0,
                get: function() {
                    return ez.stringToHex
                }
            }), Object.defineProperty(t, "toHex", {
                enumerable: !0,
                get: function() {
                    return ez.toHex
                }
            });
            var eG = r(9694);
            Object.defineProperty(t, "bytesToBigInt", {
                enumerable: !0,
                get: function() {
                    return eG.bytesToBigInt
                }
            }), Object.defineProperty(t, "bytesToBigint", {
                enumerable: !0,
                get: function() {
                    return eG.bytesToBigInt
                }
            }), Object.defineProperty(t, "bytesToBool", {
                enumerable: !0,
                get: function() {
                    return eG.bytesToBool
                }
            }), Object.defineProperty(t, "bytesToNumber", {
                enumerable: !0,
                get: function() {
                    return eG.bytesToNumber
                }
            }), Object.defineProperty(t, "bytesToString", {
                enumerable: !0,
                get: function() {
                    return eG.bytesToString
                }
            }), Object.defineProperty(t, "fromBytes", {
                enumerable: !0,
                get: function() {
                    return eG.fromBytes
                }
            });
            var eW = r(92519);
            Object.defineProperty(t, "ccipFetch", {
                enumerable: !0,
                get: function() {
                    return eW.ccipFetch
                }
            }), Object.defineProperty(t, "offchainLookup", {
                enumerable: !0,
                get: function() {
                    return eW.offchainLookup
                }
            }), Object.defineProperty(t, "offchainLookupAbiItem", {
                enumerable: !0,
                get: function() {
                    return eW.offchainLookupAbiItem
                }
            }), Object.defineProperty(t, "offchainLookupSignature", {
                enumerable: !0,
                get: function() {
                    return eW.offchainLookupSignature
                }
            });
            var eV = r(62127);
            Object.defineProperty(t, "concat", {
                enumerable: !0,
                get: function() {
                    return eV.concat
                }
            }), Object.defineProperty(t, "concatBytes", {
                enumerable: !0,
                get: function() {
                    return eV.concatBytes
                }
            }), Object.defineProperty(t, "concatHex", {
                enumerable: !0,
                get: function() {
                    return eV.concatHex
                }
            });
            var eQ = r(43179);
            Object.defineProperty(t, "assertCurrentChain", {
                enumerable: !0,
                get: function() {
                    return eQ.assertCurrentChain
                }
            });
            var eK = r(50356);
            Object.defineProperty(t, "defineChain", {
                enumerable: !0,
                get: function() {
                    return eK.defineChain
                }
            });
            var eY = r(78611);
            Object.defineProperty(t, "extractChain", {
                enumerable: !0,
                get: function() {
                    return eY.extractChain
                }
            });
            var eZ = r(54971);
            Object.defineProperty(t, "getChainContractAddress", {
                enumerable: !0,
                get: function() {
                    return eZ.getChainContractAddress
                }
            });
            var eJ = r(32014);
            Object.defineProperty(t, "encodePacked", {
                enumerable: !0,
                get: function() {
                    return eJ.encodePacked
                }
            });
            var eX = r(53711);
            Object.defineProperty(t, "formatEther", {
                enumerable: !0,
                get: function() {
                    return eX.formatEther
                }
            });
            var e0 = r(14958);
            Object.defineProperty(t, "formatGwei", {
                enumerable: !0,
                get: function() {
                    return e0.formatGwei
                }
            });
            var e1 = r(62593);
            Object.defineProperty(t, "formatUnits", {
                enumerable: !0,
                get: function() {
                    return e1.formatUnits
                }
            });
            var e2 = r(4744);
            Object.defineProperty(t, "fromHex", {
                enumerable: !0,
                get: function() {
                    return e2.fromHex
                }
            }), Object.defineProperty(t, "hexToBigInt", {
                enumerable: !0,
                get: function() {
                    return e2.hexToBigInt
                }
            }), Object.defineProperty(t, "hexToBool", {
                enumerable: !0,
                get: function() {
                    return e2.hexToBool
                }
            }), Object.defineProperty(t, "hexToNumber", {
                enumerable: !0,
                get: function() {
                    return e2.hexToNumber
                }
            }), Object.defineProperty(t, "hexToString", {
                enumerable: !0,
                get: function() {
                    return e2.hexToString
                }
            });
            var e5 = r(56591);
            Object.defineProperty(t, "fromRlp", {
                enumerable: !0,
                get: function() {
                    return e5.fromRlp
                }
            });
            var e3 = r(46972);
            Object.defineProperty(t, "checksumAddress", {
                enumerable: !0,
                get: function() {
                    return e3.checksumAddress
                }
            }), Object.defineProperty(t, "getAddress", {
                enumerable: !0,
                get: function() {
                    return e3.getAddress
                }
            });
            var e6 = r(25229);
            Object.defineProperty(t, "getContractError", {
                enumerable: !0,
                get: function() {
                    return e6.getContractError
                }
            });
            var e8 = r(43225);
            Object.defineProperty(t, "getEventSelector", {
                enumerable: !0,
                get: function() {
                    return e8.getEventSelector
                }
            });
            var e4 = r(74973);
            Object.defineProperty(t, "getEventSignature", {
                enumerable: !0,
                get: function() {
                    return e4.getEventSignature
                }
            });
            var e9 = r(17883);
            Object.defineProperty(t, "getFunctionSelector", {
                enumerable: !0,
                get: function() {
                    return e9.getFunctionSelector
                }
            });
            var e7 = r(91738);
            Object.defineProperty(t, "getFunctionSignature", {
                enumerable: !0,
                get: function() {
                    return e7.getFunctionSignature
                }
            });
            var tr = r(36708);
            Object.defineProperty(t, "hashMessage", {
                enumerable: !0,
                get: function() {
                    return tr.hashMessage
                }
            });
            var tn = r(74815);
            Object.defineProperty(t, "isAddress", {
                enumerable: !0,
                get: function() {
                    return tn.isAddress
                }
            });
            var ti = r(25680);
            Object.defineProperty(t, "isAddressEqual", {
                enumerable: !0,
                get: function() {
                    return ti.isAddressEqual
                }
            });
            var to = r(59071);
            Object.defineProperty(t, "isBytes", {
                enumerable: !0,
                get: function() {
                    return to.isBytes
                }
            });
            var ta = r(37760);
            Object.defineProperty(t, "isHash", {
                enumerable: !0,
                get: function() {
                    return ta.isHash
                }
            });
            var ts = r(90383);
            Object.defineProperty(t, "isHex", {
                enumerable: !0,
                get: function() {
                    return ts.isHex
                }
            });
            var tc = r(34650);
            Object.defineProperty(t, "keccak256", {
                enumerable: !0,
                get: function() {
                    return tc.keccak256
                }
            });
            var tu = r(95946);
            Object.defineProperty(t, "pad", {
                enumerable: !0,
                get: function() {
                    return tu.pad
                }
            }), Object.defineProperty(t, "padBytes", {
                enumerable: !0,
                get: function() {
                    return tu.padBytes
                }
            }), Object.defineProperty(t, "padHex", {
                enumerable: !0,
                get: function() {
                    return tu.padHex
                }
            });
            var tl = r(74771);
            Object.defineProperty(t, "parseEther", {
                enumerable: !0,
                get: function() {
                    return tl.parseEther
                }
            });
            var td = r(349);
            Object.defineProperty(t, "parseGwei", {
                enumerable: !0,
                get: function() {
                    return td.parseGwei
                }
            });
            var tf = r(41328);
            Object.defineProperty(t, "parseTransaction", {
                enumerable: !0,
                get: function() {
                    return tf.parseTransaction
                }
            });
            var tp = r(30464);
            Object.defineProperty(t, "parseUnits", {
                enumerable: !0,
                get: function() {
                    return tp.parseUnits
                }
            });
            var th = r(49560);
            Object.defineProperty(t, "serializeAccessList", {
                enumerable: !0,
                get: function() {
                    return th.serializeAccessList
                }
            });
            var tm = r(44530);
            Object.defineProperty(t, "serializeTransaction", {
                enumerable: !0,
                get: function() {
                    return tm.serializeTransaction
                }
            });
            var ty = r(93071);
            Object.defineProperty(t, "size", {
                enumerable: !0,
                get: function() {
                    return ty.size
                }
            });
            var tb = r(97307);
            Object.defineProperty(t, "slice", {
                enumerable: !0,
                get: function() {
                    return tb.slice
                }
            }), Object.defineProperty(t, "sliceBytes", {
                enumerable: !0,
                get: function() {
                    return tb.sliceBytes
                }
            }), Object.defineProperty(t, "sliceHex", {
                enumerable: !0,
                get: function() {
                    return tb.sliceHex
                }
            });
            var tg = r(42701);
            Object.defineProperty(t, "stringify", {
                enumerable: !0,
                get: function() {
                    return tg.stringify
                }
            });
            var tv = r(50775);
            Object.defineProperty(t, "trim", {
                enumerable: !0,
                get: function() {
                    return tv.trim
                }
            });
            var tE = r(87059);
            Object.defineProperty(t, "validateTypedData", {
                enumerable: !0,
                get: function() {
                    return tE.validateTypedData
                }
            }), Object.defineProperty(t, "domainSeparator", {
                enumerable: !0,
                get: function() {
                    return tE.domainSeparator
                }
            }), Object.defineProperty(t, "getTypesForEIP712Domain", {
                enumerable: !0,
                get: function() {
                    return tE.getTypesForEIP712Domain
                }
            })
        },
        29784: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.decodeAbiParameters = void 0;
            let n = r(31480),
                i = r(46972),
                o = r(93071),
                a = r(97307),
                s = r(50775),
                c = r(4744),
                u = r(43044);

            function hasDynamicChild(e) {
                let {
                    type: t
                } = e;
                if ("string" === t || "bytes" === t || t.endsWith("[]")) return !0;
                if ("tuple" === t) return e.components ? .some(hasDynamicChild);
                let r = (0, u.getArrayComponents)(e.type);
                return !!(r && hasDynamicChild({ ...e,
                    type: r[1]
                }))
            }
            t.decodeAbiParameters = function(e, t) {
                if ("0x" === t && e.length > 0) throw new n.AbiDecodingZeroDataError;
                if ((0, o.size)(t) && 32 > (0, o.size)(t)) throw new n.AbiDecodingDataSizeTooSmallError({
                    data: t,
                    params: e,
                    size: (0, o.size)(t)
                });
                return function({
                    data: e,
                    params: t
                }) {
                    let r = [],
                        l = 0;
                    for (let d = 0; d < t.length; d++) {
                        if (l >= (0, o.size)(e)) throw new n.AbiDecodingDataSizeTooSmallError({
                            data: e,
                            params: t,
                            size: (0, o.size)(e)
                        });
                        let f = t[d],
                            {
                                consumed: p,
                                value: y
                            } = function decodeParam({
                                data: e,
                                param: t,
                                position: r
                            }) {
                                let o = (0, u.getArrayComponents)(t.type);
                                if (o) {
                                    let [n, i] = o;
                                    return function(e, {
                                        param: t,
                                        length: r,
                                        position: n
                                    }) {
                                        if (!r) {
                                            let r = (0, c.hexToNumber)((0, a.slice)(e, n, n + 32, {
                                                    strict: !0
                                                })),
                                                i = (0, c.hexToNumber)((0, a.slice)(e, r, r + 32, {
                                                    strict: !0
                                                })),
                                                o = 0,
                                                s = [];
                                            for (let n = 0; n < i; ++n) {
                                                let n = decodeParam({
                                                    data: (0, a.slice)(e, r + 32),
                                                    param: t,
                                                    position: o
                                                });
                                                o += n.consumed, s.push(n.value)
                                            }
                                            return {
                                                value: s,
                                                consumed: 32
                                            }
                                        }
                                        if (hasDynamicChild(t)) {
                                            let i = (0, u.getArrayComponents)(t.type),
                                                o = !i ? .[0],
                                                s = 0,
                                                l = [];
                                            for (let i = 0; i < r; ++i) {
                                                let r = (0, c.hexToNumber)((0, a.slice)(e, n, n + 32, {
                                                        strict: !0
                                                    })),
                                                    u = decodeParam({
                                                        data: (0, a.slice)(e, r),
                                                        param: t,
                                                        position: o ? s : 32 * i
                                                    });
                                                s += u.consumed, l.push(u.value)
                                            }
                                            return {
                                                value: l,
                                                consumed: 32
                                            }
                                        }
                                        let i = 0,
                                            o = [];
                                        for (let a = 0; a < r; ++a) {
                                            let r = decodeParam({
                                                data: e,
                                                param: t,
                                                position: n + i
                                            });
                                            i += r.consumed, o.push(r.value)
                                        }
                                        return {
                                            value: o,
                                            consumed: i
                                        }
                                    }(e, {
                                        length: n,
                                        param: { ...t,
                                            type: i
                                        },
                                        position: r
                                    })
                                }
                                if ("tuple" === t.type) return function(e, {
                                    param: t,
                                    position: r
                                }) {
                                    let n = 0 === t.components.length || t.components.some(({
                                            name: e
                                        }) => !e),
                                        i = n ? [] : {},
                                        o = 0;
                                    if (hasDynamicChild(t)) {
                                        let s = (0, c.hexToNumber)((0, a.slice)(e, r, r + 32, {
                                            strict: !0
                                        }));
                                        for (let r = 0; r < t.components.length; ++r) {
                                            let c = t.components[r],
                                                u = decodeParam({
                                                    data: (0, a.slice)(e, s),
                                                    param: c,
                                                    position: o
                                                });
                                            o += u.consumed, i[n ? r : c ? .name] = u.value
                                        }
                                        return {
                                            consumed: 32,
                                            value: i
                                        }
                                    }
                                    for (let a = 0; a < t.components.length; ++a) {
                                        let s = t.components[a],
                                            c = decodeParam({
                                                data: e,
                                                param: s,
                                                position: r + o
                                            });
                                        o += c.consumed, i[n ? a : s ? .name] = c.value
                                    }
                                    return {
                                        consumed: o,
                                        value: i
                                    }
                                }(e, {
                                    param: t,
                                    position: r
                                });
                                if ("string" === t.type) return function(e, {
                                    position: t
                                }) {
                                    let r = (0, c.hexToNumber)((0, a.slice)(e, t, t + 32, {
                                            strict: !0
                                        })),
                                        n = (0, c.hexToNumber)((0, a.slice)(e, r, r + 32, {
                                            strict: !0
                                        }));
                                    if (0 === n) return {
                                        consumed: 32,
                                        value: ""
                                    };
                                    let i = (0, c.hexToString)((0, s.trim)((0, a.slice)(e, r + 32, r + 32 + n, {
                                        strict: !0
                                    })));
                                    return {
                                        consumed: 32,
                                        value: i
                                    }
                                }(e, {
                                    position: r
                                });
                                if (t.type.startsWith("bytes")) return function(e, {
                                    param: t,
                                    position: r
                                }) {
                                    let [n, i] = t.type.split("bytes");
                                    if (!i) {
                                        let t = (0, c.hexToNumber)((0, a.slice)(e, r, r + 32, {
                                                strict: !0
                                            })),
                                            n = (0, c.hexToNumber)((0, a.slice)(e, t, t + 32, {
                                                strict: !0
                                            }));
                                        if (0 === n) return {
                                            consumed: 32,
                                            value: "0x"
                                        };
                                        let i = (0, a.slice)(e, t + 32, t + 32 + n, {
                                            strict: !0
                                        });
                                        return {
                                            consumed: 32,
                                            value: i
                                        }
                                    }
                                    let o = (0, a.slice)(e, r, r + parseInt(i), {
                                        strict: !0
                                    });
                                    return {
                                        consumed: 32,
                                        value: o
                                    }
                                }(e, {
                                    param: t,
                                    position: r
                                });
                                let l = (0, a.slice)(e, r, r + 32, {
                                    strict: !0
                                });
                                if (t.type.startsWith("uint") || t.type.startsWith("int")) return function(e, {
                                    param: t
                                }) {
                                    let r = t.type.startsWith("int"),
                                        n = parseInt(t.type.split("int")[1] || "256");
                                    return {
                                        consumed: 32,
                                        value: n > 48 ? (0, c.hexToBigInt)(e, {
                                            signed: r
                                        }) : (0, c.hexToNumber)(e, {
                                            signed: r
                                        })
                                    }
                                }(l, {
                                    param: t
                                });
                                if ("address" === t.type) return {
                                    consumed: 32,
                                    value: (0, i.checksumAddress)((0, a.slice)(l, -20))
                                };
                                if ("bool" === t.type) return {
                                    consumed: 32,
                                    value: (0, c.hexToBool)(l)
                                };
                                throw new n.InvalidAbiDecodingTypeError(t.type, {
                                    docsPath: "/docs/contract/decodeAbiParameters"
                                })
                            }({
                                data: e,
                                param: f,
                                position: l
                            });
                        r.push(y), l += p
                    }
                    return r
                }({
                    data: t,
                    params: e
                })
            }
        },
        42772: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.decodeDeployData = void 0;
            let n = r(31480),
                i = r(29784),
                o = "/docs/contract/decodeDeployData";
            t.decodeDeployData = function({
                abi: e,
                bytecode: t,
                data: r
            }) {
                if (r === t) return {
                    bytecode: t
                };
                let a = e.find(e => "type" in e && "constructor" === e.type);
                if (!a) throw new n.AbiConstructorNotFoundError({
                    docsPath: o
                });
                if (!("inputs" in a) || !a.inputs || 0 === a.inputs.length) throw new n.AbiConstructorParamsNotFoundError({
                    docsPath: o
                });
                let s = (0, i.decodeAbiParameters)(a.inputs, `0x${r.replace(t,"")}`);
                return {
                    args: s,
                    bytecode: t
                }
            }
        },
        55865: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.decodeErrorResult = void 0;
            let n = r(23056),
                i = r(31480),
                o = r(97307),
                a = r(17883),
                s = r(29784),
                c = r(32901);
            t.decodeErrorResult = function({
                abi: e,
                data: t
            }) {
                let r = (0, o.slice)(t, 0, 4);
                if ("0x" === r) throw new i.AbiDecodingZeroDataError;
                let u = [...e || [], n.solidityError, n.solidityPanic],
                    l = u.find(e => "error" === e.type && r === (0, a.getFunctionSelector)((0, c.formatAbiItem)(e)));
                if (!l) throw new i.AbiErrorSignatureNotFoundError(r, {
                    docsPath: "/docs/contract/decodeErrorResult"
                });
                return {
                    abiItem: l,
                    args: "inputs" in l && l.inputs && l.inputs.length > 0 ? (0, s.decodeAbiParameters)(l.inputs, (0, o.slice)(t, 4)) : void 0,
                    errorName: l.name
                }
            }
        },
        8334: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.decodeEventLog = void 0;
            let n = r(31480),
                i = r(43225),
                o = r(29784),
                a = r(32901),
                s = "/docs/contract/decodeEventLog";
            t.decodeEventLog = function({
                abi: e,
                data: t,
                strict: r,
                topics: c
            }) {
                let u = r ? ? !0,
                    [l, ...d] = c;
                if (!l) throw new n.AbiEventSignatureEmptyTopicsError({
                    docsPath: s
                });
                let f = e.find(e => "event" === e.type && l === (0, i.getEventSelector)((0, a.formatAbiItem)(e)));
                if (!(f && "name" in f) || "event" !== f.type) throw new n.AbiEventSignatureNotFoundError(l, {
                    docsPath: s
                });
                let {
                    name: p,
                    inputs: y
                } = f, g = y ? .some(e => !("name" in e && e.name)), v = g ? [] : {}, E = y.filter(e => "indexed" in e && e.indexed);
                for (let e = 0; e < E.length; e++) {
                    let t = E[e],
                        r = d[e];
                    if (!r) throw new n.DecodeLogTopicsMismatch({
                        abiItem: f,
                        param: t
                    });
                    v[t.name || e] = function({
                        param: e,
                        value: t
                    }) {
                        if ("string" === e.type || "bytes" === e.type || "tuple" === e.type || e.type.match(/^(.*)\[(\d+)?\]$/)) return t;
                        let r = (0, o.decodeAbiParameters)([e], t) || [];
                        return r[0]
                    }({
                        param: t,
                        value: r
                    })
                }
                let _ = y.filter(e => !("indexed" in e && e.indexed));
                if (_.length > 0) {
                    if (t && "0x" !== t) try {
                        let e = (0, o.decodeAbiParameters)(_, t);
                        if (e) {
                            if (g) v = [...v, ...e];
                            else
                                for (let t = 0; t < _.length; t++) v[_[t].name] = e[t]
                        }
                    } catch (e) {
                        if (u) {
                            if (e instanceof n.AbiDecodingDataSizeTooSmallError) throw new n.DecodeLogDataMismatch({
                                abiItem: f,
                                data: e.data,
                                params: e.params,
                                size: e.size
                            });
                            throw e
                        }
                    } else if (u) throw new n.DecodeLogDataMismatch({
                        abiItem: f,
                        data: "0x",
                        params: _,
                        size: 0
                    })
                }
                return {
                    eventName: p,
                    args: Object.values(v).length > 0 ? v : void 0
                }
            }
        },
        17354: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.decodeFunctionData = void 0;
            let n = r(31480),
                i = r(97307),
                o = r(17883),
                a = r(29784),
                s = r(32901);
            t.decodeFunctionData = function({
                abi: e,
                data: t
            }) {
                let r = (0, i.slice)(t, 0, 4),
                    c = e.find(e => "function" === e.type && r === (0, o.getFunctionSelector)((0, s.formatAbiItem)(e)));
                if (!c) throw new n.AbiFunctionSignatureNotFoundError(r, {
                    docsPath: "/docs/contract/decodeFunctionData"
                });
                return {
                    functionName: c.name,
                    args: "inputs" in c && c.inputs && c.inputs.length > 0 ? (0, a.decodeAbiParameters)(c.inputs, (0, i.slice)(t, 4)) : void 0
                }
            }
        },
        7889: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.decodeFunctionResult = void 0;
            let n = r(31480),
                i = r(29784),
                o = r(33493),
                a = "/docs/contract/decodeFunctionResult";
            t.decodeFunctionResult = function({
                abi: e,
                args: t,
                functionName: r,
                data: s
            }) {
                let c = e[0];
                if (r && !(c = (0, o.getAbiItem)({
                        abi: e,
                        args: t,
                        name: r
                    }))) throw new n.AbiFunctionNotFoundError(r, {
                    docsPath: a
                });
                if ("function" !== c.type) throw new n.AbiFunctionNotFoundError(void 0, {
                    docsPath: a
                });
                if (!c.outputs) throw new n.AbiFunctionOutputsNotFoundError(c.name, {
                    docsPath: a
                });
                let u = (0, i.decodeAbiParameters)(c.outputs, s);
                return u && u.length > 1 ? u : u && 1 === u.length ? u[0] : void 0
            }
        },
        43044: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getArrayComponents = t.encodeAbiParameters = void 0;
            let n = r(31480),
                i = r(90874),
                o = r(74815),
                a = r(62127),
                s = r(95946),
                c = r(93071),
                u = r(97307),
                l = r(32054);

            function encodeParams(e) {
                let t = 0;
                for (let r = 0; r < e.length; r++) {
                    let {
                        dynamic: n,
                        encoded: i
                    } = e[r];
                    n ? t += 32 : t += (0, c.size)(i)
                }
                let r = [],
                    n = [],
                    i = 0;
                for (let o = 0; o < e.length; o++) {
                    let {
                        dynamic: a,
                        encoded: s
                    } = e[o];
                    a ? (r.push((0, l.numberToHex)(t + i, {
                        size: 32
                    })), n.push(s), i += (0, c.size)(s)) : r.push(s)
                }
                return (0, a.concat)([...r, ...n])
            }

            function getArrayComponents(e) {
                let t = e.match(/^(.*)\[(\d+)?\]$/);
                return t ? [t[2] ? Number(t[2]) : null, t[1]] : void 0
            }
            t.encodeAbiParameters = function(e, t) {
                if (e.length !== t.length) throw new n.AbiEncodingLengthMismatchError({
                    expectedLength: e.length,
                    givenLength: t.length
                });
                let r = function({
                        params: e,
                        values: t
                    }) {
                        let r = [];
                        for (let d = 0; d < e.length; d++) r.push(function prepareParam({
                            param: e,
                            value: t
                        }) {
                            let r = getArrayComponents(e.type);
                            if (r) {
                                let [i, o] = r;
                                return function(e, {
                                    length: t,
                                    param: r
                                }) {
                                    let i = null === t;
                                    if (!Array.isArray(e)) throw new n.InvalidArrayError(e);
                                    if (!i && e.length !== t) throw new n.AbiEncodingArrayLengthMismatchError({
                                        expectedLength: t,
                                        givenLength: e.length,
                                        type: `${r.type}[${t}]`
                                    });
                                    let o = !1,
                                        s = [];
                                    for (let t = 0; t < e.length; t++) {
                                        let n = prepareParam({
                                            param: r,
                                            value: e[t]
                                        });
                                        n.dynamic && (o = !0), s.push(n)
                                    }
                                    if (i || o) {
                                        let e = encodeParams(s);
                                        if (i) {
                                            let t = (0, l.numberToHex)(s.length, {
                                                size: 32
                                            });
                                            return {
                                                dynamic: !0,
                                                encoded: s.length > 0 ? (0, a.concat)([t, e]) : t
                                            }
                                        }
                                        if (o) return {
                                            dynamic: !0,
                                            encoded: e
                                        }
                                    }
                                    return {
                                        dynamic: !1,
                                        encoded: (0, a.concat)(s.map(({
                                            encoded: e
                                        }) => e))
                                    }
                                }(t, {
                                    length: i,
                                    param: { ...e,
                                        type: o
                                    }
                                })
                            }
                            if ("tuple" === e.type) return function(e, {
                                param: t
                            }) {
                                let r = !1,
                                    n = [];
                                for (let i = 0; i < t.components.length; i++) {
                                    let o = t.components[i],
                                        a = Array.isArray(e) ? i : o.name,
                                        s = prepareParam({
                                            param: o,
                                            value: e[a]
                                        });
                                    n.push(s), s.dynamic && (r = !0)
                                }
                                return {
                                    dynamic: r,
                                    encoded: r ? encodeParams(n) : (0, a.concat)(n.map(({
                                        encoded: e
                                    }) => e))
                                }
                            }(t, {
                                param: e
                            });
                            if ("address" === e.type) return function(e) {
                                if (!(0, o.isAddress)(e)) throw new i.InvalidAddressError({
                                    address: e
                                });
                                return {
                                    dynamic: !1,
                                    encoded: (0, s.padHex)(e.toLowerCase())
                                }
                            }(t);
                            if ("bool" === e.type) return {
                                dynamic: !1,
                                encoded: (0, s.padHex)((0, l.boolToHex)(t))
                            };
                            if (e.type.startsWith("uint") || e.type.startsWith("int")) {
                                let r = e.type.startsWith("int");
                                return function(e, {
                                    signed: t
                                }) {
                                    return {
                                        dynamic: !1,
                                        encoded: (0, l.numberToHex)(e, {
                                            size: 32,
                                            signed: t
                                        })
                                    }
                                }(t, {
                                    signed: r
                                })
                            }
                            if (e.type.startsWith("bytes")) return function(e, {
                                param: t
                            }) {
                                let [, r] = t.type.split("bytes"), i = (0, c.size)(e);
                                if (!r) {
                                    let t = e;
                                    return i % 32 != 0 && (t = (0, s.padHex)(t, {
                                        dir: "right",
                                        size: 32 * Math.ceil((e.length - 2) / 2 / 32)
                                    })), {
                                        dynamic: !0,
                                        encoded: (0, a.concat)([(0, s.padHex)((0, l.numberToHex)(i, {
                                            size: 32
                                        })), t])
                                    }
                                }
                                if (i !== parseInt(r)) throw new n.AbiEncodingBytesSizeMismatchError({
                                    expectedSize: parseInt(r),
                                    value: e
                                });
                                return {
                                    dynamic: !1,
                                    encoded: (0, s.padHex)(e, {
                                        dir: "right"
                                    })
                                }
                            }(t, {
                                param: e
                            });
                            if ("string" === e.type) return function(e) {
                                let t = (0, l.stringToHex)(e),
                                    r = Math.ceil((0, c.size)(t) / 32),
                                    n = [];
                                for (let e = 0; e < r; e++) n.push((0, s.padHex)((0, u.slice)(t, 32 * e, (e + 1) * 32), {
                                    dir: "right"
                                }));
                                return {
                                    dynamic: !0,
                                    encoded: (0, a.concat)([(0, s.padHex)((0, l.numberToHex)((0, c.size)(t), {
                                        size: 32
                                    })), ...n])
                                }
                            }(t);
                            throw new n.InvalidAbiEncodingTypeError(e.type, {
                                docsPath: "/docs/contract/encodeAbiParameters"
                            })
                        }({
                            param: e[d],
                            value: t[d]
                        }));
                        return r
                    }({
                        params: e,
                        values: t
                    }),
                    d = encodeParams(r);
                return 0 === d.length ? "0x" : d
            }, t.getArrayComponents = getArrayComponents
        },
        59697: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.encodeDeployData = void 0;
            let n = r(31480),
                i = r(62127),
                o = r(43044),
                a = "/docs/contract/encodeDeployData";
            t.encodeDeployData = function({
                abi: e,
                args: t,
                bytecode: r
            }) {
                if (!t || 0 === t.length) return r;
                let s = e.find(e => "type" in e && "constructor" === e.type);
                if (!s) throw new n.AbiConstructorNotFoundError({
                    docsPath: a
                });
                if (!("inputs" in s) || !s.inputs || 0 === s.inputs.length) throw new n.AbiConstructorParamsNotFoundError({
                    docsPath: a
                });
                let c = (0, o.encodeAbiParameters)(s.inputs, t);
                return (0, i.concatHex)([r, c])
            }
        },
        19265: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.encodeErrorResult = void 0;
            let n = r(31480),
                i = r(62127),
                o = r(17883),
                a = r(43044),
                s = r(32901),
                c = r(33493),
                u = "/docs/contract/encodeErrorResult";
            t.encodeErrorResult = function({
                abi: e,
                errorName: t,
                args: r
            }) {
                let l = e[0];
                if (t && !(l = (0, c.getAbiItem)({
                        abi: e,
                        args: r,
                        name: t
                    }))) throw new n.AbiErrorNotFoundError(t, {
                    docsPath: u
                });
                if ("error" !== l.type) throw new n.AbiErrorNotFoundError(void 0, {
                    docsPath: u
                });
                let d = (0, s.formatAbiItem)(l),
                    f = (0, o.getFunctionSelector)(d),
                    p = "0x";
                if (r && r.length > 0) {
                    if (!l.inputs) throw new n.AbiErrorInputsNotFoundError(l.name, {
                        docsPath: u
                    });
                    p = (0, a.encodeAbiParameters)(l.inputs, r)
                }
                return (0, i.concatHex)([f, p])
            }
        },
        35840: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.encodeEventTopics = void 0;
            let n = r(31480),
                i = r(25624),
                o = r(58640),
                a = r(43225),
                s = r(34650),
                c = r(43044),
                u = r(32901),
                l = r(33493);

            function encodeArg({
                param: e,
                value: t
            }) {
                if ("string" === e.type || "bytes" === e.type) return (0, s.keccak256)((0, o.toBytes)(t));
                if ("tuple" === e.type || e.type.match(/^(.*)\[(\d+)?\]$/)) throw new i.FilterTypeNotSupportedError(e.type);
                return (0, c.encodeAbiParameters)([e], [t])
            }
            t.encodeEventTopics = function({
                abi: e,
                eventName: t,
                args: r
            }) {
                let i = e[0];
                if (t && !(i = (0, l.getAbiItem)({
                        abi: e,
                        args: r,
                        name: t
                    }))) throw new n.AbiEventNotFoundError(t, {
                    docsPath: "/docs/contract/encodeEventTopics"
                });
                if ("event" !== i.type) throw new n.AbiEventNotFoundError(void 0, {
                    docsPath: "/docs/contract/encodeEventTopics"
                });
                let o = (0, u.formatAbiItem)(i),
                    s = (0, a.getEventSelector)(o),
                    c = [];
                if (r && "inputs" in i) {
                    let e = i.inputs ? .filter(e => "indexed" in e && e.indexed),
                        t = Array.isArray(r) ? r : Object.values(r).length > 0 ? e ? .map(e => r[e.name]) ? ? [] : [];
                    t.length > 0 && (c = e ? .map((e, r) => Array.isArray(t[r]) ? t[r].map((n, i) => encodeArg({
                        param: e,
                        value: t[r][i]
                    })) : t[r] ? encodeArg({
                        param: e,
                        value: t[r]
                    }) : null) ? ? [])
                }
                return [s, ...c]
            }
        },
        61895: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.encodeFunctionData = void 0;
            let n = r(31480),
                i = r(62127),
                o = r(17883),
                a = r(43044),
                s = r(32901),
                c = r(33493);
            t.encodeFunctionData = function({
                abi: e,
                args: t,
                functionName: r
            }) {
                let u = e[0];
                if (r && !(u = (0, c.getAbiItem)({
                        abi: e,
                        args: t,
                        name: r
                    }))) throw new n.AbiFunctionNotFoundError(r, {
                    docsPath: "/docs/contract/encodeFunctionData"
                });
                if ("function" !== u.type) throw new n.AbiFunctionNotFoundError(void 0, {
                    docsPath: "/docs/contract/encodeFunctionData"
                });
                let l = (0, s.formatAbiItem)(u),
                    d = (0, o.getFunctionSelector)(l),
                    f = "inputs" in u && u.inputs ? (0, a.encodeAbiParameters)(u.inputs, t ? ? []) : void 0;
                return (0, i.concatHex)([d, f ? ? "0x"])
            }
        },
        10606: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.encodeFunctionResult = void 0;
            let n = r(31480),
                i = r(43044),
                o = r(33493);
            t.encodeFunctionResult = function({
                abi: e,
                functionName: t,
                result: r
            }) {
                let a = e[0];
                if (t && !(a = (0, o.getAbiItem)({
                        abi: e,
                        name: t
                    }))) throw new n.AbiFunctionNotFoundError(t, {
                    docsPath: "/docs/contract/encodeFunctionResult"
                });
                if ("function" !== a.type) throw new n.AbiFunctionNotFoundError(void 0, {
                    docsPath: "/docs/contract/encodeFunctionResult"
                });
                if (!a.outputs) throw new n.AbiFunctionOutputsNotFoundError(a.name, {
                    docsPath: "/docs/contract/encodeFunctionResult"
                });
                let s = Array.isArray(r) ? r : [r];
                return 0 !== a.outputs.length || s[0] || (s = []), (0, i.encodeAbiParameters)(a.outputs, s)
            }
        },
        32014: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.encodePacked = void 0;
            let n = r(31480),
                i = r(90874),
                o = r(74815),
                a = r(62127),
                s = r(95946),
                c = r(32054),
                u = r(89194);
            t.encodePacked = function(e, t) {
                if (e.length !== t.length) throw new n.AbiEncodingLengthMismatchError({
                    expectedLength: e.length,
                    givenLength: t.length
                });
                let r = [];
                for (let l = 0; l < e.length; l++) {
                    let d = e[l],
                        f = t[l];
                    r.push(function encode(e, t, r = !1) {
                        if ("address" === e) {
                            if (!(0, o.isAddress)(t)) throw new i.InvalidAddressError({
                                address: t
                            });
                            return (0, s.pad)(t.toLowerCase(), {
                                size: r ? 32 : null
                            })
                        }
                        if ("string" === e) return (0, c.stringToHex)(t);
                        if ("bytes" === e) return t;
                        if ("bool" === e) return (0, s.pad)((0, c.boolToHex)(t), {
                            size: r ? 32 : 1
                        });
                        let l = e.match(u.integerRegex);
                        if (l) {
                            let [e, n, i = "256"] = l, o = parseInt(i) / 8;
                            return (0, c.numberToHex)(t, {
                                size: r ? 32 : o,
                                signed: "int" === n
                            })
                        }
                        let d = e.match(u.bytesRegex);
                        if (d) {
                            let [e, i] = d;
                            if (parseInt(i) !== (t.length - 2) / 2) throw new n.BytesSizeMismatchError({
                                expectedSize: parseInt(i),
                                givenSize: (t.length - 2) / 2
                            });
                            return (0, s.pad)(t, {
                                dir: "right",
                                size: r ? 32 : null
                            })
                        }
                        let f = e.match(u.arrayRegex);
                        if (f && Array.isArray(t)) {
                            let [e, r] = f, n = [];
                            for (let e = 0; e < t.length; e++) n.push(encode(r, t[e], !0));
                            return 0 === n.length ? "0x" : (0, a.concatHex)(n)
                        }
                        throw new n.UnsupportedPackedAbiType(e)
                    }(d, f))
                }
                return (0, a.concatHex)(r)
            }
        },
        32901: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.formatAbiParams = t.formatAbiItem = void 0;
            let n = r(31480);

            function formatAbiParams(e, {
                includeName: t = !1
            } = {}) {
                return e ? e.map(e => (function(e, {
                    includeName: t
                }) {
                    return e.type.startsWith("tuple") ? `(${formatAbiParams(e.components,{includeName:t})})${e.type.slice(5)}` : e.type + (t && e.name ? ` ${e.name}` : "")
                })(e, {
                    includeName: t
                })).join(t ? ", " : ",") : ""
            }
            t.formatAbiItem = function(e, {
                includeName: t = !1
            } = {}) {
                if ("function" !== e.type && "event" !== e.type && "error" !== e.type) throw new n.InvalidDefinitionTypeError(e.type);
                return `${e.name}(${formatAbiParams(e.inputs,{includeName:t})})`
            }, t.formatAbiParams = formatAbiParams
        },
        82865: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.formatAbiItemWithArgs = void 0;
            let n = r(42701);
            t.formatAbiItemWithArgs = function({
                abiItem: e,
                args: t,
                includeFunctionName: r = !0,
                includeName: i = !1
            }) {
                if ("name" in e && "inputs" in e && e.inputs) return `${r?e.name:""}(${e.inputs.map((e,r)=>`${i&&e.name?`${e.name}: `:""}${"object"==typeof t[r]?(0,n.stringify)(t[r]):t[r]}`).join(", ")})`
            }
        },
        33493: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.isArgOfType = t.getAbiItem = void 0;
            let n = r(90383),
                i = r(43225),
                o = r(17883),
                a = r(74815);

            function isArgOfType(e, t) {
                let r = typeof e,
                    n = t.type;
                switch (n) {
                    case "address":
                        return (0, a.isAddress)(e);
                    case "bool":
                        return "boolean" === r;
                    case "function":
                    case "string":
                        return "string" === r;
                    default:
                        if ("tuple" === n && "components" in t) return Object.values(t.components).every((t, r) => isArgOfType(Object.values(e)[r], t));
                        if (/^u?int(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/.test(n)) return "number" === r || "bigint" === r;
                        if (/^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/.test(n)) return "string" === r || e instanceof Uint8Array;
                        if (/[a-z]+[1-9]{0,3}(\[[0-9]{0,}\])+$/.test(n)) return Array.isArray(e) && e.every(e => isArgOfType(e, { ...t,
                            type: n.replace(/(\[[0-9]{0,}\])$/, "")
                        }));
                        return !1
                }
            }
            t.getAbiItem = function({
                abi: e,
                args: t = [],
                name: r
            }) {
                let a = (0, n.isHex)(r, {
                        strict: !1
                    }),
                    s = e.filter(e => a ? "function" === e.type ? (0, o.getFunctionSelector)(e) === r : "event" === e.type && (0, i.getEventSelector)(e) === r : "name" in e && e.name === r);
                if (0 !== s.length) {
                    if (1 === s.length) return s[0];
                    for (let e of s) {
                        if (!("inputs" in e)) continue;
                        if (!t || 0 === t.length) {
                            if (!e.inputs || 0 === e.inputs.length) return e;
                            continue
                        }
                        if (!e.inputs || 0 === e.inputs.length || e.inputs.length !== t.length) continue;
                        let r = t.every((t, r) => {
                            let n = "inputs" in e && e.inputs[r];
                            return !!n && isArgOfType(t, n)
                        });
                        if (r) return e
                    }
                    return s[0]
                }
            }, t.isArgOfType = isArgOfType
        },
        90881: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.publicKeyToAddress = t.parseAccount = void 0;
            var n = r(9783);
            Object.defineProperty(t, "parseAccount", {
                enumerable: !0,
                get: function() {
                    return n.parseAccount
                }
            });
            var i = r(97397);
            Object.defineProperty(t, "publicKeyToAddress", {
                enumerable: !0,
                get: function() {
                    return i.publicKeyToAddress
                }
            })
        },
        46972: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getAddress = t.checksumAddress = void 0;
            let n = r(90874),
                i = r(58640),
                o = r(34650),
                a = r(74815);

            function checksumAddress(e, t) {
                let r = t ? `${t}${e.toLowerCase()}` : e.substring(2).toLowerCase(),
                    n = (0, o.keccak256)((0, i.stringToBytes)(r), "bytes"),
                    a = (t ? r.substring(`${t}0x`.length) : r).split("");
                for (let e = 0; e < 40; e += 2) n[e >> 1] >> 4 >= 8 && a[e] && (a[e] = a[e].toUpperCase()), (15 & n[e >> 1]) >= 8 && a[e + 1] && (a[e + 1] = a[e + 1].toUpperCase());
                return `0x${a.join("")}`
            }
            t.checksumAddress = checksumAddress, t.getAddress = function(e, t) {
                if (!(0, a.isAddress)(e)) throw new n.InvalidAddressError({
                    address: e
                });
                return checksumAddress(e, t)
            }
        },
        62105: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getCreate2Address = t.getCreateAddress = t.getContractAddress = void 0;
            let n = r(62127),
                i = r(59071),
                o = r(95946),
                a = r(97307),
                s = r(58640),
                c = r(57116),
                u = r(34650),
                l = r(46972);

            function getCreateAddress(e) {
                let t = (0, s.toBytes)((0, l.getAddress)(e.from)),
                    r = (0, s.toBytes)(e.nonce);
                return 0 === r[0] && (r = new Uint8Array([])), (0, l.getAddress)(`0x${(0,u.keccak256)((0,c.toRlp)([t,r],"bytes")).slice(26)}`)
            }

            function getCreate2Address(e) {
                let t = (0, s.toBytes)((0, l.getAddress)(e.from)),
                    r = (0, o.pad)((0, i.isBytes)(e.salt) ? e.salt : (0, s.toBytes)(e.salt), {
                        size: 32
                    }),
                    c = "bytecodeHash" in e ? (0, i.isBytes)(e.bytecodeHash) ? e.bytecodeHash : (0, s.toBytes)(e.bytecodeHash) : (0, u.keccak256)(e.bytecode, "bytes");
                return (0, l.getAddress)((0, a.slice)((0, u.keccak256)((0, n.concat)([(0, s.toBytes)("0xff"), t, r, c])), 12))
            }
            t.getContractAddress = function(e) {
                return "CREATE2" === e.opcode ? getCreate2Address(e) : getCreateAddress(e)
            }, t.getCreateAddress = getCreateAddress, t.getCreate2Address = getCreate2Address
        },
        74815: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.isAddress = void 0;
            let r = /^0x[a-fA-F0-9]{40}$/;
            t.isAddress = function(e) {
                return r.test(e)
            }
        },
        25680: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.isAddressEqual = void 0;
            let n = r(90874),
                i = r(74815);
            t.isAddressEqual = function(e, t) {
                if (!(0, i.isAddress)(e)) throw new n.InvalidAddressError({
                    address: e
                });
                if (!(0, i.isAddress)(t)) throw new n.InvalidAddressError({
                    address: t
                });
                return e.toLowerCase() === t.toLowerCase()
            }
        },
        75238: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.buildRequest = t.isDeterministicError = void 0;
            let n = r(9537),
                i = r(58323),
                o = r(52091),
                a = r(57984);
            t.isDeterministicError = e => "code" in e ? -1 !== e.code && -32004 !== e.code && -32005 !== e.code && -32042 !== e.code && -32603 !== e.code : e instanceof i.HttpRequestError && !!e.status && 403 !== e.status && 408 !== e.status && 413 !== e.status && 429 !== e.status && 500 !== e.status && 502 !== e.status && 503 !== e.status && 504 !== e.status, t.buildRequest = function(e, {
                retryDelay: r = 150,
                retryCount: s = 3
            } = {}) {
                return async c => (0, a.withRetry)(async () => {
                    try {
                        return await e(c)
                    } catch (e) {
                        switch (e.code) {
                            case o.ParseRpcError.code:
                                throw new o.ParseRpcError(e);
                            case o.InvalidRequestRpcError.code:
                                throw new o.InvalidRequestRpcError(e);
                            case o.MethodNotFoundRpcError.code:
                                throw new o.MethodNotFoundRpcError(e);
                            case o.InvalidParamsRpcError.code:
                                throw new o.InvalidParamsRpcError(e);
                            case o.InternalRpcError.code:
                                throw new o.InternalRpcError(e);
                            case o.InvalidInputRpcError.code:
                                throw new o.InvalidInputRpcError(e);
                            case o.ResourceNotFoundRpcError.code:
                                throw new o.ResourceNotFoundRpcError(e);
                            case o.ResourceUnavailableRpcError.code:
                                throw new o.ResourceUnavailableRpcError(e);
                            case o.TransactionRejectedRpcError.code:
                                throw new o.TransactionRejectedRpcError(e);
                            case o.MethodNotSupportedRpcError.code:
                                throw new o.MethodNotSupportedRpcError(e);
                            case o.LimitExceededRpcError.code:
                                throw new o.LimitExceededRpcError(e);
                            case o.JsonRpcVersionUnsupportedError.code:
                                throw new o.JsonRpcVersionUnsupportedError(e);
                            case o.UserRejectedRequestError.code:
                                throw new o.UserRejectedRequestError(e);
                            case o.UnauthorizedProviderError.code:
                                throw new o.UnauthorizedProviderError(e);
                            case o.UnsupportedProviderMethodError.code:
                                throw new o.UnsupportedProviderMethodError(e);
                            case o.ProviderDisconnectedError.code:
                                throw new o.ProviderDisconnectedError(e);
                            case o.ChainDisconnectedError.code:
                                throw new o.ChainDisconnectedError(e);
                            case o.SwitchChainError.code:
                                throw new o.SwitchChainError(e);
                            case 5e3:
                                throw new o.UserRejectedRequestError(e);
                            default:
                                if (e instanceof n.BaseError) throw e;
                                throw new o.UnknownRpcError(e)
                        }
                    }
                }, {
                    delay: ({
                        count: e,
                        error: t
                    }) => {
                        if (t && t instanceof i.HttpRequestError) {
                            let e = t ? .headers ? .get("Retry-After");
                            if (e ? .match(/\d/)) return 1e3 * parseInt(e)
                        }
                        return ~~(1 << e) * r
                    },
                    retryCount: s,
                    shouldRetry: ({
                        error: e
                    }) => !(0, t.isDeterministicError)(e)
                })
            }
        },
        92519: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.ccipFetch = t.offchainLookup = t.offchainLookupAbiItem = t.offchainLookupSignature = void 0;
            let n = r(64057),
                i = r(64039),
                o = r(58323),
                a = r(55865),
                s = r(43044),
                c = r(25680),
                u = r(62127),
                l = r(90383),
                d = r(42701);
            async function offchainLookup(e, {
                blockNumber: r,
                blockTag: o,
                data: l,
                to: d
            }) {
                let {
                    args: f
                } = (0, a.decodeErrorResult)({
                    data: l,
                    abi: [t.offchainLookupAbiItem]
                }), [p, y, g, v, E] = f;
                try {
                    if (!(0, c.isAddressEqual)(d, p)) throw new i.OffchainLookupSenderMismatchError({
                        sender: p,
                        to: d
                    });
                    let t = await ccipFetch({
                            data: g,
                            sender: p,
                            urls: y
                        }),
                        {
                            data: a
                        } = await (0, n.call)(e, {
                            blockNumber: r,
                            blockTag: o,
                            data: (0, u.concat)([v, (0, s.encodeAbiParameters)([{
                                type: "bytes"
                            }, {
                                type: "bytes"
                            }], [t, E])]),
                            to: d
                        });
                    return a
                } catch (e) {
                    throw new i.OffchainLookupError({
                        callbackSelector: v,
                        cause: e,
                        data: l,
                        extraData: E,
                        sender: p,
                        urls: y
                    })
                }
            }
            async function ccipFetch({
                data: e,
                sender: t,
                urls: r
            }) {
                let n = Error("An unknown error occurred.");
                for (let a = 0; a < r.length; a++) {
                    let s = r[a],
                        c = s.includes("{data}") ? "GET" : "POST",
                        u = "POST" === c ? {
                            data: e,
                            sender: t
                        } : void 0;
                    try {
                        let r;
                        let a = await fetch(s.replace("{sender}", t).replace("{data}", e), {
                            body: JSON.stringify(u),
                            method: c
                        });
                        if (r = a.headers.get("Content-Type") ? .startsWith("application/json") ? (await a.json()).data : await a.text(), !a.ok) {
                            n = new o.HttpRequestError({
                                body: u,
                                details: r ? .error ? (0, d.stringify)(r.error) : a.statusText,
                                headers: a.headers,
                                status: a.status,
                                url: s
                            });
                            continue
                        }
                        if (!(0, l.isHex)(r)) {
                            n = new i.OffchainLookupResponseMalformedError({
                                result: r,
                                url: s
                            });
                            continue
                        }
                        return r
                    } catch (e) {
                        n = new o.HttpRequestError({
                            body: u,
                            details: e.message,
                            url: s
                        })
                    }
                }
                throw n
            }
            t.offchainLookupSignature = "0x556f1830", t.offchainLookupAbiItem = {
                name: "OffchainLookup",
                type: "error",
                inputs: [{
                    name: "sender",
                    type: "address"
                }, {
                    name: "urls",
                    type: "string[]"
                }, {
                    name: "callData",
                    type: "bytes"
                }, {
                    name: "callbackFunction",
                    type: "bytes4"
                }, {
                    name: "extraData",
                    type: "bytes"
                }]
            }, t.offchainLookup = offchainLookup, t.ccipFetch = ccipFetch
        },
        43179: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.assertCurrentChain = void 0;
            let n = r(95047);
            t.assertCurrentChain = function({
                chain: e,
                currentChainId: t
            }) {
                if (!e) throw new n.ChainNotFoundError;
                if (t !== e.id) throw new n.ChainMismatchError({
                    chain: e,
                    currentChainId: t
                })
            }
        },
        50356: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.defineChain = void 0, t.defineChain = function(e, t = {}) {
                let {
                    fees: r = e.fees,
                    formatters: n = e.formatters,
                    serializers: i = e.serializers
                } = t;
                return { ...e,
                    fees: r,
                    formatters: n,
                    serializers: i
                }
            }
        },
        78611: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.extractChain = void 0, t.extractChain = function({
                chains: e,
                id: t
            }) {
                return e.find(e => e.id === t)
            }
        },
        54971: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getChainContractAddress = void 0;
            let n = r(95047);
            t.getChainContractAddress = function({
                blockNumber: e,
                chain: t,
                contract: r
            }) {
                let i = t ? .contracts ? .[r];
                if (!i) throw new n.ChainDoesNotSupportContract({
                    chain: t,
                    contract: {
                        name: r
                    }
                });
                if (e && i.blockCreated && i.blockCreated > e) throw new n.ChainDoesNotSupportContract({
                    blockNumber: e,
                    chain: t,
                    contract: {
                        name: r,
                        blockCreated: i.blockCreated
                    }
                });
                return i.address
            }
        },
        56202: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.extractFunctionType = t.extractFunctionParams = t.extractFunctionName = t.extractFunctionParts = void 0;
            let r = /((function|event)\s)?(.*)(\((.*)\))/;

            function extractFunctionParts(e) {
                let t = e.match(r),
                    n = t ? .[2] || void 0,
                    i = t ? .[3],
                    o = t ? .[5] || void 0;
                return {
                    type: n,
                    name: i,
                    params: o
                }
            }
            t.extractFunctionParts = extractFunctionParts, t.extractFunctionName = function(e) {
                return extractFunctionParts(e).name
            }, t.extractFunctionParams = function(e) {
                let t = extractFunctionParts(e).params,
                    r = t ? .split(",").map(e => e.trim().split(" "));
                return r ? .map(e => ({
                    type: e[0],
                    name: "indexed" === e[1] ? e[2] : e[1],
                    ..."indexed" === e[1] ? {
                        indexed: !0
                    } : {}
                }))
            }, t.extractFunctionType = function(e) {
                return extractFunctionParts(e).type
            }
        },
        85070: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.createCursor = void 0;
            let n = r(15169),
                i = {
                    bytes: new Uint8Array,
                    dataView: new DataView(new ArrayBuffer(0)),
                    position: 0,
                    assertPosition(e) {
                        if (e < 0 || e > this.bytes.length - 1) throw new n.PositionOutOfBoundsError({
                            length: this.bytes.length,
                            position: e
                        })
                    },
                    decrementPosition(e) {
                        if (e < 0) throw new n.NegativeOffsetError({
                            offset: e
                        });
                        let t = this.position - e;
                        this.assertPosition(t), this.position = t
                    },
                    incrementPosition(e) {
                        if (e < 0) throw new n.NegativeOffsetError({
                            offset: e
                        });
                        let t = this.position + e;
                        this.assertPosition(t), this.position = t
                    },
                    inspectByte(e) {
                        let t = e ? ? this.position;
                        return this.assertPosition(t), this.bytes[t]
                    },
                    inspectBytes(e, t) {
                        let r = t ? ? this.position;
                        return this.assertPosition(r + e - 1), this.bytes.subarray(r, r + e)
                    },
                    inspectUint8(e) {
                        let t = e ? ? this.position;
                        return this.assertPosition(t), this.bytes[t]
                    },
                    inspectUint16(e) {
                        let t = e ? ? this.position;
                        return this.assertPosition(t + 1), this.dataView.getUint16(t)
                    },
                    inspectUint24(e) {
                        let t = e ? ? this.position;
                        return this.assertPosition(t + 2), (this.dataView.getUint16(t) << 8) + this.dataView.getUint8(t + 2)
                    },
                    inspectUint32(e) {
                        let t = e ? ? this.position;
                        return this.assertPosition(t + 3), this.dataView.getUint32(t)
                    },
                    pushByte(e) {
                        this.assertPosition(this.position), this.bytes[this.position] = e, this.position++
                    },
                    pushBytes(e) {
                        this.assertPosition(this.position + e.length - 1), this.bytes.set(e, this.position), this.position += e.length
                    },
                    pushUint8(e) {
                        this.assertPosition(this.position), this.bytes[this.position] = e, this.position++
                    },
                    pushUint16(e) {
                        this.assertPosition(this.position + 1), this.dataView.setUint16(this.position, e), this.position += 2
                    },
                    pushUint24(e) {
                        this.assertPosition(this.position + 2), this.dataView.setUint16(this.position, e >> 8), this.dataView.setUint8(this.position + 2, 255 & e), this.position += 3
                    },
                    pushUint32(e) {
                        this.assertPosition(this.position + 3), this.dataView.setUint32(this.position, e), this.position += 4
                    },
                    readByte() {
                        let e = this.inspectByte();
                        return this.position++, e
                    },
                    readBytes(e) {
                        let t = this.inspectBytes(e);
                        return this.position += e, t
                    },
                    readUint8() {
                        let e = this.inspectUint8();
                        return this.position += 1, e
                    },
                    readUint16() {
                        let e = this.inspectUint16();
                        return this.position += 2, e
                    },
                    readUint24() {
                        let e = this.inspectUint24();
                        return this.position += 3, e
                    },
                    readUint32() {
                        let e = this.inspectUint32();
                        return this.position += 4, e
                    },
                    setPosition(e) {
                        this.assertPosition(e), this.position = e
                    }
                };
            t.createCursor = function(e) {
                let t = Object.create(i);
                return t.bytes = e, t.dataView = new DataView(e.buffer, e.byteOffset, e.byteLength), t
            }
        },
        62127: function(e, t) {
            "use strict";

            function concatBytes(e) {
                let t = 0;
                for (let r of e) t += r.length;
                let r = new Uint8Array(t),
                    n = 0;
                for (let t of e) r.set(t, n), n += t.length;
                return r
            }

            function concatHex(e) {
                return `0x${e.reduce((e,t)=>e+t.replace("0x",""),"")}`
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.concatHex = t.concatBytes = t.concat = void 0, t.concat = function(e) {
                return "string" == typeof e[0] ? concatHex(e) : concatBytes(e)
            }, t.concatBytes = concatBytes, t.concatHex = concatHex
        },
        59071: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.isBytes = void 0, t.isBytes = function(e) {
                return !!e && "object" == typeof e && "BYTES_PER_ELEMENT" in e && 1 === e.BYTES_PER_ELEMENT && "Uint8Array" === e.constructor.name
            }
        },
        70546: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.isBytesEqual = void 0;
            let n = r(95786),
                i = r(58640),
                o = r(90383);
            t.isBytesEqual = function(e, t) {
                let r = (0, o.isHex)(e) ? (0, i.toBytes)(e) : e,
                    a = (0, o.isHex)(t) ? (0, i.toBytes)(t) : t;
                return (0, n.equalBytes)(r, a)
            }
        },
        90383: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.isHex = void 0, t.isHex = function(e, {
                strict: t = !0
            } = {}) {
                return !!e && "string" == typeof e && (t ? /^0x[0-9a-fA-F]*$/.test(e) : e.startsWith("0x"))
            }
        },
        95946: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.padBytes = t.padHex = t.pad = void 0;
            let n = r(47037);

            function padHex(e, {
                dir: t,
                size: r = 32
            } = {}) {
                if (null === r) return e;
                let i = e.replace("0x", "");
                if (i.length > 2 * r) throw new n.SizeExceedsPaddingSizeError({
                    size: Math.ceil(i.length / 2),
                    targetSize: r,
                    type: "hex"
                });
                return `0x${i["right"===t?"padEnd":"padStart"](2*r,"0")}`
            }

            function padBytes(e, {
                dir: t,
                size: r = 32
            } = {}) {
                if (null === r) return e;
                if (e.length > r) throw new n.SizeExceedsPaddingSizeError({
                    size: e.length,
                    targetSize: r,
                    type: "bytes"
                });
                let i = new Uint8Array(r);
                for (let n = 0; n < r; n++) {
                    let o = "right" === t;
                    i[o ? n : r - n - 1] = e[o ? n : e.length - n - 1]
                }
                return i
            }
            t.pad = function(e, {
                dir: t,
                size: r = 32
            } = {}) {
                return "string" == typeof e ? padHex(e, {
                    dir: t,
                    size: r
                }) : padBytes(e, {
                    dir: t,
                    size: r
                })
            }, t.padHex = padHex, t.padBytes = padBytes
        },
        93071: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.size = void 0;
            let n = r(90383);
            t.size = function(e) {
                return (0, n.isHex)(e, {
                    strict: !1
                }) ? Math.ceil((e.length - 2) / 2) : e.length
            }
        },
        97307: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.sliceHex = t.sliceBytes = t.slice = void 0;
            let n = r(47037),
                i = r(90383),
                o = r(93071);

            function assertStartOffset(e, t) {
                if ("number" == typeof t && t > 0 && t > (0, o.size)(e) - 1) throw new n.SliceOffsetOutOfBoundsError({
                    offset: t,
                    position: "start",
                    size: (0, o.size)(e)
                })
            }

            function assertEndOffset(e, t, r) {
                if ("number" == typeof t && "number" == typeof r && (0, o.size)(e) !== r - t) throw new n.SliceOffsetOutOfBoundsError({
                    offset: r,
                    position: "end",
                    size: (0, o.size)(e)
                })
            }

            function sliceBytes(e, t, r, {
                strict: n
            } = {}) {
                assertStartOffset(e, t);
                let i = e.slice(t, r);
                return n && assertEndOffset(i, t, r), i
            }

            function sliceHex(e, t, r, {
                strict: n
            } = {}) {
                assertStartOffset(e, t);
                let i = `0x${e.replace("0x","").slice((t??0)*2,(r??e.length)*2)}`;
                return n && assertEndOffset(i, t, r), i
            }
            t.slice = function(e, t, r, {
                strict: n
            } = {}) {
                return (0, i.isHex)(e, {
                    strict: !1
                }) ? sliceHex(e, t, r, {
                    strict: n
                }) : sliceBytes(e, t, r, {
                    strict: n
                })
            }, t.sliceBytes = sliceBytes, t.sliceHex = sliceHex
        },
        50775: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.trim = void 0, t.trim = function(e, {
                dir: t = "left"
            } = {}) {
                let r = "string" == typeof e ? e.replace("0x", "") : e,
                    n = 0;
                for (let e = 0; e < r.length - 1 && "0" === r["left" === t ? e : r.length - e - 1].toString(); e++) n++;
                return (r = "left" === t ? r.slice(n) : r.slice(0, r.length - n), "string" == typeof e) ? (1 === r.length && "right" === t && (r = `${r}0`), `0x${r.length%2==1?`0${r}`:r}`) : r
            }
        },
        9694: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.bytesToString = t.bytesToNumber = t.bytesToBool = t.bytesToBigInt = t.fromBytes = void 0;
            let n = r(44225),
                i = r(50775),
                o = r(4744),
                a = r(32054);

            function bytesToBigInt(e, t = {}) {
                void 0 !== t.size && (0, o.assertSize)(e, {
                    size: t.size
                });
                let r = (0, a.bytesToHex)(e, t);
                return (0, o.hexToBigInt)(r)
            }

            function bytesToBool(e, t = {}) {
                let r = e;
                if (void 0 !== t.size && ((0, o.assertSize)(r, {
                        size: t.size
                    }), r = (0, i.trim)(r)), r.length > 1 || r[0] > 1) throw new n.InvalidBytesBooleanError(r);
                return !!r[0]
            }

            function bytesToNumber(e, t = {}) {
                void 0 !== t.size && (0, o.assertSize)(e, {
                    size: t.size
                });
                let r = (0, a.bytesToHex)(e, t);
                return (0, o.hexToNumber)(r)
            }

            function bytesToString(e, t = {}) {
                let r = e;
                return void 0 !== t.size && ((0, o.assertSize)(r, {
                    size: t.size
                }), r = (0, i.trim)(r, {
                    dir: "right"
                })), new TextDecoder().decode(r)
            }
            t.fromBytes = function(e, t) {
                let r = "string" == typeof t ? {
                        to: t
                    } : t,
                    n = r.to;
                return "number" === n ? bytesToNumber(e, r) : "bigint" === n ? bytesToBigInt(e, r) : "boolean" === n ? bytesToBool(e, r) : "string" === n ? bytesToString(e, r) : (0, a.bytesToHex)(e, r)
            }, t.bytesToBigInt = bytesToBigInt, t.bytesToBool = bytesToBool, t.bytesToNumber = bytesToNumber, t.bytesToString = bytesToString
        },
        4744: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.hexToString = t.hexToNumber = t.hexToBool = t.hexToBigInt = t.fromHex = t.assertSize = void 0;
            let n = r(44225),
                i = r(93071),
                o = r(50775),
                a = r(58640);

            function assertSize(e, {
                size: t
            }) {
                if ((0, i.size)(e) > t) throw new n.SizeOverflowError({
                    givenSize: (0, i.size)(e),
                    maxSize: t
                })
            }

            function hexToBigInt(e, t = {}) {
                let {
                    signed: r
                } = t;
                t.size && assertSize(e, {
                    size: t.size
                });
                let n = BigInt(e);
                if (!r) return n;
                let i = (e.length - 2) / 2,
                    o = (1 n << 8 n * BigInt(i) - 1 n) - 1 n;
                return n <= o ? n : n - BigInt(`0x${"f".padStart(2*i,"f")}`) - 1 n
            }

            function hexToBool(e, t = {}) {
                let r = e;
                if (t.size && (assertSize(r, {
                        size: t.size
                    }), r = (0, o.trim)(r)), "0x00" === (0, o.trim)(r)) return !1;
                if ("0x01" === (0, o.trim)(r)) return !0;
                throw new n.InvalidHexBooleanError(r)
            }

            function hexToNumber(e, t = {}) {
                return Number(hexToBigInt(e, t))
            }

            function hexToString(e, t = {}) {
                let r = (0, a.hexToBytes)(e);
                return t.size && (assertSize(r, {
                    size: t.size
                }), r = (0, o.trim)(r, {
                    dir: "right"
                })), new TextDecoder().decode(r)
            }
            t.assertSize = assertSize, t.fromHex = function(e, t) {
                let r = "string" == typeof t ? {
                        to: t
                    } : t,
                    n = r.to;
                return "number" === n ? hexToNumber(e, r) : "bigint" === n ? hexToBigInt(e, r) : "string" === n ? hexToString(e, r) : "boolean" === n ? hexToBool(e, r) : (0, a.hexToBytes)(e, r)
            }, t.hexToBigInt = hexToBigInt, t.hexToBool = hexToBool, t.hexToNumber = hexToNumber, t.hexToString = hexToString
        },
        56591: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.rlpToHex = t.rlpToBytes = t.fromRlp = void 0;
            let n = r(9537),
                i = r(44225),
                o = r(85070),
                a = r(58640),
                s = r(32054);

            function fromRlp(e, t = "hex") {
                let r = (() => {
                        if ("string" == typeof e) {
                            if (e.length > 3 && e.length % 2 != 0) throw new i.InvalidHexValueError(e);
                            return (0, a.hexToBytes)(e)
                        }
                        return e
                    })(),
                    n = (0, o.createCursor)(r),
                    c = function fromRlpCursor(e, t = "hex") {
                        if (0 === e.bytes.length) return "hex" === t ? (0, s.bytesToHex)(e.bytes) : e.bytes;
                        let r = e.readByte();
                        if (r < 128 && e.decrementPosition(1), r < 192) {
                            let n = readLength(e, r, 128),
                                i = e.readBytes(n);
                            return "hex" === t ? (0, s.bytesToHex)(i) : i
                        }
                        let n = readLength(e, r, 192);
                        return function(e, t, r) {
                            let n = e.position,
                                i = [];
                            for (; e.position - n < t;) i.push(fromRlpCursor(e, r));
                            return i
                        }(e, n, t)
                    }(n, t);
                return c
            }

            function readLength(e, t, r) {
                if (128 === r && t < 128) return 1;
                if (t <= r + 55) return t - r;
                if (t === r + 55 + 1) return e.readUint8();
                if (t === r + 55 + 2) return e.readUint16();
                if (t === r + 55 + 3) return e.readUint24();
                if (t === r + 55 + 4) return e.readUint32();
                throw new n.BaseError("Invalid RLP prefix")
            }
            t.fromRlp = fromRlp, t.rlpToBytes = function(e, t = "bytes") {
                return fromRlp(e, t)
            }, t.rlpToHex = function(e, t = "hex") {
                return fromRlp(e, t)
            }
        },
        58640: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.stringToBytes = t.numberToBytes = t.hexToBytes = t.boolToBytes = t.toBytes = void 0;
            let n = r(9537),
                i = r(90383),
                o = r(95946),
                a = r(4744),
                s = r(32054),
                c = new TextEncoder;

            function boolToBytes(e, t = {}) {
                let r = new Uint8Array(1);
                return (r[0] = Number(e), "number" == typeof t.size) ? ((0, a.assertSize)(r, {
                    size: t.size
                }), (0, o.pad)(r, {
                    size: t.size
                })) : r
            }
            t.toBytes = function(e, t = {}) {
                return "number" == typeof e || "bigint" == typeof e ? numberToBytes(e, t) : "boolean" == typeof e ? boolToBytes(e, t) : (0, i.isHex)(e) ? hexToBytes(e, t) : stringToBytes(e, t)
            }, t.boolToBytes = boolToBytes;
            let u = {
                zero: 48,
                nine: 57,
                A: 65,
                F: 70,
                a: 97,
                f: 102
            };

            function charCodeToBase16(e) {
                return e >= u.zero && e <= u.nine ? e - u.zero : e >= u.A && e <= u.F ? e - (u.A - 10) : e >= u.a && e <= u.f ? e - (u.a - 10) : void 0
            }

            function hexToBytes(e, t = {}) {
                let r = e;
                t.size && ((0, a.assertSize)(r, {
                    size: t.size
                }), r = (0, o.pad)(r, {
                    dir: "right",
                    size: t.size
                }));
                let i = r.slice(2);
                i.length % 2 && (i = `0${i}`);
                let s = i.length / 2,
                    c = new Uint8Array(s);
                for (let e = 0, t = 0; e < s; e++) {
                    let r = charCodeToBase16(i.charCodeAt(t++)),
                        o = charCodeToBase16(i.charCodeAt(t++));
                    if (void 0 === r || void 0 === o) throw new n.BaseError(`Invalid byte sequence ("${i[t-2]}${i[t-1]}" in "${i}").`);
                    c[e] = 16 * r + o
                }
                return c
            }

            function numberToBytes(e, t) {
                let r = (0, s.numberToHex)(e, t);
                return hexToBytes(r)
            }

            function stringToBytes(e, t = {}) {
                let r = c.encode(e);
                return "number" == typeof t.size ? ((0, a.assertSize)(r, {
                    size: t.size
                }), (0, o.pad)(r, {
                    dir: "right",
                    size: t.size
                })) : r
            }
            t.hexToBytes = hexToBytes, t.numberToBytes = numberToBytes, t.stringToBytes = stringToBytes
        },
        32054: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.stringToHex = t.numberToHex = t.bytesToHex = t.boolToHex = t.toHex = void 0;
            let n = r(44225),
                i = r(95946),
                o = r(4744),
                a = Array.from({
                    length: 256
                }, (e, t) => t.toString(16).padStart(2, "0"));

            function boolToHex(e, t = {}) {
                let r = `0x${Number(e)}`;
                return "number" == typeof t.size ? ((0, o.assertSize)(r, {
                    size: t.size
                }), (0, i.pad)(r, {
                    size: t.size
                })) : r
            }

            function bytesToHex(e, t = {}) {
                let r = "";
                for (let t = 0; t < e.length; t++) r += a[e[t]];
                let n = `0x${r}`;
                return "number" == typeof t.size ? ((0, o.assertSize)(n, {
                    size: t.size
                }), (0, i.pad)(n, {
                    dir: "right",
                    size: t.size
                })) : n
            }

            function numberToHex(e, t = {}) {
                let r;
                let {
                    signed: o,
                    size: a
                } = t, s = BigInt(e);
                a ? r = o ? (1 n << 8 n * BigInt(a) - 1 n) - 1 n : 2 n ** (8 n * BigInt(a)) - 1 n : "number" == typeof e && (r = BigInt(Number.MAX_SAFE_INTEGER));
                let c = "bigint" == typeof r && o ? -r - 1 n : 0;
                if (r && s > r || s < c) {
                    let t = "bigint" == typeof e ? "n" : "";
                    throw new n.IntegerOutOfRangeError({
                        max: r ? `${r}${t}` : void 0,
                        min: `${c}${t}`,
                        signed: o,
                        size: a,
                        value: `${e}${t}`
                    })
                }
                let u = `0x${(o&&s<0?(1n<<BigInt(8*a))+BigInt(s):s).toString(16)}`;
                return a ? (0, i.pad)(u, {
                    size: a
                }) : u
            }
            t.toHex = function(e, t = {}) {
                return "number" == typeof e || "bigint" == typeof e ? numberToHex(e, t) : "string" == typeof e ? stringToHex(e, t) : "boolean" == typeof e ? boolToHex(e, t) : bytesToHex(e, t)
            }, t.boolToHex = boolToHex, t.bytesToHex = bytesToHex, t.numberToHex = numberToHex;
            let s = new TextEncoder;

            function stringToHex(e, t = {}) {
                let r = s.encode(e);
                return bytesToHex(r, t)
            }
            t.stringToHex = stringToHex
        },
        57116: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.hexToRlp = t.bytesToRlp = t.toRlp = void 0;
            let n = r(33122),
                i = r(85070),
                o = r(58640),
                a = r(32054);

            function toRlp(e, t = "hex") {
                let r = function getEncodable(e) {
                        return Array.isArray(e) ? function(e) {
                            let t = e.reduce((e, t) => e + t.length, 0),
                                r = getSizeOfLength(t),
                                n = t <= 55 ? 1 + t : 1 + r + t;
                            return {
                                length: n,
                                encode(n) {
                                    for (let {
                                            encode: i
                                        } of (t <= 55 ? n.pushByte(192 + t) : (n.pushByte(247 + r), 1 === r ? n.pushUint8(t) : 2 === r ? n.pushUint16(t) : 3 === r ? n.pushUint24(t) : n.pushUint32(t)), e)) i(n)
                                }
                            }
                        }(e.map(e => getEncodable(e))) : function(e) {
                            let t = "string" == typeof e ? (0, o.hexToBytes)(e) : e,
                                r = getSizeOfLength(t.length),
                                n = 1 === t.length && t[0] < 128 ? 1 : t.length <= 55 ? 1 + t.length : 1 + r + t.length;
                            return {
                                length: n,
                                encode(e) {
                                    1 === t.length && t[0] < 128 || (t.length <= 55 ? e.pushByte(128 + t.length) : (e.pushByte(183 + r), 1 === r ? e.pushUint8(t.length) : 2 === r ? e.pushUint16(t.length) : 3 === r ? e.pushUint24(t.length) : e.pushUint32(t.length))), e.pushBytes(t)
                                }
                            }
                        }(e)
                    }(e),
                    n = (0, i.createCursor)(new Uint8Array(r.length));
                return (r.encode(n), "hex" === t) ? (0, a.bytesToHex)(n.bytes) : n.bytes
            }

            function getSizeOfLength(e) {
                if (e < 256) return 1;
                if (e < 65536) return 2;
                if (e < 16777216) return 3;
                if (e < 4294967296) return 4;
                throw new n.BaseError("Length is too large.")
            }
            t.toRlp = toRlp, t.bytesToRlp = function(e, t = "bytes") {
                return toRlp(e, t)
            }, t.hexToRlp = function(e, t = "hex") {
                return toRlp(e, t)
            }
        },
        87662: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.parseAvatarRecord = void 0;
            let n = r(70579);
            async function parseAvatarRecord(e, {
                gatewayUrls: t,
                record: r
            }) {
                return /eip155:/i.test(r) ? parseNftAvatarUri(e, {
                    gatewayUrls: t,
                    record: r
                }) : (0, n.parseAvatarUri)({
                    uri: r,
                    gatewayUrls: t
                })
            }
            async function parseNftAvatarUri(e, {
                gatewayUrls: t,
                record: r
            }) {
                let i = (0, n.parseNftUri)(r),
                    o = await (0, n.getNftTokenUri)(e, {
                        nft: i
                    }),
                    {
                        uri: a,
                        isOnChain: s,
                        isEncoded: c
                    } = (0, n.resolveAvatarUri)({
                        uri: o,
                        gatewayUrls: t
                    });
                if (s && (a.includes("data:application/json;base64,") || a.startsWith("{"))) {
                    let e = c ? atob(a.replace("data:application/json;base64,", "")) : a,
                        r = JSON.parse(e);
                    return (0, n.parseAvatarUri)({
                        uri: (0, n.getJsonImage)(r),
                        gatewayUrls: t
                    })
                }
                let u = i.tokenID;
                return "erc1155" === i.namespace && (u = u.replace("0x", "").padStart(64, "0")), (0, n.getMetadataAvatarUri)({
                    gatewayUrls: t,
                    uri: a.replace(/(?:0x)?{id}/, u)
                })
            }
            t.parseAvatarRecord = parseAvatarRecord
        },
        70579: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getNftTokenUri = t.parseNftUri = t.parseAvatarUri = t.getMetadataAvatarUri = t.getJsonImage = t.resolveAvatarUri = t.getGateway = t.isImageUri = void 0;
            let n = r(94508),
                i = r(4836),
                o = /(?<protocol>https?:\/\/[^\/]*|ipfs:\/|ipns:\/|ar:\/)?(?<root>\/)?(?<subpath>ipfs\/|ipns\/)?(?<target>[\w\-.]+)(?<subtarget>\/.*)?/,
                a = /^(Qm[1-9A-HJ-NP-Za-km-z]{44,}|b[A-Za-z2-7]{58,}|B[A-Z2-7]{58,}|z[1-9A-HJ-NP-Za-km-z]{48,}|F[0-9A-F]{50,})(\/(?<target>[\w\-.]+))?(?<subtarget>\/.*)?$/,
                s = /^data:([a-zA-Z\-/+]*);base64,([^"].*)/,
                c = /^data:([a-zA-Z\-/+]*)?(;[a-zA-Z0-9].*?)?(,)/;
            async function isImageUri(e) {
                try {
                    let t = await fetch(e, {
                        method: "HEAD"
                    });
                    if (200 === t.status) {
                        let e = t.headers.get("content-type");
                        return e ? .startsWith("image/")
                    }
                    return !1
                } catch (t) {
                    if ("object" == typeof t && void 0 !== t.response || !globalThis.hasOwnProperty("Image")) return !1;
                    return new Promise(t => {
                        let r = new Image;
                        r.onload = () => {
                            t(!0)
                        }, r.onerror = () => {
                            t(!1)
                        }, r.src = e
                    })
                }
            }

            function getGateway(e, t) {
                return e ? e.endsWith("/") ? e.slice(0, -1) : e : t
            }

            function resolveAvatarUri({
                uri: e,
                gatewayUrls: t
            }) {
                let r = s.test(e);
                if (r) return {
                    uri: e,
                    isOnChain: !0,
                    isEncoded: r
                };
                let n = getGateway(t ? .ipfs, "https://ipfs.io"),
                    u = getGateway(t ? .arweave, "https://arweave.net"),
                    l = e.match(o),
                    {
                        protocol: d,
                        subpath: f,
                        target: p,
                        subtarget: y = ""
                    } = l ? .groups || {},
                    g = "ipns:/" === d || "ipns/" === f,
                    v = "ipfs:/" === d || "ipfs/" === f || a.test(e);
                if (e.startsWith("http") && !g && !v) {
                    let r = e;
                    return t ? .arweave && (r = e.replace(/https:\/\/arweave.net/g, t ? .arweave)), {
                        uri: r,
                        isOnChain: !1,
                        isEncoded: !1
                    }
                }
                if ((g || v) && p) return {
                    uri: `${n}/${g?"ipns":"ipfs"}/${p}${y}`,
                    isOnChain: !1,
                    isEncoded: !1
                };
                if ("ar:/" === d && p) return {
                    uri: `${u}/${p}${y||""}`,
                    isOnChain: !1,
                    isEncoded: !1
                };
                let E = e.replace(c, "");
                if (E.startsWith("<svg") && (E = `data:image/svg+xml;base64,${btoa(E)}`), E.startsWith("data:") || E.startsWith("{")) return {
                    uri: E,
                    isOnChain: !0,
                    isEncoded: !1
                };
                throw new i.EnsAvatarUriResolutionError({
                    uri: e
                })
            }

            function getJsonImage(e) {
                if ("object" != typeof e || !("image" in e) && !("image_url" in e) && !("image_data" in e)) throw new i.EnsAvatarInvalidMetadataError({
                    data: e
                });
                return e.image || e.image_url || e.image_data
            }
            async function getMetadataAvatarUri({
                gatewayUrls: e,
                uri: t
            }) {
                try {
                    let r = await fetch(t).then(e => e.json()),
                        n = await parseAvatarUri({
                            gatewayUrls: e,
                            uri: getJsonImage(r)
                        });
                    return n
                } catch {
                    throw new i.EnsAvatarUriResolutionError({
                        uri: t
                    })
                }
            }
            async function parseAvatarUri({
                gatewayUrls: e,
                uri: t
            }) {
                let {
                    uri: r,
                    isOnChain: n
                } = resolveAvatarUri({
                    uri: t,
                    gatewayUrls: e
                });
                if (n) return r;
                let o = await isImageUri(r);
                if (o) return r;
                throw new i.EnsAvatarUriResolutionError({
                    uri: t
                })
            }
            async function getNftTokenUri(e, {
                nft: t
            }) {
                if ("erc721" === t.namespace) return (0, n.readContract)(e, {
                    address: t.contractAddress,
                    abi: [{
                        name: "tokenURI",
                        type: "function",
                        stateMutability: "view",
                        inputs: [{
                            name: "tokenId",
                            type: "uint256"
                        }],
                        outputs: [{
                            name: "",
                            type: "string"
                        }]
                    }],
                    functionName: "tokenURI",
                    args: [BigInt(t.tokenID)]
                });
                if ("erc1155" === t.namespace) return (0, n.readContract)(e, {
                    address: t.contractAddress,
                    abi: [{
                        name: "uri",
                        type: "function",
                        stateMutability: "view",
                        inputs: [{
                            name: "_id",
                            type: "uint256"
                        }],
                        outputs: [{
                            name: "",
                            type: "string"
                        }]
                    }],
                    functionName: "uri",
                    args: [BigInt(t.tokenID)]
                });
                throw new i.EnsAvatarUnsupportedNamespaceError({
                    namespace: t.namespace
                })
            }
            t.isImageUri = isImageUri, t.getGateway = getGateway, t.resolveAvatarUri = resolveAvatarUri, t.getJsonImage = getJsonImage, t.getMetadataAvatarUri = getMetadataAvatarUri, t.parseAvatarUri = parseAvatarUri, t.parseNftUri = function(e) {
                let t = e;
                t.startsWith("did:nft:") && (t = t.replace("did:nft:", "").replace(/_/g, "/"));
                let [r, n, o] = t.split("/"), [a, s] = r.split(":"), [c, u] = n.split(":");
                if (!a || "eip155" !== a.toLowerCase()) throw new i.EnsAvatarInvalidNftUriError({
                    reason: "Only EIP-155 supported"
                });
                if (!s) throw new i.EnsAvatarInvalidNftUriError({
                    reason: "Chain ID not found"
                });
                if (!u) throw new i.EnsAvatarInvalidNftUriError({
                    reason: "Contract address not found"
                });
                if (!o) throw new i.EnsAvatarInvalidNftUriError({
                    reason: "Token ID not found"
                });
                if (!c) throw new i.EnsAvatarInvalidNftUriError({
                    reason: "ERC namespace not found"
                });
                return {
                    chainID: parseInt(s),
                    namespace: c.toLowerCase(),
                    contractAddress: u,
                    tokenID: o
                }
            }, t.getNftTokenUri = getNftTokenUri
        },
        74046: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.encodeLabelhash = void 0, t.encodeLabelhash = function(e) {
                return `[${e.slice(2)}]`
            }
        },
        52553: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.encodedLabelToLabelhash = void 0;
            let n = r(90383);
            t.encodedLabelToLabelhash = function(e) {
                if (66 !== e.length || 0 !== e.indexOf("[") || 65 !== e.indexOf("]")) return null;
                let t = `0x${e.slice(1,65)}`;
                return (0, n.isHex)(t) ? t : null
            }
        },
        65079: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.isNullUniversalResolverError = void 0;
            let n = r(23056),
                i = r(9537),
                o = r(32405);
            t.isNullUniversalResolverError = function(e, t) {
                if (!(e instanceof i.BaseError)) return !1;
                let r = e.walk(e => e instanceof o.ContractFunctionRevertedError);
                return r instanceof o.ContractFunctionRevertedError && (!!(r.data ? .errorName === "ResolverNotFound" || r.data ? .errorName === "ResolverWildcardNotSupported" || r.reason ? .includes("Wildcard on non-extended resolvers is not supported")) || "reverse" === t && r.reason === n.panicReasons[50])
            }
        },
        91356: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.labelhash = void 0;
            let n = r(58640),
                i = r(32054),
                o = r(34650),
                a = r(52553);
            t.labelhash = function(e) {
                let t = new Uint8Array(32).fill(0);
                return e ? (0, a.encodedLabelToLabelhash)(e) || (0, o.keccak256)((0, n.stringToBytes)(e)) : (0, i.bytesToHex)(t)
            }
        },
        86373: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.namehash = void 0;
            let n = r(62127),
                i = r(58640),
                o = r(32054),
                a = r(34650),
                s = r(52553);
            t.namehash = function(e) {
                let t = new Uint8Array(32).fill(0);
                if (!e) return (0, o.bytesToHex)(t);
                let r = e.split(".");
                for (let e = r.length - 1; e >= 0; e -= 1) {
                    let o = (0, s.encodedLabelToLabelhash)(r[e]),
                        c = o ? (0, i.toBytes)(o) : (0, a.keccak256)((0, i.stringToBytes)(r[e]), "bytes");
                    t = (0, a.keccak256)((0, n.concat)([t, c]), "bytes")
                }
                return (0, o.bytesToHex)(t)
            }
        },
        83013: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.packetToBytes = void 0;
            let n = r(58640),
                i = r(74046),
                o = r(91356);
            t.packetToBytes = function(e) {
                let t = e.replace(/^\.|\.$/gm, "");
                if (0 === t.length) return new Uint8Array(1);
                let r = new Uint8Array((0, n.stringToBytes)(t).byteLength + 2),
                    a = 0,
                    s = t.split(".");
                for (let e = 0; e < s.length; e++) {
                    let t = (0, n.stringToBytes)(s[e]);
                    t.byteLength > 255 && (t = (0, n.stringToBytes)((0, i.encodeLabelhash)((0, o.labelhash)(s[e])))), r[a] = t.length, r.set(t, a + 1), a += t.length + 1
                }
                return r.byteLength !== a + 1 ? r.slice(0, a + 1) : r
            }
        },
        75620: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getCallError = void 0;
            let n = r(32405),
                i = r(72911),
                o = r(62037);
            t.getCallError = function(e, {
                docsPath: t,
                ...r
            }) {
                let a = (() => {
                    let t = (0, o.getNodeError)(e, r);
                    return t instanceof i.UnknownNodeError ? e : t
                })();
                return new n.CallExecutionError(a, {
                    docsPath: t,
                    ...r
                })
            }
        },
        25229: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getContractError = void 0;
            let n = r(31480),
                i = r(9537),
                o = r(32405),
                a = r(52091);
            t.getContractError = function(e, {
                abi: t,
                address: r,
                args: s,
                docsPath: c,
                functionName: u,
                sender: l
            }) {
                let {
                    code: d,
                    data: f,
                    message: p,
                    shortMessage: y
                } = e instanceof o.RawContractError ? e : e instanceof i.BaseError ? e.walk(e => "data" in e) || e.walk() : {}, g = e instanceof n.AbiDecodingZeroDataError ? new o.ContractFunctionZeroDataError({
                    functionName: u
                }) : [3, a.InternalRpcError.code].includes(d) && (f || p || y) ? new o.ContractFunctionRevertedError({
                    abi: t,
                    data: "object" == typeof f ? f.data : f,
                    functionName: u,
                    message: y ? ? p
                }) : e;
                return new o.ContractFunctionExecutionError(g, {
                    abi: t,
                    args: s,
                    contractAddress: r,
                    docsPath: c,
                    functionName: u,
                    sender: l
                })
            }
        },
        12364: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getEstimateGasError = void 0;
            let n = r(22577),
                i = r(72911),
                o = r(62037);
            t.getEstimateGasError = function(e, {
                docsPath: t,
                ...r
            }) {
                let a = (() => {
                    let t = (0, o.getNodeError)(e, r);
                    return t instanceof i.UnknownNodeError ? e : t
                })();
                return new n.EstimateGasExecutionError(a, {
                    docsPath: t,
                    ...r
                })
            }
        },
        62037: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getNodeError = t.containsNodeError = void 0;
            let n = r(9537),
                i = r(72911),
                o = r(58323),
                a = r(52091);
            t.containsNodeError = function(e) {
                return e instanceof a.TransactionRejectedRpcError || e instanceof a.InvalidInputRpcError || e instanceof o.RpcRequestError && e.code === i.ExecutionRevertedError.code
            }, t.getNodeError = function(e, t) {
                let r = (e.details || "").toLowerCase(),
                    o = e.walk(e => e.code === i.ExecutionRevertedError.code);
                return o instanceof n.BaseError ? new i.ExecutionRevertedError({
                    cause: e,
                    message: o.details
                }) : i.ExecutionRevertedError.nodeMessage.test(r) ? new i.ExecutionRevertedError({
                    cause: e,
                    message: e.details
                }) : i.FeeCapTooHighError.nodeMessage.test(r) ? new i.FeeCapTooHighError({
                    cause: e,
                    maxFeePerGas: t ? .maxFeePerGas
                }) : i.FeeCapTooLowError.nodeMessage.test(r) ? new i.FeeCapTooLowError({
                    cause: e,
                    maxFeePerGas: t ? .maxFeePerGas
                }) : i.NonceTooHighError.nodeMessage.test(r) ? new i.NonceTooHighError({
                    cause: e,
                    nonce: t ? .nonce
                }) : i.NonceTooLowError.nodeMessage.test(r) ? new i.NonceTooLowError({
                    cause: e,
                    nonce: t ? .nonce
                }) : i.NonceMaxValueError.nodeMessage.test(r) ? new i.NonceMaxValueError({
                    cause: e,
                    nonce: t ? .nonce
                }) : i.InsufficientFundsError.nodeMessage.test(r) ? new i.InsufficientFundsError({
                    cause: e
                }) : i.IntrinsicGasTooHighError.nodeMessage.test(r) ? new i.IntrinsicGasTooHighError({
                    cause: e,
                    gas: t ? .gas
                }) : i.IntrinsicGasTooLowError.nodeMessage.test(r) ? new i.IntrinsicGasTooLowError({
                    cause: e,
                    gas: t ? .gas
                }) : i.TransactionTypeNotSupportedError.nodeMessage.test(r) ? new i.TransactionTypeNotSupportedError({
                    cause: e
                }) : i.TipAboveFeeCapError.nodeMessage.test(r) ? new i.TipAboveFeeCapError({
                    cause: e,
                    maxFeePerGas: t ? .maxFeePerGas,
                    maxPriorityFeePerGas: t ? .maxPriorityFeePerGas
                }) : new i.UnknownNodeError({
                    cause: e
                })
            }
        },
        50119: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getTransactionError = void 0;
            let n = r(72911),
                i = r(65750),
                o = r(62037);
            t.getTransactionError = function(e, {
                docsPath: t,
                ...r
            }) {
                let a = (() => {
                    let t = (0, o.getNodeError)(e, r);
                    return t instanceof n.UnknownNodeError ? e : t
                })();
                return new i.TransactionExecutionError(a, {
                    docsPath: t,
                    ...r
                })
            }
        },
        93325: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.createFilterRequestScope = void 0, t.createFilterRequestScope = function(e, {
                method: t
            }) {
                let r = {};
                return "fallback" === e.transport.type && e.transport.onResponse ? .(({
                    method: e,
                    response: n,
                    status: i,
                    transport: o
                }) => {
                    "success" === i && t === e && (r[n] = o.request)
                }), t => r[t] || e.request
            }
        },
        94160: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.defineBlock = t.formatBlock = void 0;
            let n = r(57134),
                i = r(1603);

            function formatBlock(e) {
                let t = e.transactions ? .map(e => "string" == typeof e ? e : i.formatTransaction(e));
                return { ...e,
                    baseFeePerGas: e.baseFeePerGas ? BigInt(e.baseFeePerGas) : null,
                    difficulty: e.difficulty ? BigInt(e.difficulty) : void 0,
                    gasLimit: e.gasLimit ? BigInt(e.gasLimit) : void 0,
                    gasUsed: e.gasUsed ? BigInt(e.gasUsed) : void 0,
                    hash: e.hash ? e.hash : null,
                    logsBloom: e.logsBloom ? e.logsBloom : null,
                    nonce: e.nonce ? e.nonce : null,
                    number: e.number ? BigInt(e.number) : null,
                    size: e.size ? BigInt(e.size) : void 0,
                    timestamp: e.timestamp ? BigInt(e.timestamp) : void 0,
                    transactions: t,
                    totalDifficulty: e.totalDifficulty ? BigInt(e.totalDifficulty) : null
                }
            }
            t.formatBlock = formatBlock, t.defineBlock = (0, n.defineFormatter)("block", formatBlock)
        },
        25798: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.extract = void 0, t.extract = function(e, {
                format: t
            }) {
                if (!t) return {};
                let r = {},
                    n = t(e || {});
                return function extract_(t) {
                    let n = Object.keys(t);
                    for (let i of n) i in e && (r[i] = e[i]), t[i] && "object" == typeof t[i] && !Array.isArray(t[i]) && extract_(t[i])
                }(n), r
            }
        },
        34329: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.formatFeeHistory = void 0, t.formatFeeHistory = function(e) {
                return {
                    baseFeePerGas: e.baseFeePerGas.map(e => BigInt(e)),
                    gasUsedRatio: e.gasUsedRatio,
                    oldestBlock: BigInt(e.oldestBlock),
                    reward: e.reward ? .map(e => e.map(e => BigInt(e)))
                }
            }
        },
        57134: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.defineFormatter = void 0, t.defineFormatter = function(e, t) {
                return ({
                    exclude: r,
                    format: n
                }) => ({
                    exclude: r,
                    format: e => {
                        let i = t(e);
                        if (r)
                            for (let e of r) delete i[e];
                        return { ...i,
                            ...n(e)
                        }
                    },
                    type: e
                })
            }
        },
        75765: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.formatLog = void 0, t.formatLog = function(e, {
                args: t,
                eventName: r
            } = {}) {
                return { ...e,
                    blockHash: e.blockHash ? e.blockHash : null,
                    blockNumber: e.blockNumber ? BigInt(e.blockNumber) : null,
                    logIndex: e.logIndex ? Number(e.logIndex) : null,
                    transactionHash: e.transactionHash ? e.transactionHash : null,
                    transactionIndex: e.transactionIndex ? Number(e.transactionIndex) : null,
                    ...r ? {
                        args: t,
                        eventName: r
                    } : {}
                }
            }
        },
        77077: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.formatProof = void 0;
            let n = r(54388);
            t.formatProof = function(e) {
                return { ...e,
                    balance: e.balance ? BigInt(e.balance) : void 0,
                    nonce: e.nonce ? (0, n.hexToNumber)(e.nonce) : void 0,
                    storageProof: e.storageProof ? e.storageProof.map(e => ({ ...e,
                        value: BigInt(e.value)
                    })) : void 0
                }
            }
        },
        1603: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.defineTransaction = t.formatTransaction = t.transactionType = void 0;
            let n = r(4744),
                i = r(57134);

            function formatTransaction(e) {
                let r = { ...e,
                    blockHash: e.blockHash ? e.blockHash : null,
                    blockNumber: e.blockNumber ? BigInt(e.blockNumber) : null,
                    chainId: e.chainId ? (0, n.hexToNumber)(e.chainId) : void 0,
                    gas: e.gas ? BigInt(e.gas) : void 0,
                    gasPrice: e.gasPrice ? BigInt(e.gasPrice) : void 0,
                    maxFeePerGas: e.maxFeePerGas ? BigInt(e.maxFeePerGas) : void 0,
                    maxPriorityFeePerGas: e.maxPriorityFeePerGas ? BigInt(e.maxPriorityFeePerGas) : void 0,
                    nonce: e.nonce ? (0, n.hexToNumber)(e.nonce) : void 0,
                    to: e.to ? e.to : null,
                    transactionIndex: e.transactionIndex ? Number(e.transactionIndex) : null,
                    type: e.type ? t.transactionType[e.type] : void 0,
                    typeHex: e.type ? e.type : void 0,
                    value: e.value ? BigInt(e.value) : void 0,
                    v: e.v ? BigInt(e.v) : void 0
                };
                return r.yParity = (() => {
                    if (e.yParity) return Number(e.yParity);
                    if ("bigint" == typeof r.v) {
                        if (0 n === r.v || 27 n === r.v) return 0;
                        if (1 n === r.v || 28 n === r.v) return 1;
                        if (r.v >= 35 n) return r.v % 2 n === 0 n ? 1 : 0
                    }
                })(), "legacy" === r.type && (delete r.accessList, delete r.maxFeePerGas, delete r.maxPriorityFeePerGas, delete r.yParity), "eip2930" === r.type && (delete r.maxFeePerGas, delete r.maxPriorityFeePerGas), r
            }
            t.transactionType = {
                "0x0": "legacy",
                "0x1": "eip2930",
                "0x2": "eip1559"
            }, t.formatTransaction = formatTransaction, t.defineTransaction = (0, i.defineFormatter)("transaction", formatTransaction)
        },
        89189: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.defineTransactionReceipt = t.formatTransactionReceipt = void 0;
            let n = r(4744),
                i = r(57134),
                o = r(75765),
                a = r(1603),
                s = {
                    "0x0": "reverted",
                    "0x1": "success"
                };

            function formatTransactionReceipt(e) {
                return { ...e,
                    blockNumber: e.blockNumber ? BigInt(e.blockNumber) : null,
                    contractAddress: e.contractAddress ? e.contractAddress : null,
                    cumulativeGasUsed: e.cumulativeGasUsed ? BigInt(e.cumulativeGasUsed) : null,
                    effectiveGasPrice: e.effectiveGasPrice ? BigInt(e.effectiveGasPrice) : null,
                    gasUsed: e.gasUsed ? BigInt(e.gasUsed) : null,
                    logs: e.logs ? e.logs.map(e => (0, o.formatLog)(e)) : null,
                    to: e.to ? e.to : null,
                    transactionIndex: e.transactionIndex ? (0, n.hexToNumber)(e.transactionIndex) : null,
                    status: e.status ? s[e.status] : null,
                    type: e.type ? a.transactionType[e.type] || e.type : null
                }
            }
            t.formatTransactionReceipt = formatTransactionReceipt, t.defineTransactionReceipt = (0, i.defineFormatter)("transactionReceipt", formatTransactionReceipt)
        },
        63465: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.defineTransactionRequest = t.formatTransactionRequest = t.rpcTransactionType = void 0;
            let n = r(32054),
                i = r(57134);

            function formatTransactionRequest(e) {
                return { ...e,
                    gas: void 0 !== e.gas ? (0, n.numberToHex)(e.gas) : void 0,
                    gasPrice: void 0 !== e.gasPrice ? (0, n.numberToHex)(e.gasPrice) : void 0,
                    maxFeePerGas: void 0 !== e.maxFeePerGas ? (0, n.numberToHex)(e.maxFeePerGas) : void 0,
                    maxPriorityFeePerGas: void 0 !== e.maxPriorityFeePerGas ? (0, n.numberToHex)(e.maxPriorityFeePerGas) : void 0,
                    nonce: void 0 !== e.nonce ? (0, n.numberToHex)(e.nonce) : void 0,
                    type: void 0 !== e.type ? t.rpcTransactionType[e.type] : void 0,
                    value: void 0 !== e.value ? (0, n.numberToHex)(e.value) : void 0
                }
            }
            t.rpcTransactionType = {
                legacy: "0x0",
                eip2930: "0x1",
                eip1559: "0x2"
            }, t.formatTransactionRequest = formatTransactionRequest, t.defineTransactionRequest = (0, i.defineFormatter)("transactionRequest", formatTransactionRequest)
        },
        76103: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getAction = void 0, t.getAction = function(e, t, r) {
                return n => e[t.name || r] ? .(n) ? ? t(e, n)
            }
        },
        43225: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getEventSelector = void 0;
            let n = r(58640),
                i = r(74973),
                o = r(34650),
                hash = e => (0, o.keccak256)((0, n.toBytes)(e));
            t.getEventSelector = e => hash((0, i.getEventSignature)(e))
        },
        74973: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getEventSignature = void 0;
            let n = r(91738);
            t.getEventSignature = e => (0, n.getFunctionSignature)(e)
        },
        17883: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getFunctionSelector = void 0;
            let n = r(97307),
                i = r(58640),
                o = r(91738),
                a = r(34650),
                hash = e => (0, a.keccak256)((0, i.toBytes)(e));
            t.getFunctionSelector = e => (0, n.slice)(hash((0, o.getFunctionSignature)(e)), 0, 4)
        },
        91738: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getFunctionSignature = void 0;
            let n = r(84595),
                i = r(7244);
            t.getFunctionSignature = e => {
                let t = "string" == typeof e ? e : (0, n.formatAbiItem)(e);
                return (0, i.normalizeSignature)(t)
            }
        },
        37760: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.isHash = void 0;
            let n = r(90383),
                i = r(93071);
            t.isHash = function(e) {
                return (0, n.isHex)(e) && 32 === (0, i.size)(e)
            }
        },
        34650: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.keccak256 = void 0;
            let n = r(29749),
                i = r(90383),
                o = r(58640),
                a = r(32054);
            t.keccak256 = function(e, t) {
                let r = (0, n.keccak_256)((0, i.isHex)(e, {
                    strict: !1
                }) ? (0, o.toBytes)(e) : e);
                return "bytes" === (t || "hex") ? r : (0, a.toHex)(r)
            }
        },
        7244: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.normalizeSignature = void 0;
            let n = r(9537);
            t.normalizeSignature = function(e) {
                let t = !0,
                    r = "",
                    i = 0,
                    o = "",
                    a = !1;
                for (let n = 0; n < e.length; n++) {
                    let s = e[n];
                    if (["(", ")", ","].includes(s) && (t = !0), "(" === s && i++, ")" === s && i--, t) {
                        if (0 === i) {
                            if (" " === s && ["event", "function", ""].includes(o)) o = "";
                            else if (o += s, ")" === s) {
                                a = !0;
                                break
                            }
                            continue
                        }
                        if (" " === s) {
                            "," !== e[n - 1] && "," !== r && ",(" !== r && (r = "", t = !1);
                            continue
                        }
                        o += s, r += s
                    }
                }
                if (!a) throw new n.BaseError("Unable to normalize signature.");
                return o
            }
        },
        54388: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.concat = t.extractFunctionParts = t.extractFunctionType = t.extractFunctionParams = t.extractFunctionName = t.isAddressEqual = t.isAddress = t.getAddress = t.getCreate2Address = t.getCreateAddress = t.getContractAddress = t.publicKeyToAddress = t.parseAccount = t.formatAbiParams = t.formatAbiItem = t.formatAbiItemWithArgs = t.encodePacked = t.parseAbiParameters = t.parseAbiParameter = t.parseAbiItem = t.parseAbi = t.getAbiItem = t.encodeFunctionResult = t.encodeFunctionData = t.encodeEventTopics = t.encodeErrorResult = t.encodeDeployData = t.encodeAbiParameters = t.decodeFunctionResult = t.decodeFunctionData = t.decodeEventLog = t.decodeErrorResult = t.decodeAbiParameters = t.validateTypedData = t.stringify = t.rpc = t.getSocket = t.integerRegex = t.bytesRegex = t.arrayRegex = t.getChainContractAddress = t.extractChain = t.defineChain = t.assertCurrentChain = t.offchainLookupSignature = t.offchainLookupAbiItem = t.offchainLookup = t.ccipFetch = t.buildRequest = t.isDeterministicError = void 0, t.getEstimateGasError = t.getContractError = t.getCallError = t.getNodeError = t.containsNodeError = t.fromRlp = t.hexToString = t.hexToNumber = t.hexToBigInt = t.hexToBool = t.fromHex = t.fromBytes = t.bytesToString = t.bytesToNumber = t.bytesToBool = t.bytesToBigint = t.bytesToBigInt = t.stringToHex = t.numberToHex = t.toHex = t.bytesToHex = t.boolToHex = t.stringToBytes = t.numberToBytes = t.hexToBytes = t.toBytes = t.boolToBytes = t.toRlp = t.extract = t.formatTransactionRequest = t.defineTransactionRequest = t.defineTransactionReceipt = t.formatLog = t.transactionType = t.formatTransaction = t.defineTransaction = t.formatBlock = t.defineBlock = t.trim = t.sliceHex = t.sliceBytes = t.slice = t.size = t.padHex = t.padBytes = t.pad = t.isHex = t.isBytes = t.concatHex = t.concatBytes = void 0, t.parseGwei = t.parseEther = t.parseUnits = t.formatUnits = t.formatGwei = t.formatEther = t.serializeAccessList = t.serializeTransaction = t.prepareTransactionRequest = t.parseTransaction = t.assertTransactionLegacy = t.assertTransactionEIP2930 = t.assertTransactionEIP1559 = t.assertRequest = t.getTransactionType = t.getSerializedTransactionType = t.hashMessage = t.verifyTypedData = t.verifyMessage = t.recoverTypedDataAddress = t.recoverPublicKey = t.recoverMessageAddress = t.recoverAddress = t.hashTypedData = t.keccak256 = t.isHash = t.getFunctionSelector = t.getEventSelector = t.defineFormatter = t.getTransactionError = void 0;
            var n = r(75238);
            Object.defineProperty(t, "isDeterministicError", {
                enumerable: !0,
                get: function() {
                    return n.isDeterministicError
                }
            }), Object.defineProperty(t, "buildRequest", {
                enumerable: !0,
                get: function() {
                    return n.buildRequest
                }
            });
            var i = r(92519);
            Object.defineProperty(t, "ccipFetch", {
                enumerable: !0,
                get: function() {
                    return i.ccipFetch
                }
            }), Object.defineProperty(t, "offchainLookup", {
                enumerable: !0,
                get: function() {
                    return i.offchainLookup
                }
            }), Object.defineProperty(t, "offchainLookupAbiItem", {
                enumerable: !0,
                get: function() {
                    return i.offchainLookupAbiItem
                }
            }), Object.defineProperty(t, "offchainLookupSignature", {
                enumerable: !0,
                get: function() {
                    return i.offchainLookupSignature
                }
            });
            var o = r(43179);
            Object.defineProperty(t, "assertCurrentChain", {
                enumerable: !0,
                get: function() {
                    return o.assertCurrentChain
                }
            });
            var a = r(50356);
            Object.defineProperty(t, "defineChain", {
                enumerable: !0,
                get: function() {
                    return a.defineChain
                }
            });
            var s = r(78611);
            Object.defineProperty(t, "extractChain", {
                enumerable: !0,
                get: function() {
                    return s.extractChain
                }
            });
            var c = r(54971);
            Object.defineProperty(t, "getChainContractAddress", {
                enumerable: !0,
                get: function() {
                    return c.getChainContractAddress
                }
            });
            var u = r(89194);
            Object.defineProperty(t, "arrayRegex", {
                enumerable: !0,
                get: function() {
                    return u.arrayRegex
                }
            }), Object.defineProperty(t, "bytesRegex", {
                enumerable: !0,
                get: function() {
                    return u.bytesRegex
                }
            }), Object.defineProperty(t, "integerRegex", {
                enumerable: !0,
                get: function() {
                    return u.integerRegex
                }
            });
            var l = r(27658);
            Object.defineProperty(t, "getSocket", {
                enumerable: !0,
                get: function() {
                    return l.getSocket
                }
            }), Object.defineProperty(t, "rpc", {
                enumerable: !0,
                get: function() {
                    return l.rpc
                }
            });
            var d = r(42701);
            Object.defineProperty(t, "stringify", {
                enumerable: !0,
                get: function() {
                    return d.stringify
                }
            });
            var f = r(87059);
            Object.defineProperty(t, "validateTypedData", {
                enumerable: !0,
                get: function() {
                    return f.validateTypedData
                }
            });
            var p = r(29784);
            Object.defineProperty(t, "decodeAbiParameters", {
                enumerable: !0,
                get: function() {
                    return p.decodeAbiParameters
                }
            });
            var y = r(55865);
            Object.defineProperty(t, "decodeErrorResult", {
                enumerable: !0,
                get: function() {
                    return y.decodeErrorResult
                }
            });
            var g = r(8334);
            Object.defineProperty(t, "decodeEventLog", {
                enumerable: !0,
                get: function() {
                    return g.decodeEventLog
                }
            });
            var v = r(17354);
            Object.defineProperty(t, "decodeFunctionData", {
                enumerable: !0,
                get: function() {
                    return v.decodeFunctionData
                }
            });
            var E = r(7889);
            Object.defineProperty(t, "decodeFunctionResult", {
                enumerable: !0,
                get: function() {
                    return E.decodeFunctionResult
                }
            });
            var _ = r(43044);
            Object.defineProperty(t, "encodeAbiParameters", {
                enumerable: !0,
                get: function() {
                    return _.encodeAbiParameters
                }
            });
            var P = r(59697);
            Object.defineProperty(t, "encodeDeployData", {
                enumerable: !0,
                get: function() {
                    return P.encodeDeployData
                }
            });
            var T = r(19265);
            Object.defineProperty(t, "encodeErrorResult", {
                enumerable: !0,
                get: function() {
                    return T.encodeErrorResult
                }
            });
            var x = r(35840);
            Object.defineProperty(t, "encodeEventTopics", {
                enumerable: !0,
                get: function() {
                    return x.encodeEventTopics
                }
            });
            var A = r(61895);
            Object.defineProperty(t, "encodeFunctionData", {
                enumerable: !0,
                get: function() {
                    return A.encodeFunctionData
                }
            });
            var M = r(10606);
            Object.defineProperty(t, "encodeFunctionResult", {
                enumerable: !0,
                get: function() {
                    return M.encodeFunctionResult
                }
            });
            var B = r(33493);
            Object.defineProperty(t, "getAbiItem", {
                enumerable: !0,
                get: function() {
                    return B.getAbiItem
                }
            });
            var F = r(84595);
            Object.defineProperty(t, "parseAbi", {
                enumerable: !0,
                get: function() {
                    return F.parseAbi
                }
            }), Object.defineProperty(t, "parseAbiItem", {
                enumerable: !0,
                get: function() {
                    return F.parseAbiItem
                }
            }), Object.defineProperty(t, "parseAbiParameter", {
                enumerable: !0,
                get: function() {
                    return F.parseAbiParameter
                }
            }), Object.defineProperty(t, "parseAbiParameters", {
                enumerable: !0,
                get: function() {
                    return F.parseAbiParameters
                }
            });
            var N = r(32014);
            Object.defineProperty(t, "encodePacked", {
                enumerable: !0,
                get: function() {
                    return N.encodePacked
                }
            });
            var L = r(82865);
            Object.defineProperty(t, "formatAbiItemWithArgs", {
                enumerable: !0,
                get: function() {
                    return L.formatAbiItemWithArgs
                }
            });
            var U = r(32901);
            Object.defineProperty(t, "formatAbiItem", {
                enumerable: !0,
                get: function() {
                    return U.formatAbiItem
                }
            }), Object.defineProperty(t, "formatAbiParams", {
                enumerable: !0,
                get: function() {
                    return U.formatAbiParams
                }
            });
            var z = r(9783);
            Object.defineProperty(t, "parseAccount", {
                enumerable: !0,
                get: function() {
                    return z.parseAccount
                }
            });
            var G = r(97397);
            Object.defineProperty(t, "publicKeyToAddress", {
                enumerable: !0,
                get: function() {
                    return G.publicKeyToAddress
                }
            });
            var W = r(62105);
            Object.defineProperty(t, "getContractAddress", {
                enumerable: !0,
                get: function() {
                    return W.getContractAddress
                }
            }), Object.defineProperty(t, "getCreateAddress", {
                enumerable: !0,
                get: function() {
                    return W.getCreateAddress
                }
            }), Object.defineProperty(t, "getCreate2Address", {
                enumerable: !0,
                get: function() {
                    return W.getCreate2Address
                }
            });
            var V = r(46972);
            Object.defineProperty(t, "getAddress", {
                enumerable: !0,
                get: function() {
                    return V.getAddress
                }
            });
            var Q = r(74815);
            Object.defineProperty(t, "isAddress", {
                enumerable: !0,
                get: function() {
                    return Q.isAddress
                }
            });
            var K = r(25680);
            Object.defineProperty(t, "isAddressEqual", {
                enumerable: !0,
                get: function() {
                    return K.isAddressEqual
                }
            });
            var Y = r(56202);
            Object.defineProperty(t, "extractFunctionName", {
                enumerable: !0,
                get: function() {
                    return Y.extractFunctionName
                }
            }), Object.defineProperty(t, "extractFunctionParams", {
                enumerable: !0,
                get: function() {
                    return Y.extractFunctionParams
                }
            }), Object.defineProperty(t, "extractFunctionType", {
                enumerable: !0,
                get: function() {
                    return Y.extractFunctionType
                }
            }), Object.defineProperty(t, "extractFunctionParts", {
                enumerable: !0,
                get: function() {
                    return Y.extractFunctionParts
                }
            });
            var J = r(62127);
            Object.defineProperty(t, "concat", {
                enumerable: !0,
                get: function() {
                    return J.concat
                }
            }), Object.defineProperty(t, "concatBytes", {
                enumerable: !0,
                get: function() {
                    return J.concatBytes
                }
            }), Object.defineProperty(t, "concatHex", {
                enumerable: !0,
                get: function() {
                    return J.concatHex
                }
            });
            var X = r(59071);
            Object.defineProperty(t, "isBytes", {
                enumerable: !0,
                get: function() {
                    return X.isBytes
                }
            });
            var er = r(90383);
            Object.defineProperty(t, "isHex", {
                enumerable: !0,
                get: function() {
                    return er.isHex
                }
            });
            var en = r(95946);
            Object.defineProperty(t, "pad", {
                enumerable: !0,
                get: function() {
                    return en.pad
                }
            }), Object.defineProperty(t, "padBytes", {
                enumerable: !0,
                get: function() {
                    return en.padBytes
                }
            }), Object.defineProperty(t, "padHex", {
                enumerable: !0,
                get: function() {
                    return en.padHex
                }
            });
            var ei = r(93071);
            Object.defineProperty(t, "size", {
                enumerable: !0,
                get: function() {
                    return ei.size
                }
            });
            var eo = r(97307);
            Object.defineProperty(t, "slice", {
                enumerable: !0,
                get: function() {
                    return eo.slice
                }
            }), Object.defineProperty(t, "sliceBytes", {
                enumerable: !0,
                get: function() {
                    return eo.sliceBytes
                }
            }), Object.defineProperty(t, "sliceHex", {
                enumerable: !0,
                get: function() {
                    return eo.sliceHex
                }
            });
            var ea = r(50775);
            Object.defineProperty(t, "trim", {
                enumerable: !0,
                get: function() {
                    return ea.trim
                }
            });
            var es = r(94160);
            Object.defineProperty(t, "defineBlock", {
                enumerable: !0,
                get: function() {
                    return es.defineBlock
                }
            }), Object.defineProperty(t, "formatBlock", {
                enumerable: !0,
                get: function() {
                    return es.formatBlock
                }
            });
            var ec = r(1603);
            Object.defineProperty(t, "defineTransaction", {
                enumerable: !0,
                get: function() {
                    return ec.defineTransaction
                }
            }), Object.defineProperty(t, "formatTransaction", {
                enumerable: !0,
                get: function() {
                    return ec.formatTransaction
                }
            }), Object.defineProperty(t, "transactionType", {
                enumerable: !0,
                get: function() {
                    return ec.transactionType
                }
            });
            var eu = r(75765);
            Object.defineProperty(t, "formatLog", {
                enumerable: !0,
                get: function() {
                    return eu.formatLog
                }
            });
            var el = r(89189);
            Object.defineProperty(t, "defineTransactionReceipt", {
                enumerable: !0,
                get: function() {
                    return el.defineTransactionReceipt
                }
            });
            var ed = r(63465);
            Object.defineProperty(t, "defineTransactionRequest", {
                enumerable: !0,
                get: function() {
                    return ed.defineTransactionRequest
                }
            }), Object.defineProperty(t, "formatTransactionRequest", {
                enumerable: !0,
                get: function() {
                    return ed.formatTransactionRequest
                }
            });
            var ef = r(25798);
            Object.defineProperty(t, "extract", {
                enumerable: !0,
                get: function() {
                    return ef.extract
                }
            });
            var ep = r(57116);
            Object.defineProperty(t, "toRlp", {
                enumerable: !0,
                get: function() {
                    return ep.toRlp
                }
            });
            var eh = r(58640);
            Object.defineProperty(t, "boolToBytes", {
                enumerable: !0,
                get: function() {
                    return eh.boolToBytes
                }
            }), Object.defineProperty(t, "toBytes", {
                enumerable: !0,
                get: function() {
                    return eh.toBytes
                }
            }), Object.defineProperty(t, "hexToBytes", {
                enumerable: !0,
                get: function() {
                    return eh.hexToBytes
                }
            }), Object.defineProperty(t, "numberToBytes", {
                enumerable: !0,
                get: function() {
                    return eh.numberToBytes
                }
            }), Object.defineProperty(t, "stringToBytes", {
                enumerable: !0,
                get: function() {
                    return eh.stringToBytes
                }
            });
            var em = r(32054);
            Object.defineProperty(t, "boolToHex", {
                enumerable: !0,
                get: function() {
                    return em.boolToHex
                }
            }), Object.defineProperty(t, "bytesToHex", {
                enumerable: !0,
                get: function() {
                    return em.bytesToHex
                }
            }), Object.defineProperty(t, "toHex", {
                enumerable: !0,
                get: function() {
                    return em.toHex
                }
            }), Object.defineProperty(t, "numberToHex", {
                enumerable: !0,
                get: function() {
                    return em.numberToHex
                }
            }), Object.defineProperty(t, "stringToHex", {
                enumerable: !0,
                get: function() {
                    return em.stringToHex
                }
            });
            var ey = r(9694);
            Object.defineProperty(t, "bytesToBigInt", {
                enumerable: !0,
                get: function() {
                    return ey.bytesToBigInt
                }
            }), Object.defineProperty(t, "bytesToBigint", {
                enumerable: !0,
                get: function() {
                    return ey.bytesToBigInt
                }
            }), Object.defineProperty(t, "bytesToBool", {
                enumerable: !0,
                get: function() {
                    return ey.bytesToBool
                }
            }), Object.defineProperty(t, "bytesToNumber", {
                enumerable: !0,
                get: function() {
                    return ey.bytesToNumber
                }
            }), Object.defineProperty(t, "bytesToString", {
                enumerable: !0,
                get: function() {
                    return ey.bytesToString
                }
            }), Object.defineProperty(t, "fromBytes", {
                enumerable: !0,
                get: function() {
                    return ey.fromBytes
                }
            });
            var eb = r(4744);
            Object.defineProperty(t, "fromHex", {
                enumerable: !0,
                get: function() {
                    return eb.fromHex
                }
            }), Object.defineProperty(t, "hexToBool", {
                enumerable: !0,
                get: function() {
                    return eb.hexToBool
                }
            }), Object.defineProperty(t, "hexToBigInt", {
                enumerable: !0,
                get: function() {
                    return eb.hexToBigInt
                }
            }), Object.defineProperty(t, "hexToNumber", {
                enumerable: !0,
                get: function() {
                    return eb.hexToNumber
                }
            }), Object.defineProperty(t, "hexToString", {
                enumerable: !0,
                get: function() {
                    return eb.hexToString
                }
            });
            var eg = r(56591);
            Object.defineProperty(t, "fromRlp", {
                enumerable: !0,
                get: function() {
                    return eg.fromRlp
                }
            });
            var ev = r(62037);
            Object.defineProperty(t, "containsNodeError", {
                enumerable: !0,
                get: function() {
                    return ev.containsNodeError
                }
            }), Object.defineProperty(t, "getNodeError", {
                enumerable: !0,
                get: function() {
                    return ev.getNodeError
                }
            });
            var eE = r(75620);
            Object.defineProperty(t, "getCallError", {
                enumerable: !0,
                get: function() {
                    return eE.getCallError
                }
            });
            var ew = r(25229);
            Object.defineProperty(t, "getContractError", {
                enumerable: !0,
                get: function() {
                    return ew.getContractError
                }
            });
            var e_ = r(12364);
            Object.defineProperty(t, "getEstimateGasError", {
                enumerable: !0,
                get: function() {
                    return e_.getEstimateGasError
                }
            });
            var eP = r(50119);
            Object.defineProperty(t, "getTransactionError", {
                enumerable: !0,
                get: function() {
                    return eP.getTransactionError
                }
            });
            var eO = r(57134);
            Object.defineProperty(t, "defineFormatter", {
                enumerable: !0,
                get: function() {
                    return eO.defineFormatter
                }
            });
            var eT = r(43225);
            Object.defineProperty(t, "getEventSelector", {
                enumerable: !0,
                get: function() {
                    return eT.getEventSelector
                }
            });
            var ex = r(17883);
            Object.defineProperty(t, "getFunctionSelector", {
                enumerable: !0,
                get: function() {
                    return ex.getFunctionSelector
                }
            });
            var eS = r(37760);
            Object.defineProperty(t, "isHash", {
                enumerable: !0,
                get: function() {
                    return eS.isHash
                }
            });
            var eI = r(34650);
            Object.defineProperty(t, "keccak256", {
                enumerable: !0,
                get: function() {
                    return eI.keccak256
                }
            });
            var eA = r(11699);
            Object.defineProperty(t, "hashTypedData", {
                enumerable: !0,
                get: function() {
                    return eA.hashTypedData
                }
            });
            var eC = r(73809);
            Object.defineProperty(t, "recoverAddress", {
                enumerable: !0,
                get: function() {
                    return eC.recoverAddress
                }
            });
            var eD = r(26596);
            Object.defineProperty(t, "recoverMessageAddress", {
                enumerable: !0,
                get: function() {
                    return eD.recoverMessageAddress
                }
            });
            var ej = r(18021);
            Object.defineProperty(t, "recoverPublicKey", {
                enumerable: !0,
                get: function() {
                    return ej.recoverPublicKey
                }
            });
            var ek = r(42577);
            Object.defineProperty(t, "recoverTypedDataAddress", {
                enumerable: !0,
                get: function() {
                    return ek.recoverTypedDataAddress
                }
            });
            var eR = r(15781);
            Object.defineProperty(t, "verifyMessage", {
                enumerable: !0,
                get: function() {
                    return eR.verifyMessage
                }
            });
            var eM = r(91022);
            Object.defineProperty(t, "verifyTypedData", {
                enumerable: !0,
                get: function() {
                    return eM.verifyTypedData
                }
            });
            var eB = r(36708);
            Object.defineProperty(t, "hashMessage", {
                enumerable: !0,
                get: function() {
                    return eB.hashMessage
                }
            });
            var eF = r(17814);
            Object.defineProperty(t, "getSerializedTransactionType", {
                enumerable: !0,
                get: function() {
                    return eF.getSerializedTransactionType
                }
            });
            var eN = r(38799);
            Object.defineProperty(t, "getTransactionType", {
                enumerable: !0,
                get: function() {
                    return eN.getTransactionType
                }
            });
            var eL = r(89399);
            Object.defineProperty(t, "assertRequest", {
                enumerable: !0,
                get: function() {
                    return eL.assertRequest
                }
            });
            var eU = r(10261);
            Object.defineProperty(t, "assertTransactionEIP1559", {
                enumerable: !0,
                get: function() {
                    return eU.assertTransactionEIP1559
                }
            }), Object.defineProperty(t, "assertTransactionEIP2930", {
                enumerable: !0,
                get: function() {
                    return eU.assertTransactionEIP2930
                }
            }), Object.defineProperty(t, "assertTransactionLegacy", {
                enumerable: !0,
                get: function() {
                    return eU.assertTransactionLegacy
                }
            });
            var eq = r(41328);
            Object.defineProperty(t, "parseTransaction", {
                enumerable: !0,
                get: function() {
                    return eq.parseTransaction
                }
            });
            var eH = r(48945);
            Object.defineProperty(t, "prepareTransactionRequest", {
                enumerable: !0,
                get: function() {
                    return eH.prepareTransactionRequest
                }
            });
            var e$ = r(44530);
            Object.defineProperty(t, "serializeTransaction", {
                enumerable: !0,
                get: function() {
                    return e$.serializeTransaction
                }
            });
            var ez = r(49560);
            Object.defineProperty(t, "serializeAccessList", {
                enumerable: !0,
                get: function() {
                    return ez.serializeAccessList
                }
            });
            var eG = r(53711);
            Object.defineProperty(t, "formatEther", {
                enumerable: !0,
                get: function() {
                    return eG.formatEther
                }
            });
            var eW = r(14958);
            Object.defineProperty(t, "formatGwei", {
                enumerable: !0,
                get: function() {
                    return eW.formatGwei
                }
            });
            var eV = r(62593);
            Object.defineProperty(t, "formatUnits", {
                enumerable: !0,
                get: function() {
                    return eV.formatUnits
                }
            });
            var eQ = r(30464);
            Object.defineProperty(t, "parseUnits", {
                enumerable: !0,
                get: function() {
                    return eQ.parseUnits
                }
            });
            var eK = r(74771);
            Object.defineProperty(t, "parseEther", {
                enumerable: !0,
                get: function() {
                    return eK.parseEther
                }
            });
            var eY = r(349);
            Object.defineProperty(t, "parseGwei", {
                enumerable: !0,
                get: function() {
                    return eY.parseGwei
                }
            })
        },
        13500: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.observe = t.cleanupCache = t.listenersCache = void 0, t.listenersCache = new Map, t.cleanupCache = new Map;
            let r = 0;
            t.observe = function(e, n, i) {
                let o = ++r,
                    getListeners = () => t.listenersCache.get(e) || [],
                    unsubscribe = () => {
                        let r = getListeners();
                        t.listenersCache.set(e, r.filter(e => e.id !== o))
                    },
                    unwatch = () => {
                        let r = t.cleanupCache.get(e);
                        1 === getListeners().length && r && r(), unsubscribe()
                    },
                    a = getListeners();
                if (t.listenersCache.set(e, [...a, {
                        id: o,
                        fns: n
                    }]), a && a.length > 0) return unwatch;
                let s = {};
                for (let e in n) s[e] = (...t) => {
                    let r = getListeners();
                    if (0 !== r.length)
                        for (let n of r) n.fns[e] ? .(...t)
                };
                let c = i(s);
                return "function" == typeof c && t.cleanupCache.set(e, c), unwatch
            }
        },
        55986: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.poll = void 0;
            let n = r(99501);
            t.poll = function(e, {
                emitOnBegin: t,
                initialWaitTime: r,
                interval: i
            }) {
                let o = !0,
                    unwatch = () => o = !1,
                    watch = async () => {
                        let a;
                        t && (a = await e({
                            unpoll: unwatch
                        }));
                        let s = await r ? .(a) ? ? i;
                        await (0, n.wait)(s);
                        let poll = async () => {
                            o && (await e({
                                unpoll: unwatch
                            }), await (0, n.wait)(i), poll())
                        };
                        poll()
                    };
                return watch(), unwatch
            }
        },
        1678: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.createBatchScheduler = void 0;
            let r = new Map;
            t.createBatchScheduler = function({
                fn: e,
                id: t,
                shouldSplitBatch: n,
                wait: i = 0,
                sort: o
            }) {
                let exec = async () => {
                        let t = getScheduler();
                        flush();
                        let r = t.map(({
                            args: e
                        }) => e);
                        0 !== r.length && e(r).then(e => {
                            o && Array.isArray(e) && e.sort(o);
                            for (let r = 0; r < t.length; r++) {
                                let {
                                    pendingPromise: n
                                } = t[r];
                                n.resolve ? .([e[r], e])
                            }
                        }).catch(e => {
                            for (let r = 0; r < t.length; r++) {
                                let {
                                    pendingPromise: n
                                } = t[r];
                                n.reject ? .(e)
                            }
                        })
                    },
                    flush = () => r.delete(t),
                    getBatchedArgs = () => getScheduler().map(({
                        args: e
                    }) => e),
                    getScheduler = () => r.get(t) || [],
                    setScheduler = e => r.set(t, [...getScheduler(), e]);
                return {
                    flush,
                    async schedule(e) {
                        let t = {},
                            r = new Promise((e, r) => {
                                t.resolve = e, t.reject = r
                            }),
                            o = n ? .([...getBatchedArgs(), e]);
                        o && exec();
                        let a = getScheduler().length > 0;
                        return a ? setScheduler({
                            args: e,
                            pendingPromise: t
                        }) : (setScheduler({
                            args: e,
                            pendingPromise: t
                        }), setTimeout(exec, i)), r
                    }
                }
            }
        },
        88445: function(e, t) {
            "use strict";

            function getCache(e) {
                let buildCache = (e, t) => ({
                        clear: () => t.delete(e),
                        get: () => t.get(e),
                        set: r => t.set(e, r)
                    }),
                    r = buildCache(e, t.promiseCache),
                    n = buildCache(e, t.responseCache);
                return {
                    clear: () => {
                        r.clear(), n.clear()
                    },
                    promise: r,
                    response: n
                }
            }
            async function withCache(e, {
                cacheKey: t,
                cacheTime: r = 1 / 0
            }) {
                let n = getCache(t),
                    i = n.response.get();
                if (i && r > 0) {
                    let e = new Date().getTime() - i.created.getTime();
                    if (e < r) return i.data
                }
                let o = n.promise.get();
                o || (o = e(), n.promise.set(o));
                try {
                    let e = await o;
                    return n.response.set({
                        created: new Date,
                        data: e
                    }), e
                } finally {
                    n.promise.clear()
                }
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.withCache = t.getCache = t.responseCache = t.promiseCache = void 0, t.promiseCache = new Map, t.responseCache = new Map, t.getCache = getCache, t.withCache = withCache
        },
        57984: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.withRetry = void 0;
            let n = r(99501);
            t.withRetry = function(e, {
                delay: t = 100,
                retryCount: r = 2,
                shouldRetry: i = () => !0
            } = {}) {
                return new Promise((o, a) => {
                    let attemptRetry = async ({
                        count: s = 0
                    } = {}) => {
                        let retry = async ({
                            error: e
                        }) => {
                            let r = "function" == typeof t ? t({
                                count: s,
                                error: e
                            }) : t;
                            r && await (0, n.wait)(r), attemptRetry({
                                count: s + 1
                            })
                        };
                        try {
                            let t = await e();
                            o(t)
                        } catch (e) {
                            if (s < r && await i({
                                    count: s,
                                    error: e
                                })) return retry({
                                error: e
                            });
                            a(e)
                        }
                    };
                    attemptRetry()
                })
            }
        },
        28432: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.withTimeout = void 0, t.withTimeout = function(e, {
                errorInstance: t = Error("timed out"),
                timeout: r,
                signal: n
            }) {
                return new Promise((i, o) => {
                    (async () => {
                        let a;
                        try {
                            let s = new AbortController;
                            r > 0 && (a = setTimeout(() => {
                                n ? s.abort() : o(t)
                            }, r)), i(await e({
                                signal: s ? .signal
                            }))
                        } catch (e) {
                            "AbortError" === e.name && o(t), o(e)
                        } finally {
                            clearTimeout(a)
                        }
                    })()
                })
            }
        },
        89194: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.integerRegex = t.bytesRegex = t.arrayRegex = void 0, t.arrayRegex = /^(.*)\[([0-9]*)\]$/, t.bytesRegex = /^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/, t.integerRegex = /^(u?int)(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/
        },
        27658: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.rpc = t.getSocket = t.socketsCache = void 0;
            let n = r(9616),
                i = r(58323),
                o = r(1678),
                a = r(28432),
                s = r(42701),
                c = 0;
            async function http(e, {
                body: t,
                fetchOptions: r = {},
                timeout: n = 1e4
            }) {
                let {
                    headers: o,
                    method: u,
                    signal: l
                } = r;
                try {
                    let d;
                    let f = await (0, a.withTimeout)(async ({
                        signal: i
                    }) => {
                        let a = await fetch(e, { ...r,
                            body: Array.isArray(t) ? (0, s.stringify)(t.map(e => ({
                                jsonrpc: "2.0",
                                id: e.id ? ? c++,
                                ...e
                            }))) : (0, s.stringify)({
                                jsonrpc: "2.0",
                                id: t.id ? ? c++,
                                ...t
                            }),
                            headers: { ...o,
                                "Content-Type": "application/json"
                            },
                            method: u || "POST",
                            signal: l || (n > 0 ? i : void 0)
                        });
                        return a
                    }, {
                        errorInstance: new i.TimeoutError({
                            body: t,
                            url: e
                        }),
                        timeout: n,
                        signal: !0
                    });
                    if (d = f.headers.get("Content-Type") ? .startsWith("application/json") ? await f.json() : await f.text(), !f.ok) throw new i.HttpRequestError({
                        body: t,
                        details: (0, s.stringify)(d.error) || f.statusText,
                        headers: f.headers,
                        status: f.status,
                        url: e
                    });
                    return d
                } catch (r) {
                    if (r instanceof i.HttpRequestError || r instanceof i.TimeoutError) throw r;
                    throw new i.HttpRequestError({
                        body: t,
                        details: r.message,
                        url: e
                    })
                }
            }
            async function getSocket(e) {
                let r = t.socketsCache.get(e);
                if (r) return r;
                let {
                    schedule: i
                } = (0, o.createBatchScheduler)({
                    id: e,
                    fn: async () => {
                        let i = new n.WebSocket(e),
                            o = new Map,
                            a = new Map,
                            onMessage = ({
                                data: e
                            }) => {
                                let t = JSON.parse(e),
                                    r = "eth_subscription" === t.method,
                                    n = r ? t.params.subscription : t.id,
                                    i = r ? a : o,
                                    s = i.get(n);
                                s && s({
                                    data: e
                                }), r || i.delete(n)
                            },
                            onClose = () => {
                                t.socketsCache.delete(e), i.removeEventListener("close", onClose), i.removeEventListener("message", onMessage)
                            };
                        return i.addEventListener("close", onClose), i.addEventListener("message", onMessage), i.readyState === n.WebSocket.CONNECTING && await new Promise((e, t) => {
                            i && (i.onopen = e, i.onerror = t)
                        }), r = Object.assign(i, {
                            requests: o,
                            subscriptions: a
                        }), t.socketsCache.set(e, r), [r]
                    }
                }), [a, [s]] = await i();
                return s
            }
            async function webSocketAsync(e, {
                body: r,
                timeout: n = 1e4
            }) {
                return (0, a.withTimeout)(() => new Promise(n => t.rpc.webSocket(e, {
                    body: r,
                    onResponse: n
                })), {
                    errorInstance: new i.TimeoutError({
                        body: r,
                        url: e.url
                    }),
                    timeout: n
                })
            }
            t.socketsCache = new Map, t.getSocket = getSocket, t.rpc = {
                http,
                webSocket: function(e, {
                    body: t,
                    onResponse: r
                }) {
                    if (e.readyState === e.CLOSED || e.readyState === e.CLOSING) throw new i.WebSocketRequestError({
                        body: t,
                        url: e.url,
                        details: "Socket is closed."
                    });
                    let n = c++,
                        callback = ({
                            data: i
                        }) => {
                            let o = JSON.parse(i);
                            ("number" != typeof o.id || n === o.id) && (r ? .(o), "eth_subscribe" === t.method && "string" == typeof o.result && e.subscriptions.set(o.result, callback), "eth_unsubscribe" === t.method && e.subscriptions.delete(t.params ? .[0]))
                        };
                    return e.requests.set(n, callback), e.send(JSON.stringify({
                        jsonrpc: "2.0",
                        ...t,
                        id: n
                    })), e
                },
                webSocketAsync
            }
        },
        24741: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.compactSignatureToHex = void 0;
            let n = r(59304),
                i = r(4744);
            t.compactSignatureToHex = function({
                r: e,
                yParityAndS: t
            }) {
                return `0x${new n.secp256k1.Signature((0,i.hexToBigInt)(e),(0,i.hexToBigInt)(t)).toCompactHex()}`
            }
        },
        40792: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.compactSignatureToSignature = void 0;
            let n = r(58640),
                i = r(32054);
            t.compactSignatureToSignature = function({
                r: e,
                yParityAndS: t
            }) {
                let r = (0, n.hexToBytes)(t),
                    o = 128 & r[0] ? 28 n : 27 n;
                return 28 n === o && (r[0] &= 127), {
                    r: e,
                    s: (0, i.bytesToHex)(r),
                    v: o
                }
            }
        },
        36708: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.hashMessage = void 0;
            let n = r(39173),
                i = r(62127),
                o = r(58640),
                a = r(34650);
            t.hashMessage = function(e, t) {
                let r = "string" == typeof e ? (0, o.stringToBytes)(e) : e.raw instanceof Uint8Array ? e.raw : (0, o.toBytes)(e.raw),
                    s = (0, o.stringToBytes)(`${n.presignMessagePrefix}${r.length}`);
                return (0, a.keccak256)((0, i.concat)([s, r]), t)
            }
        },
        11699: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.hashDomain = t.hashTypedData = void 0;
            let n = r(43044),
                i = r(62127),
                o = r(32054),
                a = r(34650),
                s = r(87059);

            function hashDomain({
                domain: e,
                types: t
            }) {
                return hashStruct({
                    data: e,
                    primaryType: "EIP712Domain",
                    types: t
                })
            }

            function hashStruct({
                data: e,
                primaryType: t,
                types: r
            }) {
                let i = function encodeData({
                    data: e,
                    primaryType: t,
                    types: r
                }) {
                    let i = [{
                            type: "bytes32"
                        }],
                        s = [function({
                            primaryType: e,
                            types: t
                        }) {
                            let r = (0, o.toHex)(function({
                                primaryType: e,
                                types: t
                            }) {
                                let r = "",
                                    n = function findTypeDependencies({
                                        primaryType: e,
                                        types: t
                                    }, r = new Set) {
                                        let n = e.match(/^\w*/u),
                                            i = n ? .[0];
                                        if (r.has(i) || void 0 === t[i]) return r;
                                        for (let e of (r.add(i), t[i])) findTypeDependencies({
                                            primaryType: e.type,
                                            types: t
                                        }, r);
                                        return r
                                    }({
                                        primaryType: e,
                                        types: t
                                    });
                                n.delete(e);
                                let i = [e, ...Array.from(n).sort()];
                                for (let e of i) r += `${e}(${t[e].map(({name:e,type:t})=>`
                                $ {
                                    t
                                }
                                $ {
                                    e
                                }
                                `).join(",")})`;
                                return r
                            }({
                                primaryType: e,
                                types: t
                            }));
                            return (0, a.keccak256)(r)
                        }({
                            primaryType: t,
                            types: r
                        })];
                    for (let c of r[t]) {
                        let [t, u] = function encodeField({
                            types: e,
                            name: t,
                            type: r,
                            value: i
                        }) {
                            if (void 0 !== e[r]) return [{
                                type: "bytes32"
                            }, (0, a.keccak256)(encodeData({
                                data: i,
                                primaryType: r,
                                types: e
                            }))];
                            if ("bytes" === r) {
                                let e = i.length % 2 ? "0" : "";
                                return i = `0x${e+i.slice(2)}`, [{
                                    type: "bytes32"
                                }, (0, a.keccak256)(i)]
                            }
                            if ("string" === r) return [{
                                type: "bytes32"
                            }, (0, a.keccak256)((0, o.toHex)(i))];
                            if (r.lastIndexOf("]") === r.length - 1) {
                                let o = r.slice(0, r.lastIndexOf("[")),
                                    s = i.map(r => encodeField({
                                        name: t,
                                        type: o,
                                        types: e,
                                        value: r
                                    }));
                                return [{
                                    type: "bytes32"
                                }, (0, a.keccak256)((0, n.encodeAbiParameters)(s.map(([e]) => e), s.map(([, e]) => e)))]
                            }
                            return [{
                                type: r
                            }, i]
                        }({
                            types: r,
                            name: c.name,
                            type: c.type,
                            value: e[c.name]
                        });
                        i.push(t), s.push(u)
                    }
                    return (0, n.encodeAbiParameters)(i, s)
                }({
                    data: e,
                    primaryType: t,
                    types: r
                });
                return (0, a.keccak256)(i)
            }
            t.hashTypedData = function({
                domain: e,
                message: t,
                primaryType: r,
                types: n
            }) {
                let o = void 0 === e ? {} : e,
                    c = {
                        EIP712Domain: (0, s.getTypesForEIP712Domain)({
                            domain: o
                        }),
                        ...n
                    };
                (0, s.validateTypedData)({
                    domain: o,
                    message: t,
                    primaryType: r,
                    types: c
                });
                let u = ["0x1901"];
                return o && u.push(hashDomain({
                    domain: o,
                    types: c
                })), "EIP712Domain" !== r && u.push(hashStruct({
                    data: t,
                    primaryType: r,
                    types: c
                })), (0, a.keccak256)((0, i.concat)(u))
            }, t.hashDomain = hashDomain
        },
        7482: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.hexToCompactSignature = void 0;
            let n = r(59304),
                i = r(32054);
            t.hexToCompactSignature = function(e) {
                let {
                    r: t,
                    s: r
                } = n.secp256k1.Signature.fromCompact(e.slice(2, 130));
                return {
                    r: (0, i.numberToHex)(t, {
                        size: 32
                    }),
                    yParityAndS: (0, i.numberToHex)(r, {
                        size: 32
                    })
                }
            }
        },
        56233: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.hexToSignature = void 0;
            let n = r(59304),
                i = r(32054);
            t.hexToSignature = function(e) {
                let {
                    r: t,
                    s: r
                } = n.secp256k1.Signature.fromCompact(e.slice(2, 130)), o = BigInt(`0x${e.slice(130)}`);
                return {
                    r: (0, i.numberToHex)(t, {
                        size: 32
                    }),
                    s: (0, i.numberToHex)(r, {
                        size: 32
                    }),
                    v: o
                }
            }
        },
        73809: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.recoverAddress = void 0;
            let n = r(97397),
                i = r(18021);
            async function recoverAddress({
                hash: e,
                signature: t
            }) {
                return (0, n.publicKeyToAddress)(await (0, i.recoverPublicKey)({
                    hash: e,
                    signature: t
                }))
            }
            t.recoverAddress = recoverAddress
        },
        26596: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.recoverMessageAddress = void 0;
            let n = r(36708),
                i = r(73809);
            async function recoverMessageAddress({
                message: e,
                signature: t
            }) {
                return (0, i.recoverAddress)({
                    hash: (0, n.hashMessage)(e),
                    signature: t
                })
            }
            t.recoverMessageAddress = recoverMessageAddress
        },
        18021: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.recoverPublicKey = void 0;
            let n = r(90383),
                i = r(4744),
                o = r(32054);
            async function recoverPublicKey({
                hash: e,
                signature: t
            }) {
                let a = (0, n.isHex)(t) ? t : (0, o.toHex)(t),
                    s = (0, n.isHex)(e) ? e : (0, o.toHex)(e),
                    c = (0, i.hexToNumber)(`0x${a.slice(130)}`);
                (0 === c || 1 === c) && (c += 27);
                let {
                    secp256k1: u
                } = await Promise.resolve().then(() => r(59304)), l = u.Signature.fromCompact(a.substring(2, 130)).addRecoveryBit(c - 27).recoverPublicKey(s.substring(2)).toHex(!1);
                return `0x${l}`
            }
            t.recoverPublicKey = recoverPublicKey
        },
        42577: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.recoverTypedDataAddress = void 0;
            let n = r(11699),
                i = r(73809);
            async function recoverTypedDataAddress({
                domain: e,
                message: t,
                primaryType: r,
                signature: o,
                types: a
            }) {
                return (0, i.recoverAddress)({
                    hash: (0, n.hashTypedData)({
                        domain: e,
                        message: t,
                        primaryType: r,
                        types: a
                    }),
                    signature: o
                })
            }
            t.recoverTypedDataAddress = recoverTypedDataAddress
        },
        95549: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.signatureToCompactSignature = void 0;
            let n = r(54388);
            t.signatureToCompactSignature = function(e) {
                let {
                    r: t,
                    s: r,
                    v: i
                } = e, o = r;
                if (1 n === i - 27 n) {
                    let e = (0, n.hexToBytes)(r);
                    e[0] |= 128, o = (0, n.bytesToHex)(e)
                }
                return {
                    r: t,
                    yParityAndS: o
                }
            }
        },
        80742: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.signatureToHex = void 0;
            let n = r(59304),
                i = r(4744),
                o = r(32054);
            t.signatureToHex = function({
                r: e,
                s: t,
                v: r
            }) {
                return `0x${new n.secp256k1.Signature((0,i.hexToBigInt)(e),(0,i.hexToBigInt)(t)).toCompactHex()}${(0,o.toHex)(r).slice(2)}`
            }
        },
        15781: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.verifyMessage = void 0;
            let n = r(46972),
                i = r(25680),
                o = r(26596);
            async function verifyMessage({
                address: e,
                message: t,
                signature: r
            }) {
                return (0, i.isAddressEqual)((0, n.getAddress)(e), await (0, o.recoverMessageAddress)({
                    message: t,
                    signature: r
                }))
            }
            t.verifyMessage = verifyMessage
        },
        91022: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.verifyTypedData = void 0;
            let n = r(46972),
                i = r(25680),
                o = r(42577);
            async function verifyTypedData({
                address: e,
                domain: t,
                message: r,
                primaryType: a,
                signature: s,
                types: c
            }) {
                return (0, i.isAddressEqual)((0, n.getAddress)(e), await (0, o.recoverTypedDataAddress)({
                    domain: t,
                    message: r,
                    primaryType: a,
                    signature: s,
                    types: c
                }))
            }
            t.verifyTypedData = verifyTypedData
        },
        42701: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.stringify = void 0, t.stringify = (e, t, r) => JSON.stringify(e, (e, r) => {
                let n = "bigint" == typeof r ? r.toString() : r;
                return "function" == typeof t ? t(e, n) : n
            }, r)
        },
        89399: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.assertRequest = void 0;
            let n = r(9783),
                i = r(90874),
                o = r(72911),
                a = r(65750),
                s = r(74815);
            t.assertRequest = function(e) {
                let {
                    account: t,
                    gasPrice: r,
                    maxFeePerGas: c,
                    maxPriorityFeePerGas: u,
                    to: l
                } = e, d = t ? (0, n.parseAccount)(t) : void 0;
                if (d && !(0, s.isAddress)(d.address)) throw new i.InvalidAddressError({
                    address: d.address
                });
                if (l && !(0, s.isAddress)(l)) throw new i.InvalidAddressError({
                    address: l
                });
                if (void 0 !== r && (void 0 !== c || void 0 !== u)) throw new a.FeeConflictError;
                if (c && c > 2 n ** 256 n - 1 n) throw new o.FeeCapTooHighError({
                    maxFeePerGas: c
                });
                if (u && c && u > c) throw new o.TipAboveFeeCapError({
                    maxFeePerGas: c,
                    maxPriorityFeePerGas: u
                })
            }
        },
        10261: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.assertTransactionLegacy = t.assertTransactionEIP2930 = t.assertTransactionEIP1559 = void 0;
            let n = r(90874),
                i = r(9537),
                o = r(95047),
                a = r(72911),
                s = r(74815);
            t.assertTransactionEIP1559 = function(e) {
                let {
                    chainId: t,
                    maxPriorityFeePerGas: r,
                    gasPrice: c,
                    maxFeePerGas: u,
                    to: l
                } = e;
                if (t <= 0) throw new o.InvalidChainIdError({
                    chainId: t
                });
                if (l && !(0, s.isAddress)(l)) throw new n.InvalidAddressError({
                    address: l
                });
                if (c) throw new i.BaseError("`gasPrice` is not a valid EIP-1559 Transaction attribute.");
                if (u && u > 2 n ** 256 n - 1 n) throw new a.FeeCapTooHighError({
                    maxFeePerGas: u
                });
                if (r && u && r > u) throw new a.TipAboveFeeCapError({
                    maxFeePerGas: u,
                    maxPriorityFeePerGas: r
                })
            }, t.assertTransactionEIP2930 = function(e) {
                let {
                    chainId: t,
                    maxPriorityFeePerGas: r,
                    gasPrice: c,
                    maxFeePerGas: u,
                    to: l
                } = e;
                if (t <= 0) throw new o.InvalidChainIdError({
                    chainId: t
                });
                if (l && !(0, s.isAddress)(l)) throw new n.InvalidAddressError({
                    address: l
                });
                if (r || u) throw new i.BaseError("`maxFeePerGas`/`maxPriorityFeePerGas` is not a valid EIP-2930 Transaction attribute.");
                if (c && c > 2 n ** 256 n - 1 n) throw new a.FeeCapTooHighError({
                    maxFeePerGas: c
                })
            }, t.assertTransactionLegacy = function(e) {
                let {
                    chainId: t,
                    maxPriorityFeePerGas: r,
                    gasPrice: c,
                    maxFeePerGas: u,
                    to: l,
                    accessList: d
                } = e;
                if (l && !(0, s.isAddress)(l)) throw new n.InvalidAddressError({
                    address: l
                });
                if (void 0 !== t && t <= 0) throw new o.InvalidChainIdError({
                    chainId: t
                });
                if (r || u) throw new i.BaseError("`maxFeePerGas`/`maxPriorityFeePerGas` is not a valid Legacy Transaction attribute.");
                if (c && c > 2 n ** 256 n - 1 n) throw new a.FeeCapTooHighError({
                    maxFeePerGas: c
                });
                if (d) throw new i.BaseError("`accessList` is not a valid Legacy Transaction attribute.")
            }
        },
        17814: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getSerializedTransactionType = void 0;
            let n = r(65750),
                i = r(97307),
                o = r(4744);
            t.getSerializedTransactionType = function(e) {
                let t = (0, i.sliceHex)(e, 0, 1);
                if ("0x02" === t) return "eip1559";
                if ("0x01" === t) return "eip2930";
                if ("0x" !== t && (0, o.hexToNumber)(t) >= 192) return "legacy";
                throw new n.InvalidSerializedTransactionTypeError({
                    serializedType: t
                })
            }
        },
        38799: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getTransactionType = void 0;
            let n = r(65750);
            t.getTransactionType = function(e) {
                if (e.type) return e.type;
                if (void 0 !== e.maxFeePerGas || void 0 !== e.maxPriorityFeePerGas) return "eip1559";
                if (void 0 !== e.gasPrice) return void 0 !== e.accessList ? "eip2930" : "legacy";
                throw new n.InvalidSerializableTransactionError({
                    transaction: e
                })
            }
        },
        41328: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.parseAccessList = t.toTransactionArray = t.parseTransaction = void 0;
            let n = r(90874),
                i = r(65750),
                o = r(74815),
                a = r(90383),
                s = r(95946),
                c = r(50775),
                u = r(4744),
                l = r(56591),
                d = r(37760),
                f = r(10261),
                p = r(17814);

            function toTransactionArray(e) {
                return (0, l.fromRlp)(`0x${e.slice(4)}`, "hex")
            }

            function parseAccessList(e) {
                let t = [];
                for (let r = 0; r < e.length; r++) {
                    let [i, a] = e[r];
                    if (!(0, o.isAddress)(i)) throw new n.InvalidAddressError({
                        address: i
                    });
                    t.push({
                        address: i,
                        storageKeys: a.map(e => (0, d.isHash)(e) ? e : (0, c.trim)(e))
                    })
                }
                return t
            }

            function parseEIP155Signature(e) {
                let t = e.slice(-3),
                    r = "0x" === t[0] || 0 n === (0, u.hexToBigInt)(t[0]) ? 27 n : 28 n;
                return {
                    r: (0, s.padHex)(t[1], {
                        size: 32
                    }),
                    s: (0, s.padHex)(t[2], {
                        size: 32
                    }),
                    v: r,
                    yParity: 27 n === r ? 0 : 1
                }
            }
            t.parseTransaction = function(e) {
                let t = (0, p.getSerializedTransactionType)(e);
                return "eip1559" === t ? function(e) {
                    let t = toTransactionArray(e),
                        [r, n, o, s, c, l, d, p, y, g, v, E] = t;
                    if (!(9 === t.length || 12 === t.length)) throw new i.InvalidSerializedTransactionError({
                        attributes: {
                            chainId: r,
                            nonce: n,
                            maxPriorityFeePerGas: o,
                            maxFeePerGas: s,
                            gas: c,
                            to: l,
                            value: d,
                            data: p,
                            accessList: y,
                            ...t.length > 9 ? {
                                v: g,
                                r: v,
                                s: E
                            } : {}
                        },
                        serializedTransaction: e,
                        type: "eip1559"
                    });
                    let _ = {
                        chainId: (0, u.hexToNumber)(r),
                        type: "eip1559"
                    };
                    (0, a.isHex)(l) && "0x" !== l && (_.to = l), (0, a.isHex)(c) && "0x" !== c && (_.gas = (0, u.hexToBigInt)(c)), (0, a.isHex)(p) && "0x" !== p && (_.data = p), (0, a.isHex)(n) && "0x" !== n && (_.nonce = (0, u.hexToNumber)(n)), (0, a.isHex)(d) && "0x" !== d && (_.value = (0, u.hexToBigInt)(d)), (0, a.isHex)(s) && "0x" !== s && (_.maxFeePerGas = (0, u.hexToBigInt)(s)), (0, a.isHex)(o) && "0x" !== o && (_.maxPriorityFeePerGas = (0, u.hexToBigInt)(o)), 0 !== y.length && "0x" !== y && (_.accessList = parseAccessList(y)), (0, f.assertTransactionEIP1559)(_);
                    let P = 12 === t.length ? parseEIP155Signature(t) : void 0;
                    return { ...P,
                        ..._
                    }
                }(e) : "eip2930" === t ? function(e) {
                    let t = toTransactionArray(e),
                        [r, n, o, s, c, l, d, p, y, g, v] = t;
                    if (!(8 === t.length || 11 === t.length)) throw new i.InvalidSerializedTransactionError({
                        attributes: {
                            chainId: r,
                            nonce: n,
                            gasPrice: o,
                            gas: s,
                            to: c,
                            value: l,
                            data: d,
                            accessList: p,
                            ...t.length > 8 ? {
                                v: y,
                                r: g,
                                s: v
                            } : {}
                        },
                        serializedTransaction: e,
                        type: "eip2930"
                    });
                    let E = {
                        chainId: (0, u.hexToNumber)(r),
                        type: "eip2930"
                    };
                    (0, a.isHex)(c) && "0x" !== c && (E.to = c), (0, a.isHex)(s) && "0x" !== s && (E.gas = (0, u.hexToBigInt)(s)), (0, a.isHex)(d) && "0x" !== d && (E.data = d), (0, a.isHex)(n) && "0x" !== n && (E.nonce = (0, u.hexToNumber)(n)), (0, a.isHex)(l) && "0x" !== l && (E.value = (0, u.hexToBigInt)(l)), (0, a.isHex)(o) && "0x" !== o && (E.gasPrice = (0, u.hexToBigInt)(o)), 0 !== p.length && "0x" !== p && (E.accessList = parseAccessList(p)), (0, f.assertTransactionEIP2930)(E);
                    let _ = 11 === t.length ? parseEIP155Signature(t) : void 0;
                    return { ..._,
                        ...E
                    }
                }(e) : function(e) {
                    let t = (0, l.fromRlp)(e, "hex"),
                        [r, n, o, s, c, d, p, y, g] = t;
                    if (!(6 === t.length || 9 === t.length)) throw new i.InvalidSerializedTransactionError({
                        attributes: {
                            nonce: r,
                            gasPrice: n,
                            gas: o,
                            to: s,
                            value: c,
                            data: d,
                            ...t.length > 6 ? {
                                v: p,
                                r: y,
                                s: g
                            } : {}
                        },
                        serializedTransaction: e,
                        type: "legacy"
                    });
                    let v = {
                        type: "legacy"
                    };
                    if ((0, a.isHex)(s) && "0x" !== s && (v.to = s), (0, a.isHex)(o) && "0x" !== o && (v.gas = (0, u.hexToBigInt)(o)), (0, a.isHex)(d) && "0x" !== d && (v.data = d), (0, a.isHex)(r) && "0x" !== r && (v.nonce = (0, u.hexToNumber)(r)), (0, a.isHex)(c) && "0x" !== c && (v.value = (0, u.hexToBigInt)(c)), (0, a.isHex)(n) && "0x" !== n && (v.gasPrice = (0, u.hexToBigInt)(n)), (0, f.assertTransactionLegacy)(v), 6 === t.length) return v;
                    let E = (0, a.isHex)(p) && "0x" !== p ? (0, u.hexToBigInt)(p) : 0 n;
                    if ("0x" === g && "0x" === y) return E > 0 && (v.chainId = Number(E)), v;
                    let _ = Number((E - 35 n) / 2 n);
                    if (_ > 0) v.chainId = _;
                    else if (27 n !== E && 28 n !== E) throw new i.InvalidLegacyVError({
                        v: E
                    });
                    return v.v = E, v.s = g, v.r = y, v
                }(e)
            }, t.toTransactionArray = toTransactionArray, t.parseAccessList = parseAccessList
        },
        49560: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.serializeAccessList = void 0;
            let n = r(90874),
                i = r(65750),
                o = r(74815);
            t.serializeAccessList = function(e) {
                if (!e || 0 === e.length) return [];
                let t = [];
                for (let r = 0; r < e.length; r++) {
                    let {
                        address: a,
                        storageKeys: s
                    } = e[r];
                    for (let e = 0; e < s.length; e++)
                        if (s[e].length - 2 != 64) throw new i.InvalidStorageKeySizeError({
                            storageKey: s[e]
                        });
                    if (!(0, o.isAddress)(a)) throw new n.InvalidAddressError({
                        address: a
                    });
                    t.push([a, s])
                }
                return t
            }
        },
        44530: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.serializeTransaction = void 0;
            let n = r(65750),
                i = r(62127),
                o = r(50775),
                a = r(32054),
                s = r(57116),
                c = r(10261),
                u = r(38799),
                l = r(49560);
            t.serializeTransaction = function(e, t) {
                let r = (0, u.getTransactionType)(e);
                return "eip1559" === r ? function(e, t) {
                    let {
                        chainId: r,
                        gas: n,
                        nonce: u,
                        to: d,
                        value: f,
                        maxFeePerGas: p,
                        maxPriorityFeePerGas: y,
                        accessList: g,
                        data: v
                    } = e;
                    (0, c.assertTransactionEIP1559)(e);
                    let E = (0, l.serializeAccessList)(g),
                        _ = [(0, a.toHex)(r), u ? (0, a.toHex)(u) : "0x", y ? (0, a.toHex)(y) : "0x", p ? (0, a.toHex)(p) : "0x", n ? (0, a.toHex)(n) : "0x", d ? ? "0x", f ? (0, a.toHex)(f) : "0x", v ? ? "0x", E];
                    if (t) {
                        let e = 0 n === t.v ? "0x" : 1 n === t.v ? (0, a.toHex)(1) : 27 n === t.v ? "0x" : (0, a.toHex)(1);
                        _.push(e, (0, o.trim)(t.r), (0, o.trim)(t.s))
                    }
                    return (0, i.concatHex)(["0x02", (0, s.toRlp)(_)])
                }(e, t) : "eip2930" === r ? function(e, t) {
                    let {
                        chainId: r,
                        gas: n,
                        data: u,
                        nonce: d,
                        to: f,
                        value: p,
                        accessList: y,
                        gasPrice: g
                    } = e;
                    (0, c.assertTransactionEIP2930)(e);
                    let v = (0, l.serializeAccessList)(y),
                        E = [(0, a.toHex)(r), d ? (0, a.toHex)(d) : "0x", g ? (0, a.toHex)(g) : "0x", n ? (0, a.toHex)(n) : "0x", f ? ? "0x", p ? (0, a.toHex)(p) : "0x", u ? ? "0x", v];
                    if (t) {
                        let e = 0 n === t.v ? "0x" : 1 n === t.v ? (0, a.toHex)(1) : 27 n === t.v ? "0x" : (0, a.toHex)(1);
                        E.push(e, (0, o.trim)(t.r), (0, o.trim)(t.s))
                    }
                    return (0, i.concatHex)(["0x01", (0, s.toRlp)(E)])
                }(e, t) : function(e, t) {
                    let {
                        chainId: r = 0,
                        gas: i,
                        data: o,
                        nonce: u,
                        to: l,
                        value: d,
                        gasPrice: f
                    } = e;
                    (0, c.assertTransactionLegacy)(e);
                    let p = [u ? (0, a.toHex)(u) : "0x", f ? (0, a.toHex)(f) : "0x", i ? (0, a.toHex)(i) : "0x", l ? ? "0x", d ? (0, a.toHex)(d) : "0x", o ? ? "0x"];
                    if (t) {
                        let e = (() => {
                            if (r > 0) return BigInt(2 * r) + BigInt(35 n + t.v - 27 n);
                            if (t.v >= 35 n) {
                                let e = (t.v - 35 n) / 2 n;
                                return e > 0 ? t.v : 27 n + (35 n === t.v ? 0 n : 1 n)
                            }
                            let e = 27 n + (27 n === t.v ? 0 n : 1 n);
                            if (t.v !== e) throw new n.InvalidLegacyVError({
                                v: t.v
                            });
                            return e
                        })();
                        p = [...p, (0, a.toHex)(e), t.r, t.s]
                    } else r > 0 && (p = [...p, (0, a.toHex)(r), "0x", "0x"]);
                    return (0, s.toRlp)(p)
                }(e, t)
            }
        },
        87059: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.domainSeparator = t.getTypesForEIP712Domain = t.validateTypedData = void 0;
            let n = r(31480),
                i = r(90874),
                o = r(74815),
                a = r(93071),
                s = r(32054),
                c = r(89194),
                u = r(11699);

            function getTypesForEIP712Domain({
                domain: e
            }) {
                return ["string" == typeof e ? .name && {
                    name: "name",
                    type: "string"
                }, e ? .version && {
                    name: "version",
                    type: "string"
                }, "number" == typeof e ? .chainId && {
                    name: "chainId",
                    type: "uint256"
                }, e ? .verifyingContract && {
                    name: "verifyingContract",
                    type: "address"
                }, e ? .salt && {
                    name: "salt",
                    type: "bytes32"
                }].filter(Boolean)
            }
            t.validateTypedData = function({
                domain: e,
                message: t,
                primaryType: r,
                types: u
            }) {
                let validateData = (e, t) => {
                    for (let r of e) {
                        let {
                            name: e,
                            type: l
                        } = r, d = t[e], f = l.match(c.integerRegex);
                        if (f && ("number" == typeof d || "bigint" == typeof d)) {
                            let [e, t, r] = f;
                            (0, s.numberToHex)(d, {
                                signed: "int" === t,
                                size: parseInt(r) / 8
                            })
                        }
                        if ("address" === l && "string" == typeof d && !(0, o.isAddress)(d)) throw new i.InvalidAddressError({
                            address: d
                        });
                        let p = l.match(c.bytesRegex);
                        if (p) {
                            let [e, t] = p;
                            if (t && (0, a.size)(d) !== parseInt(t)) throw new n.BytesSizeMismatchError({
                                expectedSize: parseInt(t),
                                givenSize: (0, a.size)(d)
                            })
                        }
                        let y = u[l];
                        y && validateData(y, d)
                    }
                };
                if (u.EIP712Domain && e && validateData(u.EIP712Domain, e), "EIP712Domain" !== r) {
                    let e = u[r];
                    validateData(e, t)
                }
            }, t.getTypesForEIP712Domain = getTypesForEIP712Domain, t.domainSeparator = function({
                domain: e
            }) {
                return (0, u.hashDomain)({
                    domain: e,
                    types: {
                        EIP712Domain: getTypesForEIP712Domain({
                            domain: e
                        })
                    }
                })
            }
        },
        10539: function(e, t) {
            "use strict";
            let r;
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.uid = void 0;
            let n = 256;
            t.uid = function(e = 11) {
                if (!r || n + e > 512) {
                    r = "", n = 0;
                    for (let e = 0; e < 256; e++) r += (256 + 256 * Math.random() | 0).toString(16).substring(1)
                }
                return r.substring(n, n++ + e)
            }
        },
        53711: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.formatEther = void 0;
            let n = r(49955),
                i = r(62593);
            t.formatEther = function(e, t = "wei") {
                return (0, i.formatUnits)(e, n.etherUnits[t])
            }
        },
        14958: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.formatGwei = void 0;
            let n = r(49955),
                i = r(62593);
            t.formatGwei = function(e, t = "wei") {
                return (0, i.formatUnits)(e, n.gweiUnits[t])
            }
        },
        62593: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.formatUnits = void 0, t.formatUnits = function(e, t) {
                let r = e.toString(),
                    n = r.startsWith("-");
                n && (r = r.slice(1));
                let [i, o] = [(r = r.padStart(t, "0")).slice(0, r.length - t), r.slice(r.length - t)];
                return o = o.replace(/(0+)$/, ""), `${n?"-":""}${i||"0"}${o?`.${o}`:""}`
            }
        },
        74771: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.parseEther = void 0;
            let n = r(49955),
                i = r(30464);
            t.parseEther = function(e, t = "wei") {
                return (0, i.parseUnits)(e, n.etherUnits[t])
            }
        },
        349: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.parseGwei = void 0;
            let n = r(49955),
                i = r(30464);
            t.parseGwei = function(e, t = "wei") {
                return (0, i.parseUnits)(e, n.gweiUnits[t])
            }
        },
        30464: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.parseUnits = void 0, t.parseUnits = function(e, t) {
                let [r, n = "0"] = e.split("."), i = r.startsWith("-");
                if (i && (r = r.slice(1)), n = n.replace(/(0+)$/, ""), 0 === t) 1 === Math.round(Number(`.${n}`)) && (r = `${BigInt(r)+1n}`), n = "";
                else if (n.length > t) {
                    let [e, i, o] = [n.slice(0, t - 1), n.slice(t - 1, t), n.slice(t)], a = Math.round(Number(`${i}.${o}`));
                    (n = a > 9 ? `${BigInt(e)+BigInt(1)}0`.padStart(e.length + 1, "0") : `${e}${a}`).length > t && (n = n.slice(1), r = `${BigInt(r)+1n}`), n = n.slice(0, t)
                } else n = n.padEnd(t, "0");
                return BigInt(`${i?"-":""}${r}${n}`)
            }
        },
        99501: function(e, t) {
            "use strict";
            async function wait(e) {
                return new Promise(t => setTimeout(t, e))
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.wait = void 0, t.wait = wait
        },
        56358: function(e, t, r) {
            "use strict";
            r.d(t, {
                h: function() {
                    return ec
                }
            });
            var n, i, o = r(50044),
                a = r(17143),
                s = r(50905),
                c = r(36510),
                u = r(86275),
                l = function() {
                    function ApolloCache() {
                        this.assumeImmutableResults = !1, this.getFragmentDoc = (0, s.re)(u.Yk)
                    }
                    return ApolloCache.prototype.batch = function(e) {
                        var t, r = this,
                            n = "string" == typeof e.optimistic ? e.optimistic : !1 === e.optimistic ? null : void 0;
                        return this.performTransaction(function() {
                            return t = e.update(r)
                        }, n), t
                    }, ApolloCache.prototype.recordOptimisticTransaction = function(e, t) {
                        this.performTransaction(e, t)
                    }, ApolloCache.prototype.transformDocument = function(e) {
                        return e
                    }, ApolloCache.prototype.transformForLink = function(e) {
                        return e
                    }, ApolloCache.prototype.identify = function(e) {}, ApolloCache.prototype.gc = function() {
                        return []
                    }, ApolloCache.prototype.modify = function(e) {
                        return !1
                    }, ApolloCache.prototype.readQuery = function(e, t) {
                        return void 0 === t && (t = !!e.optimistic), this.read((0, o.__assign)((0, o.__assign)({}, e), {
                            rootId: e.id || "ROOT_QUERY",
                            optimistic: t
                        }))
                    }, ApolloCache.prototype.readFragment = function(e, t) {
                        return void 0 === t && (t = !!e.optimistic), this.read((0, o.__assign)((0, o.__assign)({}, e), {
                            query: this.getFragmentDoc(e.fragment, e.fragmentName),
                            rootId: e.id,
                            optimistic: t
                        }))
                    }, ApolloCache.prototype.writeQuery = function(e) {
                        var t = e.id,
                            r = e.data,
                            n = (0, o.__rest)(e, ["id", "data"]);
                        return this.write(Object.assign(n, {
                            dataId: t || "ROOT_QUERY",
                            result: r
                        }))
                    }, ApolloCache.prototype.writeFragment = function(e) {
                        var t = e.id,
                            r = e.data,
                            n = e.fragment,
                            i = e.fragmentName,
                            a = (0, o.__rest)(e, ["id", "data", "fragment", "fragmentName"]);
                        return this.write(Object.assign(a, {
                            query: this.getFragmentDoc(n, i),
                            dataId: t,
                            result: r
                        }))
                    }, ApolloCache.prototype.updateQuery = function(e, t) {
                        return this.batch({
                            update: function(r) {
                                var n = r.readQuery(e),
                                    i = t(n);
                                return null == i ? n : (r.writeQuery((0, o.__assign)((0, o.__assign)({}, e), {
                                    data: i
                                })), i)
                            }
                        })
                    }, ApolloCache.prototype.updateFragment = function(e, t) {
                        return this.batch({
                            update: function(r) {
                                var n = r.readFragment(e),
                                    i = t(n);
                                return null == i ? n : (r.writeFragment((0, o.__assign)((0, o.__assign)({}, e), {
                                    data: i
                                })), i)
                            }
                        })
                    }, ApolloCache
                }(),
                d = function(e) {
                    function MissingFieldError(t, r, n, i) {
                        var o, a = e.call(this, t) || this;
                        if (a.message = t, a.path = r, a.query = n, a.variables = i, Array.isArray(a.path)) {
                            a.missing = a.message;
                            for (var s = a.path.length - 1; s >= 0; --s) a.missing = ((o = {})[a.path[s]] = a.missing, o)
                        } else a.missing = a.path;
                        return a.__proto__ = MissingFieldError.prototype, a
                    }
                    return (0, o.__extends)(MissingFieldError, e), MissingFieldError
                }(Error),
                f = r(65647),
                p = r(90535),
                y = r(44339),
                g = r(55459),
                v = r(38191),
                E = r(18865),
                _ = r(11739),
                P = r(93592),
                T = r(85812),
                x = r(68859),
                A = r(88550),
                M = r(12913),
                B = r(28607),
                F = Object.prototype.hasOwnProperty;

            function isNullish(e) {
                return null == e
            }

            function defaultDataIdFromObject(e, t) {
                var r = e.__typename,
                    n = e.id,
                    i = e._id;
                if ("string" == typeof r && (t && (t.keyObject = isNullish(n) ? isNullish(i) ? void 0 : {
                        _id: i
                    } : {
                        id: n
                    }), isNullish(n) && !isNullish(i) && (n = i), !isNullish(n))) return "".concat(r, ":").concat("number" == typeof n || "string" == typeof n ? n : JSON.stringify(n))
            }
            var N = {
                dataIdFromObject: defaultDataIdFromObject,
                addTypename: !0,
                resultCaching: !0,
                canonizeResults: !1
            };

            function shouldCanonizeResults(e) {
                var t = e.canonizeResults;
                return void 0 === t ? N.canonizeResults : t
            }
            var L = /^[_a-z][_0-9a-z]*/i;

            function fieldNameFromStoreName(e) {
                var t = e.match(L);
                return t ? t[0] : e
            }

            function storeValueIsStoreObject(e) {
                return (0, A.s)(e) && !(0, y.Yk)(e) && !(0, B.k)(e)
            }

            function extractFragmentContext(e, t) {
                var r = (0, u.F)((0, _.kU)(e));
                return {
                    fragmentMap: r,
                    lookupFragment: function(e) {
                        var n = r[e];
                        return !n && t && (n = t.lookup(e)), n || null
                    }
                }
            }
            var U = Object.create(null),
                delModifier = function() {
                    return U
                },
                z = Object.create(null),
                G = function() {
                    function EntityStore(e, t) {
                        var r = this;
                        this.policies = e, this.group = t, this.data = Object.create(null), this.rootIds = Object.create(null), this.refs = Object.create(null), this.getFieldValue = function(e, t) {
                            return (0, x.J)((0, y.Yk)(e) ? r.get(e.__ref, t) : e && e[t])
                        }, this.canRead = function(e) {
                            return (0, y.Yk)(e) ? r.has(e.__ref) : "object" == typeof e
                        }, this.toReference = function(e, t) {
                            if ("string" == typeof e) return (0, y.kQ)(e);
                            if ((0, y.Yk)(e)) return e;
                            var n = r.policies.identify(e)[0];
                            if (n) {
                                var i = (0, y.kQ)(n);
                                return t && r.merge(n, e), i
                            }
                        }
                    }
                    return EntityStore.prototype.toObject = function() {
                        return (0, o.__assign)({}, this.data)
                    }, EntityStore.prototype.has = function(e) {
                        return void 0 !== this.lookup(e, !0)
                    }, EntityStore.prototype.get = function(e, t) {
                        if (this.group.depend(e, t), F.call(this.data, e)) {
                            var r = this.data[e];
                            if (r && F.call(r, t)) return r[t]
                        }
                        return "__typename" === t && F.call(this.policies.rootTypenamesById, e) ? this.policies.rootTypenamesById[e] : this instanceof V ? this.parent.get(e, t) : void 0
                    }, EntityStore.prototype.lookup = function(e, t) {
                        return (t && this.group.depend(e, "__exists"), F.call(this.data, e)) ? this.data[e] : this instanceof V ? this.parent.lookup(e, t) : this.policies.rootTypenamesById[e] ? Object.create(null) : void 0
                    }, EntityStore.prototype.merge = function(e, t) {
                        var r, n = this;
                        (0, y.Yk)(e) && (e = e.__ref), (0, y.Yk)(t) && (t = t.__ref);
                        var i = "string" == typeof e ? this.lookup(r = e) : e,
                            o = "string" == typeof t ? this.lookup(r = t) : t;
                        if (o) {
                            (0, a.kG)("string" == typeof r, 1);
                            var s = new P.w0(storeObjectReconciler).merge(i, o);
                            if (this.data[r] = s, s !== i && (delete this.refs[r], this.group.caching)) {
                                var c = Object.create(null);
                                i || (c.__exists = 1), Object.keys(o).forEach(function(e) {
                                    if (!i || i[e] !== s[e]) {
                                        c[e] = 1;
                                        var t = fieldNameFromStoreName(e);
                                        t === e || n.policies.hasKeyArgs(s.__typename, t) || (c[t] = 1), void 0 !== s[e] || n instanceof V || delete s[e]
                                    }
                                }), c.__typename && !(i && i.__typename) && this.policies.rootTypenamesById[r] === s.__typename && delete c.__typename, Object.keys(c).forEach(function(e) {
                                    return n.group.dirty(r, e)
                                })
                            }
                        }
                    }, EntityStore.prototype.modify = function(e, t) {
                        var r = this,
                            n = this.lookup(e);
                        if (n) {
                            var i = Object.create(null),
                                s = !1,
                                c = !0,
                                u = {
                                    DELETE: U,
                                    INVALIDATE: z,
                                    isReference: y.Yk,
                                    toReference: this.toReference,
                                    canRead: this.canRead,
                                    readField: function(t, n) {
                                        return r.policies.readField("string" == typeof t ? {
                                            fieldName: t,
                                            from: n || (0, y.kQ)(e)
                                        } : t, {
                                            store: r
                                        })
                                    }
                                };
                            if (Object.keys(n).forEach(function(l) {
                                    var d = fieldNameFromStoreName(l),
                                        f = n[l];
                                    if (void 0 !== f) {
                                        var p = "function" == typeof t ? t : t[l] || t[d];
                                        if (p) {
                                            var g = p === delModifier ? U : p((0, x.J)(f), (0, o.__assign)((0, o.__assign)({}, u), {
                                                fieldName: d,
                                                storeFieldName: l,
                                                storage: r.getStorage(e, l)
                                            }));
                                            if (g === z) r.group.dirty(e, l);
                                            else if (g === U && (g = void 0), g !== f && (i[l] = g, s = !0, f = g, !1 !== globalThis.__DEV__)) {
                                                var checkReference = function(e) {
                                                    if (void 0 === r.lookup(e.__ref)) return !1 !== globalThis.__DEV__ && a.kG.warn(2, e), !0
                                                };
                                                if ((0, y.Yk)(g)) checkReference(g);
                                                else if (Array.isArray(g))
                                                    for (var v = !1, E = void 0, _ = 0, P = g; _ < P.length; _++) {
                                                        var T = P[_];
                                                        if ((0, y.Yk)(T)) {
                                                            if (v = !0, checkReference(T)) break
                                                        } else "object" == typeof T && T && r.policies.identify(T)[0] && (E = T);
                                                        if (v && void 0 !== E) {
                                                            !1 !== globalThis.__DEV__ && a.kG.warn(3, E);
                                                            break
                                                        }
                                                    }
                                            }
                                        }
                                        void 0 !== f && (c = !1)
                                    }
                                }), s) return this.merge(e, i), c && (this instanceof V ? this.data[e] = void 0 : delete this.data[e], this.group.dirty(e, "__exists")), !0
                        }
                        return !1
                    }, EntityStore.prototype.delete = function(e, t, r) {
                        var n, i = this.lookup(e);
                        if (i) {
                            var o = this.getFieldValue(i, "__typename"),
                                a = t && r ? this.policies.getStoreFieldName({
                                    typename: o,
                                    fieldName: t,
                                    args: r
                                }) : t;
                            return this.modify(e, a ? ((n = {})[a] = delModifier, n) : delModifier)
                        }
                        return !1
                    }, EntityStore.prototype.evict = function(e, t) {
                        var r = !1;
                        return e.id && (F.call(this.data, e.id) && (r = this.delete(e.id, e.fieldName, e.args)), this instanceof V && this !== t && (r = this.parent.evict(e, t) || r), (e.fieldName || r) && this.group.dirty(e.id, e.fieldName || "__exists")), r
                    }, EntityStore.prototype.clear = function() {
                        this.replace(null)
                    }, EntityStore.prototype.extract = function() {
                        var e = this,
                            t = this.toObject(),
                            r = [];
                        return this.getRootIdSet().forEach(function(t) {
                            F.call(e.policies.rootTypenamesById, t) || r.push(t)
                        }), r.length && (t.__META = {
                            extraRootIds: r.sort()
                        }), t
                    }, EntityStore.prototype.replace = function(e) {
                        var t = this;
                        if (Object.keys(this.data).forEach(function(r) {
                                e && F.call(e, r) || t.delete(r)
                            }), e) {
                            var r = e.__META,
                                n = (0, o.__rest)(e, ["__META"]);
                            Object.keys(n).forEach(function(e) {
                                t.merge(e, n[e])
                            }), r && r.extraRootIds.forEach(this.retain, this)
                        }
                    }, EntityStore.prototype.retain = function(e) {
                        return this.rootIds[e] = (this.rootIds[e] || 0) + 1
                    }, EntityStore.prototype.release = function(e) {
                        if (this.rootIds[e] > 0) {
                            var t = --this.rootIds[e];
                            return t || delete this.rootIds[e], t
                        }
                        return 0
                    }, EntityStore.prototype.getRootIdSet = function(e) {
                        return void 0 === e && (e = new Set), Object.keys(this.rootIds).forEach(e.add, e), this instanceof V ? this.parent.getRootIdSet(e) : Object.keys(this.policies.rootTypenamesById).forEach(e.add, e), e
                    }, EntityStore.prototype.gc = function() {
                        var e = this,
                            t = this.getRootIdSet(),
                            r = this.toObject();
                        t.forEach(function(n) {
                            F.call(r, n) && (Object.keys(e.findChildRefIds(n)).forEach(t.add, t), delete r[n])
                        });
                        var n = Object.keys(r);
                        if (n.length) {
                            for (var i = this; i instanceof V;) i = i.parent;
                            n.forEach(function(e) {
                                return i.delete(e)
                            })
                        }
                        return n
                    }, EntityStore.prototype.findChildRefIds = function(e) {
                        if (!F.call(this.refs, e)) {
                            var t = this.refs[e] = Object.create(null),
                                r = this.data[e];
                            if (!r) return t;
                            var n = new Set([r]);
                            n.forEach(function(e) {
                                (0, y.Yk)(e) && (t[e.__ref] = !0), (0, A.s)(e) && Object.keys(e).forEach(function(t) {
                                    var r = e[t];
                                    (0, A.s)(r) && n.add(r)
                                })
                            })
                        }
                        return this.refs[e]
                    }, EntityStore.prototype.makeCacheKey = function() {
                        return this.group.keyMaker.lookupArray(arguments)
                    }, EntityStore
                }(),
                W = function() {
                    function CacheGroup(e, t) {
                        void 0 === t && (t = null), this.caching = e, this.parent = t, this.d = null, this.resetCaching()
                    }
                    return CacheGroup.prototype.resetCaching = function() {
                        this.d = this.caching ? (0, s.dP)() : null, this.keyMaker = new M.B(v.mr)
                    }, CacheGroup.prototype.depend = function(e, t) {
                        if (this.d) {
                            this.d(t + "#" + e);
                            var r = fieldNameFromStoreName(t);
                            r !== t && this.d(r + "#" + e), this.parent && this.parent.depend(e, t)
                        }
                    }, CacheGroup.prototype.dirty = function(e, t) {
                        this.d && this.d.dirty(t + "#" + e, "__exists" === t ? "forget" : "setDirty")
                    }, CacheGroup
                }();

            function maybeDependOnExistenceOfEntity(e, t) {
                supportsResultCaching(e) && e.group.depend(t, "__exists")
            }
            i = function(e) {
                function Root(t) {
                    var r = t.policies,
                        n = t.resultCaching,
                        i = t.seed,
                        o = e.call(this, r, new W(void 0 === n || n)) || this;
                    return o.stump = new Q(o), o.storageTrie = new M.B(v.mr), i && o.replace(i), o
                }
                return (0, o.__extends)(Root, e), Root.prototype.addLayer = function(e, t) {
                    return this.stump.addLayer(e, t)
                }, Root.prototype.removeLayer = function() {
                    return this
                }, Root.prototype.getStorage = function() {
                    return this.storageTrie.lookupArray(arguments)
                }, Root
            }(n = G || (G = {})), n.Root = i;
            var V = function(e) {
                    function Layer(t, r, n, i) {
                        var o = e.call(this, r.policies, i) || this;
                        return o.id = t, o.parent = r, o.replay = n, o.group = i, n(o), o
                    }
                    return (0, o.__extends)(Layer, e), Layer.prototype.addLayer = function(e, t) {
                        return new Layer(e, this, t, this.group)
                    }, Layer.prototype.removeLayer = function(e) {
                        var t = this,
                            r = this.parent.removeLayer(e);
                        return e === this.id ? (this.group.caching && Object.keys(this.data).forEach(function(e) {
                            var n = t.data[e],
                                i = r.lookup(e);
                            i ? n ? n !== i && Object.keys(n).forEach(function(r) {
                                (0, c.D)(n[r], i[r]) || t.group.dirty(e, r)
                            }) : (t.group.dirty(e, "__exists"), Object.keys(i).forEach(function(r) {
                                t.group.dirty(e, r)
                            })) : t.delete(e)
                        }), r) : r === this.parent ? this : r.addLayer(this.id, this.replay)
                    }, Layer.prototype.toObject = function() {
                        return (0, o.__assign)((0, o.__assign)({}, this.parent.toObject()), this.data)
                    }, Layer.prototype.findChildRefIds = function(t) {
                        var r = this.parent.findChildRefIds(t);
                        return F.call(this.data, t) ? (0, o.__assign)((0, o.__assign)({}, r), e.prototype.findChildRefIds.call(this, t)) : r
                    }, Layer.prototype.getStorage = function() {
                        for (var e = this.parent; e.parent;) e = e.parent;
                        return e.getStorage.apply(e, arguments)
                    }, Layer
                }(G),
                Q = function(e) {
                    function Stump(t) {
                        return e.call(this, "EntityStore.Stump", t, function() {}, new W(t.group.caching, t.group)) || this
                    }
                    return (0, o.__extends)(Stump, e), Stump.prototype.removeLayer = function() {
                        return this
                    }, Stump.prototype.merge = function(e, t) {
                        return this.parent.merge(e, t)
                    }, Stump
                }(V);

            function storeObjectReconciler(e, t, r) {
                var n = e[r],
                    i = t[r];
                return (0, c.D)(n, i) ? n : i
            }

            function supportsResultCaching(e) {
                return !!(e instanceof G && e.group.caching)
            }
            var K = r(69165);

            function execSelectionSetKeyArgs(e) {
                return [e.selectionSet, e.objectOrReference, e.context, e.context.canonizeResults]
            }
            var Y = function() {
                    function StoreReader(e) {
                        var t = this;
                        this.knownResults = new(v.mr ? WeakMap : Map), this.config = (0, E.o)(e, {
                            addTypename: !1 !== e.addTypename,
                            canonizeResults: shouldCanonizeResults(e)
                        }), this.canon = e.canon || new K.h, this.executeSelectionSet = (0, s.re)(function(e) {
                            var r, n = e.context.canonizeResults,
                                i = execSelectionSetKeyArgs(e);
                            i[3] = !n;
                            var a = (r = t.executeSelectionSet).peek.apply(r, i);
                            return a ? n ? (0, o.__assign)((0, o.__assign)({}, a), {
                                result: t.canon.admit(a.result)
                            }) : a : (maybeDependOnExistenceOfEntity(e.context.store, e.enclosingRef.__ref), t.execSelectionSetImpl(e))
                        }, {
                            max: this.config.resultCacheMaxSize,
                            keyArgs: execSelectionSetKeyArgs,
                            makeCacheKey: function(e, t, r, n) {
                                if (supportsResultCaching(r.store)) return r.store.makeCacheKey(e, (0, y.Yk)(t) ? t.__ref : t, r.varString, n)
                            }
                        }), this.executeSubSelectedArray = (0, s.re)(function(e) {
                            return maybeDependOnExistenceOfEntity(e.context.store, e.enclosingRef.__ref), t.execSubSelectedArrayImpl(e)
                        }, {
                            max: this.config.resultCacheMaxSize,
                            makeCacheKey: function(e) {
                                var t = e.field,
                                    r = e.array,
                                    n = e.context;
                                if (supportsResultCaching(n.store)) return n.store.makeCacheKey(t, r, n.varString)
                            }
                        })
                    }
                    return StoreReader.prototype.resetCanon = function() {
                        this.canon = new K.h
                    }, StoreReader.prototype.diffQueryAgainstStore = function(e) {
                        var t, r = e.store,
                            n = e.query,
                            i = e.rootId,
                            a = void 0 === i ? "ROOT_QUERY" : i,
                            s = e.variables,
                            c = e.returnPartialData,
                            u = e.canonizeResults,
                            l = void 0 === u ? this.config.canonizeResults : u,
                            f = this.config.cache.policies;
                        s = (0, o.__assign)((0, o.__assign)({}, (0, _.O4)((0, _.iW)(n))), s);
                        var p = (0, y.kQ)(a),
                            g = this.executeSelectionSet({
                                selectionSet: (0, _.p$)(n).selectionSet,
                                objectOrReference: p,
                                enclosingRef: p,
                                context: (0, o.__assign)({
                                    store: r,
                                    query: n,
                                    policies: f,
                                    variables: s,
                                    varString: (0, K.B)(s),
                                    canonizeResults: l
                                }, extractFragmentContext(n, this.config.fragments))
                            });
                        if (g.missing && (t = [new d(function(e) {
                                try {
                                    JSON.stringify(e, function(e, t) {
                                        if ("string" == typeof t) throw t;
                                        return t
                                    })
                                } catch (e) {
                                    return e
                                }
                            }(g.missing), g.missing, n, s)], !(void 0 === c || c))) throw t[0];
                        return {
                            result: g.result,
                            complete: !t,
                            missing: t
                        }
                    }, StoreReader.prototype.isFresh = function(e, t, r, n) {
                        if (supportsResultCaching(n.store) && this.knownResults.get(e) === r) {
                            var i = this.executeSelectionSet.peek(r, t, n, this.canon.isKnown(e));
                            if (i && e === i.result) return !0
                        }
                        return !1
                    }, StoreReader.prototype.execSelectionSetImpl = function(e) {
                        var t, r = this,
                            n = e.selectionSet,
                            i = e.objectOrReference,
                            o = e.enclosingRef,
                            s = e.context;
                        if ((0, y.Yk)(i) && !s.policies.rootTypenamesById[i.__ref] && !s.store.has(i.__ref)) return {
                            result: this.canon.empty,
                            missing: "Dangling reference to missing ".concat(i.__ref, " object")
                        };
                        var c = s.variables,
                            l = s.policies,
                            d = s.store.getFieldValue(i, "__typename"),
                            f = [],
                            v = new P.w0;

                        function handleMissing(e, r) {
                            var n;
                            return e.missing && (t = v.merge(t, ((n = {})[r] = e.missing, n))), e.result
                        }
                        this.config.addTypename && "string" == typeof d && !l.rootIdsByTypename[d] && f.push({
                            __typename: d
                        });
                        var E = new Set(n.selections);
                        E.forEach(function(e) {
                            var n, _;
                            if ((0, T.LZ)(e, c)) {
                                if ((0, y.My)(e)) {
                                    var P = l.readField({
                                            fieldName: e.name.value,
                                            field: e,
                                            variables: s.variables,
                                            from: i
                                        }, s),
                                        x = (0, y.u2)(e);
                                    void 0 === P ? p.Gw.added(e) || (t = v.merge(t, ((n = {})[x] = "Can't find field '".concat(e.name.value, "' on ").concat((0, y.Yk)(i) ? i.__ref + " object" : "object " + JSON.stringify(i, null, 2)), n))) : (0, B.k)(P) ? P = handleMissing(r.executeSubSelectedArray({
                                        field: e,
                                        array: P,
                                        enclosingRef: o,
                                        context: s
                                    }), x) : e.selectionSet ? null != P && (P = handleMissing(r.executeSelectionSet({
                                        selectionSet: e.selectionSet,
                                        objectOrReference: P,
                                        enclosingRef: (0, y.Yk)(P) ? P : o,
                                        context: s
                                    }), x)) : s.canonizeResults && (P = r.canon.pass(P)), void 0 !== P && f.push(((_ = {})[x] = P, _))
                                } else {
                                    var A = (0, u.hi)(e, s.lookupFragment);
                                    if (!A && e.kind === g.h.FRAGMENT_SPREAD) throw (0, a._K)(9, e.name.value);
                                    A && l.fragmentMatches(A, d) && A.selectionSet.selections.forEach(E.add, E)
                                }
                            }
                        });
                        var _ = {
                                result: (0, P.bw)(f),
                                missing: t
                            },
                            A = s.canonizeResults ? this.canon.admit(_) : (0, x.J)(_);
                        return A.result && this.knownResults.set(A.result, n), A
                    }, StoreReader.prototype.execSubSelectedArrayImpl = function(e) {
                        var t, r = this,
                            n = e.field,
                            i = e.array,
                            o = e.enclosingRef,
                            s = e.context,
                            c = new P.w0;

                        function handleMissing(e, r) {
                            var n;
                            return e.missing && (t = c.merge(t, ((n = {})[r] = e.missing, n))), e.result
                        }
                        return n.selectionSet && (i = i.filter(s.store.canRead)), i = i.map(function(e, t) {
                            return null === e ? null : (0, B.k)(e) ? handleMissing(r.executeSubSelectedArray({
                                field: n,
                                array: e,
                                enclosingRef: o,
                                context: s
                            }), t) : n.selectionSet ? handleMissing(r.executeSelectionSet({
                                selectionSet: n.selectionSet,
                                objectOrReference: e,
                                enclosingRef: (0, y.Yk)(e) ? e : o,
                                context: s
                            }), t) : (!1 !== globalThis.__DEV__ && function(e, t, r) {
                                if (!t.selectionSet) {
                                    var n = new Set([r]);
                                    n.forEach(function(r) {
                                        (0, A.s)(r) && ((0, a.kG)(!(0, y.Yk)(r), 10, (0, y.Yk)(r) ? e.get(r.__ref, "__typename") : r && r.__typename, t.name.value), Object.values(r).forEach(n.add, n))
                                    })
                                }
                            }(s.store, n, e), e)
                        }), {
                            result: s.canonizeResults ? this.canon.admit(i) : i,
                            missing: t
                        }
                    }, StoreReader
                }(),
                J = r(62566),
                X = r(91286),
                er = r(86048),
                en = Object.create(null);

            function lookupSpecifierInfo(e) {
                var t = JSON.stringify(e);
                return en[t] || (en[t] = Object.create(null))
            }

            function keyFieldsFnFromSpecifier(e) {
                var t = lookupSpecifierInfo(e);
                return t.keyFieldsFn || (t.keyFieldsFn = function(t, r) {
                    var extract = function(e, t) {
                            return r.readField(t, e)
                        },
                        n = r.keyObject = collectSpecifierPaths(e, function(e) {
                            var n = extractKeyPath(r.storeObject, e, extract);
                            return void 0 === n && t !== r.storeObject && F.call(t, e[0]) && (n = extractKeyPath(t, e, extractKey)), (0, a.kG)(void 0 !== n, 4, e.join("."), t), n
                        });
                    return "".concat(r.typename, ":").concat(JSON.stringify(n))
                })
            }

            function keyArgsFnFromSpecifier(e) {
                var t = lookupSpecifierInfo(e);
                return t.keyArgsFn || (t.keyArgsFn = function(t, r) {
                    var n = r.field,
                        i = r.variables,
                        o = r.fieldName,
                        a = JSON.stringify(collectSpecifierPaths(e, function(e) {
                            var r = e[0],
                                o = r.charAt(0);
                            if ("@" === o) {
                                if (n && (0, B.O)(n.directives)) {
                                    var a = r.slice(1),
                                        s = n.directives.find(function(e) {
                                            return e.name.value === a
                                        }),
                                        c = s && (0, y.NC)(s, i);
                                    return c && extractKeyPath(c, e.slice(1))
                                }
                                return
                            }
                            if ("$" === o) {
                                var u = r.slice(1);
                                if (i && F.call(i, u)) {
                                    var l = e.slice(0);
                                    return l[0] = u, extractKeyPath(i, l)
                                }
                                return
                            }
                            if (t) return extractKeyPath(t, e)
                        }));
                    return (t || "{}" !== a) && (o += ":" + a), o
                })
            }

            function collectSpecifierPaths(e, t) {
                var r = new P.w0;
                return (function getSpecifierPaths(e) {
                    var t = lookupSpecifierInfo(e);
                    if (!t.paths) {
                        var r = t.paths = [],
                            n = [];
                        e.forEach(function(t, i) {
                            (0, B.k)(t) ? (getSpecifierPaths(t).forEach(function(e) {
                                return r.push(n.concat(e))
                            }), n.length = 0) : (n.push(t), (0, B.k)(e[i + 1]) || (r.push(n.slice(0)), n.length = 0))
                        })
                    }
                    return t.paths
                })(e).reduce(function(e, n) {
                    var i, o = t(n);
                    if (void 0 !== o) {
                        for (var a = n.length - 1; a >= 0; --a)(i = {})[n[a]] = o, o = i;
                        e = r.merge(e, o)
                    }
                    return e
                }, Object.create(null))
            }

            function extractKey(e, t) {
                return e[t]
            }

            function extractKeyPath(e, t, r) {
                return r = r || extractKey,
                    function normalize(e) {
                        return (0, A.s)(e) ? (0, B.k)(e) ? e.map(normalize) : collectSpecifierPaths(Object.keys(e).sort(), function(t) {
                            return extractKeyPath(e, t)
                        }) : e
                    }(t.reduce(function reducer(e, t) {
                        return (0, B.k)(e) ? e.map(function(e) {
                            return reducer(e, t)
                        }) : e && r(e, t)
                    }, e))
            }

            function argsFromFieldSpecifier(e) {
                return void 0 !== e.args ? e.args : e.field ? (0, y.NC)(e.field, e.variables) : null
            }
            y.PT.setStringify(K.B);
            var nullKeyFieldsFn = function() {},
                simpleKeyArgsFn = function(e, t) {
                    return t.fieldName
                },
                mergeTrueFn = function(e, t, r) {
                    return (0, r.mergeObjects)(e, t)
                },
                mergeFalseFn = function(e, t) {
                    return t
                },
                ei = function() {
                    function Policies(e) {
                        this.config = e, this.typePolicies = Object.create(null), this.toBeAdded = Object.create(null), this.supertypeMap = new Map, this.fuzzySubtypes = new Map, this.rootIdsByTypename = Object.create(null), this.rootTypenamesById = Object.create(null), this.usingPossibleTypes = !1, this.config = (0, o.__assign)({
                            dataIdFromObject: defaultDataIdFromObject
                        }, e), this.cache = this.config.cache, this.setRootTypename("Query"), this.setRootTypename("Mutation"), this.setRootTypename("Subscription"), e.possibleTypes && this.addPossibleTypes(e.possibleTypes), e.typePolicies && this.addTypePolicies(e.typePolicies)
                    }
                    return Policies.prototype.identify = function(e, t) {
                        var r, n, i = this,
                            a = t && (t.typename || (null === (r = t.storeObject) || void 0 === r ? void 0 : r.__typename)) || e.__typename;
                        if (a === this.rootTypenamesById.ROOT_QUERY) return ["ROOT_QUERY"];
                        for (var s = t && t.storeObject || e, c = (0, o.__assign)((0, o.__assign)({}, t), {
                                typename: a,
                                storeObject: s,
                                readField: t && t.readField || function() {
                                    var e = normalizeReadFieldOptions(arguments, s);
                                    return i.readField(e, {
                                        store: i.cache.data,
                                        variables: e.variables
                                    })
                                }
                            }), u = a && this.getTypePolicy(a), l = u && u.keyFn || this.config.dataIdFromObject; l;) {
                            var d = l((0, o.__assign)((0, o.__assign)({}, e), s), c);
                            if ((0, B.k)(d)) l = keyFieldsFnFromSpecifier(d);
                            else {
                                n = d;
                                break
                            }
                        }
                        return n = n ? String(n) : void 0, c.keyObject ? [n, c.keyObject] : [n]
                    }, Policies.prototype.addTypePolicies = function(e) {
                        var t = this;
                        Object.keys(e).forEach(function(r) {
                            var n = e[r],
                                i = n.queryType,
                                a = n.mutationType,
                                s = n.subscriptionType,
                                c = (0, o.__rest)(n, ["queryType", "mutationType", "subscriptionType"]);
                            i && t.setRootTypename("Query", r), a && t.setRootTypename("Mutation", r), s && t.setRootTypename("Subscription", r), F.call(t.toBeAdded, r) ? t.toBeAdded[r].push(c) : t.toBeAdded[r] = [c]
                        })
                    }, Policies.prototype.updateTypePolicy = function(e, t) {
                        var r = this,
                            n = this.getTypePolicy(e),
                            i = t.keyFields,
                            o = t.fields;

                        function setMerge(e, t) {
                            e.merge = "function" == typeof t ? t : !0 === t ? mergeTrueFn : !1 === t ? mergeFalseFn : e.merge
                        }
                        setMerge(n, t.merge), n.keyFn = !1 === i ? nullKeyFieldsFn : (0, B.k)(i) ? keyFieldsFnFromSpecifier(i) : "function" == typeof i ? i : n.keyFn, o && Object.keys(o).forEach(function(t) {
                            var n = r.getFieldPolicy(e, t, !0),
                                i = o[t];
                            if ("function" == typeof i) n.read = i;
                            else {
                                var a = i.keyArgs,
                                    s = i.read,
                                    c = i.merge;
                                n.keyFn = !1 === a ? simpleKeyArgsFn : (0, B.k)(a) ? keyArgsFnFromSpecifier(a) : "function" == typeof a ? a : n.keyFn, "function" == typeof s && (n.read = s), setMerge(n, c)
                            }
                            n.read && n.merge && (n.keyFn = n.keyFn || simpleKeyArgsFn)
                        })
                    }, Policies.prototype.setRootTypename = function(e, t) {
                        void 0 === t && (t = e);
                        var r = "ROOT_" + e.toUpperCase(),
                            n = this.rootTypenamesById[r];
                        t !== n && ((0, a.kG)(!n || n === e, 5, e), n && delete this.rootIdsByTypename[n], this.rootIdsByTypename[t] = r, this.rootTypenamesById[r] = t)
                    }, Policies.prototype.addPossibleTypes = function(e) {
                        var t = this;
                        this.usingPossibleTypes = !0, Object.keys(e).forEach(function(r) {
                            t.getSupertypeSet(r, !0), e[r].forEach(function(e) {
                                t.getSupertypeSet(e, !0).add(r);
                                var n = e.match(L);
                                n && n[0] === e || t.fuzzySubtypes.set(e, new RegExp(e))
                            })
                        })
                    }, Policies.prototype.getTypePolicy = function(e) {
                        var t = this;
                        if (!F.call(this.typePolicies, e)) {
                            var r = this.typePolicies[e] = Object.create(null);
                            r.fields = Object.create(null);
                            var n = this.supertypeMap.get(e);
                            !n && this.fuzzySubtypes.size && (n = this.getSupertypeSet(e, !0), this.fuzzySubtypes.forEach(function(r, i) {
                                if (r.test(e)) {
                                    var o = t.supertypeMap.get(i);
                                    o && o.forEach(function(e) {
                                        return n.add(e)
                                    })
                                }
                            })), n && n.size && n.forEach(function(e) {
                                var n = t.getTypePolicy(e),
                                    i = n.fields;
                                Object.assign(r, (0, o.__rest)(n, ["fields"])), Object.assign(r.fields, i)
                            })
                        }
                        var i = this.toBeAdded[e];
                        return i && i.length && i.splice(0).forEach(function(r) {
                            t.updateTypePolicy(e, r)
                        }), this.typePolicies[e]
                    }, Policies.prototype.getFieldPolicy = function(e, t, r) {
                        if (e) {
                            var n = this.getTypePolicy(e).fields;
                            return n[t] || r && (n[t] = Object.create(null))
                        }
                    }, Policies.prototype.getSupertypeSet = function(e, t) {
                        var r = this.supertypeMap.get(e);
                        return !r && t && this.supertypeMap.set(e, r = new Set), r
                    }, Policies.prototype.fragmentMatches = function(e, t, r, n) {
                        var i = this;
                        if (!e.typeCondition) return !0;
                        if (!t) return !1;
                        var o = e.typeCondition.name.value;
                        if (t === o) return !0;
                        if (this.usingPossibleTypes && this.supertypeMap.has(o))
                            for (var s = this.getSupertypeSet(t, !0), c = [s], maybeEnqueue_1 = function(e) {
                                    var t = i.getSupertypeSet(e, !1);
                                    t && t.size && 0 > c.indexOf(t) && c.push(t)
                                }, u = !!(r && this.fuzzySubtypes.size), l = !1, d = 0; d < c.length; ++d) {
                                var f = c[d];
                                if (f.has(o)) return s.has(o) || (l && !1 !== globalThis.__DEV__ && a.kG.warn(6, t, o), s.add(o)), !0;
                                f.forEach(maybeEnqueue_1), u && d === c.length - 1 && function selectionSetMatchesResult(e, t, r) {
                                    return !!(0, A.s)(t) && ((0, B.k)(t) ? t.every(function(t) {
                                        return selectionSetMatchesResult(e, t, r)
                                    }) : e.selections.every(function(e) {
                                        if ((0, y.My)(e) && (0, T.LZ)(e, r)) {
                                            var n = (0, y.u2)(e);
                                            return F.call(t, n) && (!e.selectionSet || selectionSetMatchesResult(e.selectionSet, t[n], r))
                                        }
                                        return !0
                                    }))
                                }(e.selectionSet, r, n) && (u = !1, l = !0, this.fuzzySubtypes.forEach(function(e, r) {
                                    var n = t.match(e);
                                    n && n[0] === t && maybeEnqueue_1(r)
                                }))
                            }
                        return !1
                    }, Policies.prototype.hasKeyArgs = function(e, t) {
                        var r = this.getFieldPolicy(e, t, !1);
                        return !!(r && r.keyFn)
                    }, Policies.prototype.getStoreFieldName = function(e) {
                        var t, r = e.typename,
                            n = e.fieldName,
                            i = this.getFieldPolicy(r, n, !1),
                            o = i && i.keyFn;
                        if (o && r)
                            for (var a = {
                                    typename: r,
                                    fieldName: n,
                                    field: e.field || null,
                                    variables: e.variables
                                }, s = argsFromFieldSpecifier(e); o;) {
                                var c = o(s, a);
                                if ((0, B.k)(c)) o = keyArgsFnFromSpecifier(c);
                                else {
                                    t = c || n;
                                    break
                                }
                            }
                        return (void 0 === t && (t = e.field ? (0, y.vf)(e.field, e.variables) : (0, y.PT)(n, argsFromFieldSpecifier(e))), !1 === t) ? n : n === fieldNameFromStoreName(t) ? t : n + ":" + t
                    }, Policies.prototype.readField = function(e, t) {
                        var r = e.from;
                        if (r && (e.field || e.fieldName)) {
                            if (void 0 === e.typename) {
                                var n = t.store.getFieldValue(r, "__typename");
                                n && (e.typename = n)
                            }
                            var i = this.getStoreFieldName(e),
                                o = fieldNameFromStoreName(i),
                                a = t.store.getFieldValue(r, i),
                                s = this.getFieldPolicy(e.typename, o, !1),
                                c = s && s.read;
                            if (c) {
                                var u = makeFieldFunctionOptions(this, r, e, t, t.store.getStorage((0, y.Yk)(r) ? r.__ref : r, i));
                                return er.ab.withValue(this.cache, c, [a, u])
                            }
                            return a
                        }
                    }, Policies.prototype.getReadFunction = function(e, t) {
                        var r = this.getFieldPolicy(e, t, !1);
                        return r && r.read
                    }, Policies.prototype.getMergeFunction = function(e, t, r) {
                        var n = this.getFieldPolicy(e, t, !1),
                            i = n && n.merge;
                        return !i && r && (i = (n = this.getTypePolicy(r)) && n.merge), i
                    }, Policies.prototype.runMergeFunction = function(e, t, r, n, i) {
                        var o = r.field,
                            a = r.typename,
                            s = r.merge;
                        return s === mergeTrueFn ? makeMergeObjectsFunction(n.store)(e, t) : s === mergeFalseFn ? t : (n.overwrite && (e = void 0), s(e, t, makeFieldFunctionOptions(this, void 0, {
                            typename: a,
                            fieldName: o.name.value,
                            field: o,
                            variables: n.variables
                        }, n, i || Object.create(null))))
                    }, Policies
                }();

            function makeFieldFunctionOptions(e, t, r, n, i) {
                var o = e.getStoreFieldName(r),
                    a = fieldNameFromStoreName(o),
                    s = r.variables || n.variables,
                    c = n.store,
                    u = c.toReference,
                    l = c.canRead;
                return {
                    args: argsFromFieldSpecifier(r),
                    field: r.field || null,
                    fieldName: a,
                    storeFieldName: o,
                    variables: s,
                    isReference: y.Yk,
                    toReference: u,
                    storage: i,
                    cache: e.cache,
                    canRead: l,
                    readField: function() {
                        return e.readField(normalizeReadFieldOptions(arguments, t, s), n)
                    },
                    mergeObjects: makeMergeObjectsFunction(n.store)
                }
            }

            function normalizeReadFieldOptions(e, t, r) {
                var n, i = e[0],
                    s = e[1],
                    c = e.length;
                return "string" == typeof i ? n = {
                    fieldName: i,
                    from: c > 1 ? s : t
                } : (n = (0, o.__assign)({}, i), F.call(n, "from") || (n.from = t)), !1 !== globalThis.__DEV__ && void 0 === n.from && !1 !== globalThis.__DEV__ && a.kG.warn(7, (0, X.v)(Array.from(e))), void 0 === n.variables && (n.variables = r), n
            }

            function makeMergeObjectsFunction(e) {
                return function(t, r) {
                    if ((0, B.k)(t) || (0, B.k)(r)) throw (0, a._K)(8);
                    if ((0, A.s)(t) && (0, A.s)(r)) {
                        var n = e.getFieldValue(t, "__typename"),
                            i = e.getFieldValue(r, "__typename");
                        if (n && i && n !== i) return r;
                        if ((0, y.Yk)(t) && storeValueIsStoreObject(r)) return e.merge(t.__ref, r), t;
                        if (storeValueIsStoreObject(t) && (0, y.Yk)(r)) return e.merge(t, r.__ref), r;
                        if (storeValueIsStoreObject(t) && storeValueIsStoreObject(r)) return (0, o.__assign)((0, o.__assign)({}, t), r)
                    }
                    return r
                }
            }

            function getContextFlavor(e, t, r) {
                var n = "".concat(t).concat(r),
                    i = e.flavors.get(n);
                return i || e.flavors.set(n, i = e.clientOnly === t && e.deferred === r ? e : (0, o.__assign)((0, o.__assign)({}, e), {
                    clientOnly: t,
                    deferred: r
                })), i
            }
            var eo = function() {
                    function StoreWriter(e, t, r) {
                        this.cache = e, this.reader = t, this.fragments = r
                    }
                    return StoreWriter.prototype.writeToStore = function(e, t) {
                        var r = this,
                            n = t.query,
                            i = t.result,
                            s = t.dataId,
                            u = t.variables,
                            l = t.overwrite,
                            d = (0, _.$H)(n),
                            f = new P.w0;
                        u = (0, o.__assign)((0, o.__assign)({}, (0, _.O4)(d)), u);
                        var p = (0, o.__assign)((0, o.__assign)({
                                store: e,
                                written: Object.create(null),
                                merge: function(e, t) {
                                    return f.merge(e, t)
                                },
                                variables: u,
                                varString: (0, K.B)(u)
                            }, extractFragmentContext(n, this.fragments)), {
                                overwrite: !!l,
                                incomingById: new Map,
                                clientOnly: !1,
                                deferred: !1,
                                flavors: new Map
                            }),
                            g = this.processSelectionSet({
                                result: i || Object.create(null),
                                dataId: s,
                                selectionSet: d.selectionSet,
                                mergeTree: {
                                    map: new Map
                                },
                                context: p
                            });
                        if (!(0, y.Yk)(g)) throw (0, a._K)(11, i);
                        return p.incomingById.forEach(function(t, n) {
                            var i = t.storeObject,
                                o = t.mergeTree,
                                s = t.fieldNodeSet,
                                u = (0, y.kQ)(n);
                            if (o && o.map.size) {
                                var l = r.applyMerges(o, u, i, p);
                                if ((0, y.Yk)(l)) return;
                                i = l
                            }
                            if (!1 !== globalThis.__DEV__ && !p.overwrite) {
                                var d = Object.create(null);
                                s.forEach(function(e) {
                                    e.selectionSet && (d[e.name.value] = !0)
                                });
                                var hasMergeFunction_1 = function(e) {
                                    var t = o && o.map.get(e);
                                    return !!(t && t.info && t.info.merge)
                                };
                                Object.keys(i).forEach(function(e) {
                                    !0 !== d[fieldNameFromStoreName(e)] || hasMergeFunction_1(e) || function(e, t, r, n) {
                                        var getChild = function(e) {
                                                var t = n.getFieldValue(e, r);
                                                return "object" == typeof t && t
                                            },
                                            i = getChild(e);
                                        if (i) {
                                            var o = getChild(t);
                                            if (!(!o || (0, y.Yk)(i) || (0, c.D)(i, o) || Object.keys(i).every(function(e) {
                                                    return void 0 !== n.getFieldValue(o, e)
                                                }))) {
                                                var s = n.getFieldValue(e, "__typename") || n.getFieldValue(t, "__typename"),
                                                    u = fieldNameFromStoreName(r),
                                                    l = "".concat(s, ".").concat(u);
                                                if (!es.has(l)) {
                                                    es.add(l);
                                                    var d = [];
                                                    (0, B.k)(i) || (0, B.k)(o) || [i, o].forEach(function(e) {
                                                        var t = n.getFieldValue(e, "__typename");
                                                        "string" != typeof t || d.includes(t) || d.push(t)
                                                    }), !1 !== globalThis.__DEV__ && a.kG.warn(14, u, s, d.length ? "either ensure all objects of type " + d.join(" and ") + " have an ID or a custom merge function, or " : "", l, i, o)
                                                }
                                            }
                                        }
                                    }(u, i, e, p.store)
                                })
                            }
                            e.merge(n, i)
                        }), e.retain(g.__ref), g
                    }, StoreWriter.prototype.processSelectionSet = function(e) {
                        var t = this,
                            r = e.dataId,
                            n = e.result,
                            i = e.selectionSet,
                            s = e.context,
                            c = e.mergeTree,
                            u = this.cache.policies,
                            l = Object.create(null),
                            d = r && u.rootTypenamesById[r] || (0, y.qw)(n, i, s.fragmentMap) || r && s.store.get(r, "__typename");
                        "string" == typeof d && (l.__typename = d);
                        var readField = function() {
                                var e = normalizeReadFieldOptions(arguments, l, s.variables);
                                if ((0, y.Yk)(e.from)) {
                                    var t = s.incomingById.get(e.from.__ref);
                                    if (t) {
                                        var r = u.readField((0, o.__assign)((0, o.__assign)({}, e), {
                                            from: t.storeObject
                                        }), s);
                                        if (void 0 !== r) return r
                                    }
                                }
                                return u.readField(e, s)
                            },
                            f = new Set;
                        this.flattenFields(i, n, s, d).forEach(function(e, r) {
                            var i, o = n[(0, y.u2)(r)];
                            if (f.add(r), void 0 !== o) {
                                var s = u.getStoreFieldName({
                                        typename: d,
                                        fieldName: r.name.value,
                                        field: r,
                                        variables: e.variables
                                    }),
                                    g = getChildMergeTree(c, s),
                                    v = t.processFieldValue(o, r, r.selectionSet ? getContextFlavor(e, !1, !1) : e, g),
                                    E = void 0;
                                r.selectionSet && ((0, y.Yk)(v) || storeValueIsStoreObject(v)) && (E = readField("__typename", v));
                                var _ = u.getMergeFunction(d, r.name.value, E);
                                _ ? g.info = {
                                    field: r,
                                    typename: d,
                                    merge: _
                                } : maybeRecycleChildMergeTree(c, s), l = e.merge(l, ((i = {})[s] = v, i))
                            } else !1 === globalThis.__DEV__ || e.clientOnly || e.deferred || p.Gw.added(r) || u.getReadFunction(d, r.name.value) || !1 === globalThis.__DEV__ || a.kG.error(12, (0, y.u2)(r), n)
                        });
                        try {
                            var g = u.identify(n, {
                                    typename: d,
                                    selectionSet: i,
                                    fragmentMap: s.fragmentMap,
                                    storeObject: l,
                                    readField: readField
                                }),
                                v = g[0],
                                E = g[1];
                            r = r || v, E && (l = s.merge(l, E))
                        } catch (e) {
                            if (!r) throw e
                        }
                        if ("string" == typeof r) {
                            var _ = (0, y.kQ)(r),
                                P = s.written[r] || (s.written[r] = []);
                            if (P.indexOf(i) >= 0 || (P.push(i), this.reader && this.reader.isFresh(n, _, i, s))) return _;
                            var T = s.incomingById.get(r);
                            return T ? (T.storeObject = s.merge(T.storeObject, l), T.mergeTree = function mergeMergeTrees(e, t) {
                                if (e === t || !t || mergeTreeIsEmpty(t)) return e;
                                if (!e || mergeTreeIsEmpty(e)) return t;
                                var r = e.info && t.info ? (0, o.__assign)((0, o.__assign)({}, e.info), t.info) : e.info || t.info,
                                    n = e.map.size && t.map.size,
                                    i = {
                                        info: r,
                                        map: n ? new Map : e.map.size ? e.map : t.map
                                    };
                                if (n) {
                                    var a = new Set(t.map.keys());
                                    e.map.forEach(function(e, r) {
                                        i.map.set(r, mergeMergeTrees(e, t.map.get(r))), a.delete(r)
                                    }), a.forEach(function(r) {
                                        i.map.set(r, mergeMergeTrees(t.map.get(r), e.map.get(r)))
                                    })
                                }
                                return i
                            }(T.mergeTree, c), f.forEach(function(e) {
                                return T.fieldNodeSet.add(e)
                            })) : s.incomingById.set(r, {
                                storeObject: l,
                                mergeTree: mergeTreeIsEmpty(c) ? void 0 : c,
                                fieldNodeSet: f
                            }), _
                        }
                        return l
                    }, StoreWriter.prototype.processFieldValue = function(e, t, r, n) {
                        var i = this;
                        return t.selectionSet && null !== e ? (0, B.k)(e) ? e.map(function(e, o) {
                            var a = i.processFieldValue(e, t, r, getChildMergeTree(n, o));
                            return maybeRecycleChildMergeTree(n, o), a
                        }) : this.processSelectionSet({
                            result: e,
                            selectionSet: t.selectionSet,
                            context: r,
                            mergeTree: n
                        }) : !1 !== globalThis.__DEV__ ? (0, J.X)(e) : e
                    }, StoreWriter.prototype.flattenFields = function(e, t, r, n) {
                        void 0 === n && (n = (0, y.qw)(t, e, r.fragmentMap));
                        var i = new Map,
                            o = this.cache.policies,
                            s = new M.B(!1);
                        return function flatten(e, c) {
                            var l = s.lookup(e, c.clientOnly, c.deferred);
                            l.visited || (l.visited = !0, e.selections.forEach(function(e) {
                                if ((0, T.LZ)(e, r.variables)) {
                                    var s = c.clientOnly,
                                        l = c.deferred;
                                    if (!(s && l) && (0, B.O)(e.directives) && e.directives.forEach(function(e) {
                                            var t = e.name.value;
                                            if ("client" === t && (s = !0), "defer" === t) {
                                                var n = (0, y.NC)(e, r.variables);
                                                n && !1 === n.if || (l = !0)
                                            }
                                        }), (0, y.My)(e)) {
                                        var d = i.get(e);
                                        d && (s = s && d.clientOnly, l = l && d.deferred), i.set(e, getContextFlavor(r, s, l))
                                    } else {
                                        var f = (0, u.hi)(e, r.lookupFragment);
                                        if (!f && e.kind === g.h.FRAGMENT_SPREAD) throw (0, a._K)(13, e.name.value);
                                        f && o.fragmentMatches(f, n, t, r.variables) && flatten(f.selectionSet, getContextFlavor(r, s, l))
                                    }
                                }
                            }))
                        }(e, r), i
                    }, StoreWriter.prototype.applyMerges = function(e, t, r, n, i) {
                        var s = this;
                        if (e.map.size && !(0, y.Yk)(r)) {
                            var c, u, l = !(0, B.k)(r) && ((0, y.Yk)(t) || storeValueIsStoreObject(t)) ? t : void 0,
                                d = r;
                            l && !i && (i = [(0, y.Yk)(l) ? l.__ref : l]);
                            var getValue_1 = function(e, t) {
                                return (0, B.k)(e) ? "number" == typeof t ? e[t] : void 0 : n.store.getFieldValue(e, String(t))
                            };
                            e.map.forEach(function(e, t) {
                                var r = getValue_1(l, t),
                                    o = getValue_1(d, t);
                                if (void 0 !== o) {
                                    i && i.push(t);
                                    var c = s.applyMerges(e, r, o, n, i);
                                    c !== o && (u = u || new Map).set(t, c), i && (0, a.kG)(i.pop() === t)
                                }
                            }), u && (r = (0, B.k)(d) ? d.slice(0) : (0, o.__assign)({}, d), u.forEach(function(e, t) {
                                r[t] = e
                            }))
                        }
                        return e.info ? this.cache.policies.runMergeFunction(t, r, e.info, n, i && (c = n.store).getStorage.apply(c, i)) : r
                    }, StoreWriter
                }(),
                ea = [];

            function getChildMergeTree(e, t) {
                var r = e.map;
                return r.has(t) || r.set(t, ea.pop() || {
                    map: new Map
                }), r.get(t)
            }

            function mergeTreeIsEmpty(e) {
                return !e || !(e.info || e.map.size)
            }

            function maybeRecycleChildMergeTree(e, t) {
                var r = e.map,
                    n = r.get(t);
                n && mergeTreeIsEmpty(n) && (ea.push(n), r.delete(t))
            }
            var es = new Set,
                ec = function(e) {
                    function InMemoryCache(t) {
                        void 0 === t && (t = {});
                        var r, n = e.call(this) || this;
                        return n.watches = new Set, n.addTypenameTransform = new f.A(p.Gw), n.assumeImmutableResults = !0, n.makeVar = er.QS, n.txCount = 0, n.config = (r = t, (0, E.o)(N, r)), n.addTypename = !!n.config.addTypename, n.policies = new ei({
                            cache: n,
                            dataIdFromObject: n.config.dataIdFromObject,
                            possibleTypes: n.config.possibleTypes,
                            typePolicies: n.config.typePolicies
                        }), n.init(), n
                    }
                    return (0, o.__extends)(InMemoryCache, e), InMemoryCache.prototype.init = function() {
                        var e = this.data = new G.Root({
                            policies: this.policies,
                            resultCaching: this.config.resultCaching
                        });
                        this.optimisticData = e.stump, this.resetResultCache()
                    }, InMemoryCache.prototype.resetResultCache = function(e) {
                        var t = this,
                            r = this.storeReader,
                            n = this.config.fragments;
                        this.storeWriter = new eo(this, this.storeReader = new Y({
                            cache: this,
                            addTypename: this.addTypename,
                            resultCacheMaxSize: this.config.resultCacheMaxSize,
                            canonizeResults: shouldCanonizeResults(this.config),
                            canon: e ? void 0 : r && r.canon,
                            fragments: n
                        }), n), this.maybeBroadcastWatch = (0, s.re)(function(e, r) {
                            return t.broadcastWatch(e, r)
                        }, {
                            max: this.config.resultCacheMaxSize,
                            makeCacheKey: function(e) {
                                var r = e.optimistic ? t.optimisticData : t.data;
                                if (supportsResultCaching(r)) {
                                    var n = e.optimistic,
                                        i = e.id,
                                        o = e.variables;
                                    return r.makeCacheKey(e.query, e.callback, (0, K.B)({
                                        optimistic: n,
                                        id: i,
                                        variables: o
                                    }))
                                }
                            }
                        }), new Set([this.data.group, this.optimisticData.group]).forEach(function(e) {
                            return e.resetCaching()
                        })
                    }, InMemoryCache.prototype.restore = function(e) {
                        return this.init(), e && this.data.replace(e), this
                    }, InMemoryCache.prototype.extract = function(e) {
                        return void 0 === e && (e = !1), (e ? this.optimisticData : this.data).extract()
                    }, InMemoryCache.prototype.read = function(e) {
                        var t = e.returnPartialData;
                        try {
                            return this.storeReader.diffQueryAgainstStore((0, o.__assign)((0, o.__assign)({}, e), {
                                store: e.optimistic ? this.optimisticData : this.data,
                                config: this.config,
                                returnPartialData: void 0 !== t && t
                            })).result || null
                        } catch (e) {
                            if (e instanceof d) return null;
                            throw e
                        }
                    }, InMemoryCache.prototype.write = function(e) {
                        try {
                            return ++this.txCount, this.storeWriter.writeToStore(this.data, e)
                        } finally {
                            --this.txCount || !1 === e.broadcast || this.broadcastWatches()
                        }
                    }, InMemoryCache.prototype.modify = function(e) {
                        if (F.call(e, "id") && !e.id) return !1;
                        var t = e.optimistic ? this.optimisticData : this.data;
                        try {
                            return ++this.txCount, t.modify(e.id || "ROOT_QUERY", e.fields)
                        } finally {
                            --this.txCount || !1 === e.broadcast || this.broadcastWatches()
                        }
                    }, InMemoryCache.prototype.diff = function(e) {
                        return this.storeReader.diffQueryAgainstStore((0, o.__assign)((0, o.__assign)({}, e), {
                            store: e.optimistic ? this.optimisticData : this.data,
                            rootId: e.id || "ROOT_QUERY",
                            config: this.config
                        }))
                    }, InMemoryCache.prototype.watch = function(e) {
                        var t = this;
                        return this.watches.size || (0, er._v)(this), this.watches.add(e), e.immediate && this.maybeBroadcastWatch(e),
                            function() {
                                t.watches.delete(e) && !t.watches.size && (0, er.li)(t), t.maybeBroadcastWatch.forget(e)
                            }
                    }, InMemoryCache.prototype.gc = function(e) {
                        K.B.reset();
                        var t = this.optimisticData.gc();
                        return e && !this.txCount && (e.resetResultCache ? this.resetResultCache(e.resetResultIdentities) : e.resetResultIdentities && this.storeReader.resetCanon()), t
                    }, InMemoryCache.prototype.retain = function(e, t) {
                        return (t ? this.optimisticData : this.data).retain(e)
                    }, InMemoryCache.prototype.release = function(e, t) {
                        return (t ? this.optimisticData : this.data).release(e)
                    }, InMemoryCache.prototype.identify = function(e) {
                        if ((0, y.Yk)(e)) return e.__ref;
                        try {
                            return this.policies.identify(e)[0]
                        } catch (e) {
                            !1 !== globalThis.__DEV__ && a.kG.warn(e)
                        }
                    }, InMemoryCache.prototype.evict = function(e) {
                        if (!e.id) {
                            if (F.call(e, "id")) return !1;
                            e = (0, o.__assign)((0, o.__assign)({}, e), {
                                id: "ROOT_QUERY"
                            })
                        }
                        try {
                            return ++this.txCount, this.optimisticData.evict(e, this.data)
                        } finally {
                            --this.txCount || !1 === e.broadcast || this.broadcastWatches()
                        }
                    }, InMemoryCache.prototype.reset = function(e) {
                        var t = this;
                        return this.init(), K.B.reset(), e && e.discardWatches ? (this.watches.forEach(function(e) {
                            return t.maybeBroadcastWatch.forget(e)
                        }), this.watches.clear(), (0, er.li)(this)) : this.broadcastWatches(), Promise.resolve()
                    }, InMemoryCache.prototype.removeOptimistic = function(e) {
                        var t = this.optimisticData.removeLayer(e);
                        t !== this.optimisticData && (this.optimisticData = t, this.broadcastWatches())
                    }, InMemoryCache.prototype.batch = function(e) {
                        var t, r = this,
                            n = e.update,
                            i = e.optimistic,
                            a = void 0 === i || i,
                            s = e.removeOptimistic,
                            c = e.onWatchUpdated,
                            perform = function(e) {
                                var i = r.data,
                                    o = r.optimisticData;
                                ++r.txCount, e && (r.data = r.optimisticData = e);
                                try {
                                    return t = n(r)
                                } finally {
                                    --r.txCount, r.data = i, r.optimisticData = o
                                }
                            },
                            u = new Set;
                        return c && !this.txCount && this.broadcastWatches((0, o.__assign)((0, o.__assign)({}, e), {
                            onWatchUpdated: function(e) {
                                return u.add(e), !1
                            }
                        })), "string" == typeof a ? this.optimisticData = this.optimisticData.addLayer(a, perform) : !1 === a ? perform(this.data) : perform(), "string" == typeof s && (this.optimisticData = this.optimisticData.removeLayer(s)), c && u.size ? (this.broadcastWatches((0, o.__assign)((0, o.__assign)({}, e), {
                            onWatchUpdated: function(e, t) {
                                var r = c.call(this, e, t);
                                return !1 !== r && u.delete(e), r
                            }
                        })), u.size && u.forEach(function(e) {
                            return r.maybeBroadcastWatch.dirty(e)
                        })) : this.broadcastWatches(e), t
                    }, InMemoryCache.prototype.performTransaction = function(e, t) {
                        return this.batch({
                            update: e,
                            optimistic: t || null !== t
                        })
                    }, InMemoryCache.prototype.transformDocument = function(e) {
                        return this.addTypenameToDocument(this.addFragmentsToDocument(e))
                    }, InMemoryCache.prototype.broadcastWatches = function(e) {
                        var t = this;
                        this.txCount || this.watches.forEach(function(r) {
                            return t.maybeBroadcastWatch(r, e)
                        })
                    }, InMemoryCache.prototype.addFragmentsToDocument = function(e) {
                        var t = this.config.fragments;
                        return t ? t.transform(e) : e
                    }, InMemoryCache.prototype.addTypenameToDocument = function(e) {
                        return this.addTypename ? this.addTypenameTransform.transformDocument(e) : e
                    }, InMemoryCache.prototype.broadcastWatch = function(e, t) {
                        var r = e.lastDiff,
                            n = this.diff(e);
                        (!t || (e.optimistic && "string" == typeof t.optimistic && (n.fromOptimisticTransaction = !0), !t.onWatchUpdated || !1 !== t.onWatchUpdated.call(this, e, n, r))) && (r && (0, c.D)(r.result, n.result) || e.callback(e.lastDiff = n, r))
                    }, InMemoryCache
                }(l)
        },
        69165: function(e, t, r) {
            "use strict";
            r.d(t, {
                B: function() {
                    return d
                },
                h: function() {
                    return l
                }
            });
            var n, i, o = r(50044),
                a = r(12913),
                s = r(88550),
                c = r(38191),
                u = r(28607),
                l = function() {
                    function ObjectCanon() {
                        this.known = new(c.sy ? WeakSet : Set), this.pool = new a.B(c.mr), this.passes = new WeakMap, this.keysByJSON = new Map, this.empty = this.admit({})
                    }
                    return ObjectCanon.prototype.isKnown = function(e) {
                        return (0, s.s)(e) && this.known.has(e)
                    }, ObjectCanon.prototype.pass = function(e) {
                        if ((0, s.s)(e)) {
                            var t = (0, s.s)(e) ? (0, u.k)(e) ? e.slice(0) : (0, o.__assign)({
                                __proto__: Object.getPrototypeOf(e)
                            }, e) : e;
                            return this.passes.set(t, e), t
                        }
                        return e
                    }, ObjectCanon.prototype.admit = function(e) {
                        var t = this;
                        if ((0, s.s)(e)) {
                            var r = this.passes.get(e);
                            if (r) return r;
                            switch (Object.getPrototypeOf(e)) {
                                case Array.prototype:
                                    if (this.known.has(e)) break;
                                    var n = e.map(this.admit, this),
                                        i = this.pool.lookupArray(n);
                                    return i.array || (this.known.add(i.array = n), !1 !== globalThis.__DEV__ && Object.freeze(n)), i.array;
                                case null:
                                case Object.prototype:
                                    if (this.known.has(e)) break;
                                    var o = Object.getPrototypeOf(e),
                                        a = [o],
                                        c = this.sortedKeys(e);
                                    a.push(c.json);
                                    var u = a.length;
                                    c.sorted.forEach(function(r) {
                                        a.push(t.admit(e[r]))
                                    });
                                    var i = this.pool.lookupArray(a);
                                    if (!i.object) {
                                        var l = i.object = Object.create(o);
                                        this.known.add(l), c.sorted.forEach(function(e, t) {
                                            l[e] = a[u + t]
                                        }), !1 !== globalThis.__DEV__ && Object.freeze(l)
                                    }
                                    return i.object
                            }
                        }
                        return e
                    }, ObjectCanon.prototype.sortedKeys = function(e) {
                        var t = Object.keys(e),
                            r = this.pool.lookupArray(t);
                        if (!r.keys) {
                            t.sort();
                            var n = JSON.stringify(t);
                            (r.keys = this.keysByJSON.get(n)) || this.keysByJSON.set(n, r.keys = {
                                sorted: t,
                                json: n
                            })
                        }
                        return r.keys
                    }, ObjectCanon
                }(),
                d = Object.assign(function(e) {
                    if ((0, s.s)(e)) {
                        void 0 === n && resetCanonicalStringify();
                        var t = n.admit(e),
                            r = i.get(t);
                        return void 0 === r && i.set(t, r = JSON.stringify(t)), r
                    }
                    return JSON.stringify(e)
                }, {
                    reset: resetCanonicalStringify
                });

            function resetCanonicalStringify() {
                n = new l, i = new(c.mr ? WeakMap : Map)
            }
        },
        86048: function(e, t, r) {
            "use strict";
            r.d(t, {
                QS: function() {
                    return makeVar
                },
                _v: function() {
                    return recallCache
                },
                ab: function() {
                    return i
                },
                li: function() {
                    return forgetCache
                }
            });
            var n = r(50905),
                i = new n.g7,
                o = new WeakMap;

            function getCacheInfo(e) {
                var t = o.get(e);
                return t || o.set(e, t = {
                    vars: new Set,
                    dep: (0, n.dP)()
                }), t
            }

            function forgetCache(e) {
                getCacheInfo(e).vars.forEach(function(t) {
                    return t.forgetCache(e)
                })
            }

            function recallCache(e) {
                getCacheInfo(e).vars.forEach(function(t) {
                    return t.attachCache(e)
                })
            }

            function makeVar(e) {
                var t = new Set,
                    r = new Set,
                    rv = function(o) {
                        if (arguments.length > 0) {
                            if (e !== o) {
                                e = o, t.forEach(function(e) {
                                    getCacheInfo(e).dep.dirty(rv), e.broadcastWatches && e.broadcastWatches()
                                });
                                var a = Array.from(r);
                                r.clear(), a.forEach(function(t) {
                                    return t(e)
                                })
                            }
                        } else {
                            var s = i.getValue();
                            s && (n(s), getCacheInfo(s).dep(rv))
                        }
                        return e
                    };
                rv.onNextChange = function(e) {
                    return r.add(e),
                        function() {
                            r.delete(e)
                        }
                };
                var n = rv.attachCache = function(e) {
                    return t.add(e), getCacheInfo(e).vars.add(rv), rv
                };
                return rv.forgetCache = function(e) {
                    return t.delete(e)
                }, rv
            }
        },
        74118: function(e, t, r) {
            "use strict";
            r.d(t, {
                f: function() {
                    return eg
                }
            });
            var n = r(50044),
                i = r(17143);

            function _arrayLikeToArray(e, t) {
                (null == t || t > e.length) && (t = e.length);
                for (var r = 0, n = Array(t); r < t; r++) n[r] = e[r];
                return n
            }

            function _defineProperties(e, t) {
                for (var r = 0; r < t.length; r++) {
                    var n = t[r];
                    n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n)
                }
            }

            function _createClass(e, t, r) {
                return t && _defineProperties(e.prototype, t), r && _defineProperties(e, r), Object.defineProperty(e, "prototype", {
                    writable: !1
                }), e
            }
            var hasSymbols = function() {
                    return "function" == typeof Symbol
                },
                hasSymbol = function(e) {
                    return hasSymbols() && !!Symbol[e]
                },
                getSymbol = function(e) {
                    return hasSymbol(e) ? Symbol[e] : "@@" + e
                };
            hasSymbols() && !hasSymbol("observable") && (Symbol.observable = Symbol("observable"));
            var o = getSymbol("iterator"),
                a = getSymbol("observable"),
                s = getSymbol("species");

            function getMethod(e, t) {
                var r = e[t];
                if (null != r) {
                    if ("function" != typeof r) throw TypeError(r + " is not a function");
                    return r
                }
            }

            function getSpecies(e) {
                var t = e.constructor;
                return void 0 !== t && null === (t = t[s]) && (t = void 0), void 0 !== t ? t : l
            }

            function hostReportError(e) {
                hostReportError.log ? hostReportError.log(e) : setTimeout(function() {
                    throw e
                })
            }

            function enqueue(e) {
                Promise.resolve().then(function() {
                    try {
                        e()
                    } catch (e) {
                        hostReportError(e)
                    }
                })
            }

            function cleanupSubscription(e) {
                var t = e._cleanup;
                if (void 0 !== t) {
                    if (e._cleanup = void 0, !t) return;
                    try {
                        if ("function" == typeof t) t();
                        else {
                            var r = getMethod(t, "unsubscribe");
                            r && r.call(t)
                        }
                    } catch (e) {
                        hostReportError(e)
                    }
                }
            }

            function closeSubscription(e) {
                e._observer = void 0, e._queue = void 0, e._state = "closed"
            }

            function notifySubscription(e, t, r) {
                e._state = "running";
                var n = e._observer;
                try {
                    var i = getMethod(n, t);
                    switch (t) {
                        case "next":
                            i && i.call(n, r);
                            break;
                        case "error":
                            if (closeSubscription(e), i) i.call(n, r);
                            else throw r;
                            break;
                        case "complete":
                            closeSubscription(e), i && i.call(n)
                    }
                } catch (e) {
                    hostReportError(e)
                }
                "closed" === e._state ? cleanupSubscription(e) : "running" === e._state && (e._state = "ready")
            }

            function onNotify(e, t, r) {
                if ("closed" !== e._state) {
                    if ("buffering" === e._state) {
                        e._queue.push({
                            type: t,
                            value: r
                        });
                        return
                    }
                    if ("ready" !== e._state) {
                        e._state = "buffering", e._queue = [{
                            type: t,
                            value: r
                        }], enqueue(function() {
                            return function(e) {
                                var t = e._queue;
                                if (t) {
                                    e._queue = void 0, e._state = "ready";
                                    for (var r = 0; r < t.length && (notifySubscription(e, t[r].type, t[r].value), "closed" !== e._state); ++r);
                                }
                            }(e)
                        });
                        return
                    }
                    notifySubscription(e, t, r)
                }
            }
            var c = function() {
                    function Subscription(e, t) {
                        this._cleanup = void 0, this._observer = e, this._queue = void 0, this._state = "initializing";
                        var r = new u(this);
                        try {
                            this._cleanup = t.call(void 0, r)
                        } catch (e) {
                            r.error(e)
                        }
                        "initializing" === this._state && (this._state = "ready")
                    }
                    return Subscription.prototype.unsubscribe = function() {
                        "closed" !== this._state && (closeSubscription(this), cleanupSubscription(this))
                    }, _createClass(Subscription, [{
                        key: "closed",
                        get: function() {
                            return "closed" === this._state
                        }
                    }]), Subscription
                }(),
                u = function() {
                    function SubscriptionObserver(e) {
                        this._subscription = e
                    }
                    var e = SubscriptionObserver.prototype;
                    return e.next = function(e) {
                        onNotify(this._subscription, "next", e)
                    }, e.error = function(e) {
                        onNotify(this._subscription, "error", e)
                    }, e.complete = function() {
                        onNotify(this._subscription, "complete")
                    }, _createClass(SubscriptionObserver, [{
                        key: "closed",
                        get: function() {
                            return "closed" === this._subscription._state
                        }
                    }]), SubscriptionObserver
                }(),
                l = function() {
                    function Observable(e) {
                        if (!(this instanceof Observable)) throw TypeError("Observable cannot be called as a function");
                        if ("function" != typeof e) throw TypeError("Observable initializer must be a function");
                        this._subscriber = e
                    }
                    var e = Observable.prototype;
                    return e.subscribe = function(e) {
                        return ("object" != typeof e || null === e) && (e = {
                            next: e,
                            error: arguments[1],
                            complete: arguments[2]
                        }), new c(e, this._subscriber)
                    }, e.forEach = function(e) {
                        var t = this;
                        return new Promise(function(r, n) {
                            if ("function" != typeof e) {
                                n(TypeError(e + " is not a function"));
                                return
                            }

                            function done() {
                                i.unsubscribe(), r()
                            }
                            var i = t.subscribe({
                                next: function(t) {
                                    try {
                                        e(t, done)
                                    } catch (e) {
                                        n(e), i.unsubscribe()
                                    }
                                },
                                error: n,
                                complete: r
                            })
                        })
                    }, e.map = function(e) {
                        var t = this;
                        if ("function" != typeof e) throw TypeError(e + " is not a function");
                        return new(getSpecies(this))(function(r) {
                            return t.subscribe({
                                next: function(t) {
                                    try {
                                        t = e(t)
                                    } catch (e) {
                                        return r.error(e)
                                    }
                                    r.next(t)
                                },
                                error: function(e) {
                                    r.error(e)
                                },
                                complete: function() {
                                    r.complete()
                                }
                            })
                        })
                    }, e.filter = function(e) {
                        var t = this;
                        if ("function" != typeof e) throw TypeError(e + " is not a function");
                        return new(getSpecies(this))(function(r) {
                            return t.subscribe({
                                next: function(t) {
                                    try {
                                        if (!e(t)) return
                                    } catch (e) {
                                        return r.error(e)
                                    }
                                    r.next(t)
                                },
                                error: function(e) {
                                    r.error(e)
                                },
                                complete: function() {
                                    r.complete()
                                }
                            })
                        })
                    }, e.reduce = function(e) {
                        var t = this;
                        if ("function" != typeof e) throw TypeError(e + " is not a function");
                        var r = getSpecies(this),
                            n = arguments.length > 1,
                            i = !1,
                            o = arguments[1],
                            a = o;
                        return new r(function(r) {
                            return t.subscribe({
                                next: function(t) {
                                    var o = !i;
                                    if (i = !0, !o || n) try {
                                        a = e(a, t)
                                    } catch (e) {
                                        return r.error(e)
                                    } else a = t
                                },
                                error: function(e) {
                                    r.error(e)
                                },
                                complete: function() {
                                    if (!i && !n) return r.error(TypeError("Cannot reduce an empty sequence"));
                                    r.next(a), r.complete()
                                }
                            })
                        })
                    }, e.concat = function() {
                        for (var e = this, t = arguments.length, r = Array(t), n = 0; n < t; n++) r[n] = arguments[n];
                        var i = getSpecies(this);
                        return new i(function(t) {
                            var n, o = 0;
                            return function startNext(e) {
                                    n = e.subscribe({
                                        next: function(e) {
                                            t.next(e)
                                        },
                                        error: function(e) {
                                            t.error(e)
                                        },
                                        complete: function() {
                                            o === r.length ? (n = void 0, t.complete()) : startNext(i.from(r[o++]))
                                        }
                                    })
                                }(e),
                                function() {
                                    n && (n.unsubscribe(), n = void 0)
                                }
                        })
                    }, e.flatMap = function(e) {
                        var t = this;
                        if ("function" != typeof e) throw TypeError(e + " is not a function");
                        var r = getSpecies(this);
                        return new r(function(n) {
                            var i = [],
                                o = t.subscribe({
                                    next: function(t) {
                                        if (e) try {
                                            t = e(t)
                                        } catch (e) {
                                            return n.error(e)
                                        }
                                        var o = r.from(t).subscribe({
                                            next: function(e) {
                                                n.next(e)
                                            },
                                            error: function(e) {
                                                n.error(e)
                                            },
                                            complete: function() {
                                                var e = i.indexOf(o);
                                                e >= 0 && i.splice(e, 1), completeIfDone()
                                            }
                                        });
                                        i.push(o)
                                    },
                                    error: function(e) {
                                        n.error(e)
                                    },
                                    complete: function() {
                                        completeIfDone()
                                    }
                                });

                            function completeIfDone() {
                                o.closed && 0 === i.length && n.complete()
                            }
                            return function() {
                                i.forEach(function(e) {
                                    return e.unsubscribe()
                                }), o.unsubscribe()
                            }
                        })
                    }, e[a] = function() {
                        return this
                    }, Observable.from = function(e) {
                        var t = "function" == typeof this ? this : Observable;
                        if (null == e) throw TypeError(e + " is not an object");
                        var r = getMethod(e, a);
                        if (r) {
                            var n = r.call(e);
                            if (Object(n) !== n) throw TypeError(n + " is not an object");
                            return n instanceof l && n.constructor === t ? n : new t(function(e) {
                                return n.subscribe(e)
                            })
                        }
                        if (hasSymbol("iterator") && (r = getMethod(e, o))) return new t(function(t) {
                            enqueue(function() {
                                if (!t.closed) {
                                    for (var n, i = function(e, t) {
                                            var r = "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
                                            if (r) return (r = r.call(e)).next.bind(r);
                                            if (Array.isArray(e) || (r = function(e, t) {
                                                    if (e) {
                                                        if ("string" == typeof e) return _arrayLikeToArray(e, t);
                                                        var r = Object.prototype.toString.call(e).slice(8, -1);
                                                        if ("Object" === r && e.constructor && (r = e.constructor.name), "Map" === r || "Set" === r) return Array.from(e);
                                                        if ("Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)) return _arrayLikeToArray(e, t)
                                                    }
                                                }(e))) {
                                                r && (e = r);
                                                var n = 0;
                                                return function() {
                                                    return n >= e.length ? {
                                                        done: !0
                                                    } : {
                                                        done: !1,
                                                        value: e[n++]
                                                    }
                                                }
                                            }
                                            throw TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                                        }(r.call(e)); !(n = i()).done;) {
                                        var o = n.value;
                                        if (t.next(o), t.closed) return
                                    }
                                    t.complete()
                                }
                            })
                        });
                        if (Array.isArray(e)) return new t(function(t) {
                            enqueue(function() {
                                if (!t.closed) {
                                    for (var r = 0; r < e.length; ++r)
                                        if (t.next(e[r]), t.closed) return;
                                    t.complete()
                                }
                            })
                        });
                        throw TypeError(e + " is not observable")
                    }, Observable.of = function() {
                        for (var e = arguments.length, t = Array(e), r = 0; r < e; r++) t[r] = arguments[r];
                        return new("function" == typeof this ? this : Observable)(function(e) {
                            enqueue(function() {
                                if (!e.closed) {
                                    for (var r = 0; r < t.length; ++r)
                                        if (e.next(t[r]), e.closed) return;
                                    e.complete()
                                }
                            })
                        })
                    }, _createClass(Observable, null, [{
                        key: s,
                        get: function() {
                            return this
                        }
                    }]), Observable
                }();
            hasSymbols() && Object.defineProperty(l, Symbol("extensions"), {
                value: {
                    symbol: a,
                    hostReportError: hostReportError
                },
                configurable: !0
            });
            var d = r(11739);

            function passthrough(e, t) {
                return t ? t(e) : l.of()
            }

            function toLink(e) {
                return "function" == typeof e ? new f(e) : e
            }

            function isTerminating(e) {
                return e.request.length <= 1
            }
            var f = function() {
                    function ApolloLink(e) {
                        e && (this.request = e)
                    }
                    return ApolloLink.empty = function() {
                        return new ApolloLink(function() {
                            return l.of()
                        })
                    }, ApolloLink.from = function(e) {
                        return 0 === e.length ? ApolloLink.empty() : e.map(toLink).reduce(function(e, t) {
                            return e.concat(t)
                        })
                    }, ApolloLink.split = function(e, t, r) {
                        var n = toLink(t),
                            i = toLink(r || new ApolloLink(passthrough));
                        return new ApolloLink(isTerminating(n) && isTerminating(i) ? function(t) {
                            return e(t) ? n.request(t) || l.of() : i.request(t) || l.of()
                        } : function(t, r) {
                            return e(t) ? n.request(t, r) || l.of() : i.request(t, r) || l.of()
                        })
                    }, ApolloLink.execute = function(e, t) {
                        var r, o, a, s;
                        return e.request((a = t.context, (o = {
                            variables: (r = function(e) {
                                for (var t = ["query", "operationName", "variables", "extensions", "context"], r = 0, n = Object.keys(e); r < n.length; r++) {
                                    var o = n[r];
                                    if (0 > t.indexOf(o)) throw (0, i._K)(43, o)
                                }
                                return e
                            }(t)).variables || {},
                            extensions: r.extensions || {},
                            operationName: r.operationName,
                            query: r.query
                        }).operationName || (o.operationName = "string" != typeof o.query ? (0, d.rY)(o.query) || void 0 : ""), s = (0, n.__assign)({}, a), Object.defineProperty(o, "setContext", {
                            enumerable: !1,
                            value: function(e) {
                                s = "function" == typeof e ? (0, n.__assign)((0, n.__assign)({}, s), e(s)) : (0, n.__assign)((0, n.__assign)({}, s), e)
                            }
                        }), Object.defineProperty(o, "getContext", {
                            enumerable: !1,
                            value: function() {
                                return (0, n.__assign)({}, s)
                            }
                        }), o)) || l.of()
                    }, ApolloLink.concat = function(e, t) {
                        var r = toLink(e);
                        if (isTerminating(r)) return !1 !== globalThis.__DEV__ && i.kG.warn(35, r), r;
                        var n = toLink(t);
                        return new ApolloLink(isTerminating(n) ? function(e) {
                            return r.request(e, function(e) {
                                return n.request(e) || l.of()
                            }) || l.of()
                        } : function(e, t) {
                            return r.request(e, function(e) {
                                return n.request(e, t) || l.of()
                            }) || l.of()
                        })
                    }, ApolloLink.prototype.split = function(e, t, r) {
                        return this.concat(ApolloLink.split(e, t, r || new ApolloLink(passthrough)))
                    }, ApolloLink.prototype.concat = function(e) {
                        return ApolloLink.concat(this, e)
                    }, ApolloLink.prototype.request = function(e, t) {
                        throw (0, i._K)(36)
                    }, ApolloLink.prototype.onError = function(e, t) {
                        if (t && t.error) return t.error(e), !1;
                        throw e
                    }, ApolloLink.prototype.setOnError = function(e) {
                        return this.onError = e, this
                    }, ApolloLink
                }(),
                p = f.execute,
                y = r(88776),
                g = r(85812),
                serializeFetchParameter = function(e, t) {
                    var r;
                    try {
                        r = JSON.stringify(e)
                    } catch (e) {
                        var n = (0, i._K)(39, t, e.message);
                        throw n.parseError = e, n
                    }
                    return r
                },
                v = r(38191);

            function readerIterator(e) {
                var t = {
                    next: function() {
                        return e.read()
                    }
                };
                return v.DN && (t[Symbol.asyncIterator] = function() {
                    return this
                }), t
            }
            var throwServerError = function(e, t, r) {
                    var n = Error(r);
                    throw n.name = "ServerError", n.response = e, n.statusCode = e.status, n.result = t, n
                },
                E = r(17205),
                _ = r(88550),
                P = r(28607),
                T = r(93592);

            function isExecutionPatchIncrementalResult(e) {
                return "incremental" in e
            }

            function mergeIncrementalData(e, t) {
                var r = e,
                    n = new T.w0;
                return isExecutionPatchIncrementalResult(t) && (0, P.O)(t.incremental) && t.incremental.forEach(function(e) {
                    for (var t = e.data, i = e.path, o = i.length - 1; o >= 0; --o) {
                        var a = i[o],
                            s = isNaN(+a) ? {} : [];
                        s[a] = t, t = s
                    }
                    r = n.merge(r, t)
                }), r
            }
            var x = Object.prototype.hasOwnProperty;

            function parseJsonBody(e, t) {
                e.status >= 300 && throwServerError(e, function() {
                    try {
                        return JSON.parse(t)
                    } catch (e) {
                        return t
                    }
                }(), "Response not successful: Received status code ".concat(e.status));
                try {
                    return JSON.parse(t)
                } catch (r) {
                    throw r.name = "ServerParseError", r.response = e, r.statusCode = e.status, r.bodyText = t, r
                }
            }
            var checkFetcher = function(e) {
                    if (!e && "undefined" == typeof fetch) throw (0, i._K)(37)
                },
                A = r(37063);
            let M = /[\x00-\x1f\x22\x5c\x7f-\x9f]/g;

            function escapedReplacer(e) {
                return B[e.charCodeAt(0)]
            }
            let B = ["\\u0000", "\\u0001", "\\u0002", "\\u0003", "\\u0004", "\\u0005", "\\u0006", "\\u0007", "\\b", "\\t", "\\n", "\\u000B", "\\f", "\\r", "\\u000E", "\\u000F", "\\u0010", "\\u0011", "\\u0012", "\\u0013", "\\u0014", "\\u0015", "\\u0016", "\\u0017", "\\u0018", "\\u0019", "\\u001A", "\\u001B", "\\u001C", "\\u001D", "\\u001E", "\\u001F", "", "", '\\"', "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "\\\\", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "\\u007F", "\\u0080", "\\u0081", "\\u0082", "\\u0083", "\\u0084", "\\u0085", "\\u0086", "\\u0087", "\\u0088", "\\u0089", "\\u008A", "\\u008B", "\\u008C", "\\u008D", "\\u008E", "\\u008F", "\\u0090", "\\u0091", "\\u0092", "\\u0093", "\\u0094", "\\u0095", "\\u0096", "\\u0097", "\\u0098", "\\u0099", "\\u009A", "\\u009B", "\\u009C", "\\u009D", "\\u009E", "\\u009F"];
            var F = r(34829);
            let N = {
                Name: {
                    leave: e => e.value
                },
                Variable: {
                    leave: e => "$" + e.name
                },
                Document: {
                    leave: e => join(e.definitions, "\n\n")
                },
                OperationDefinition: {
                    leave(e) {
                        let t = wrap("(", join(e.variableDefinitions, ", "), ")"),
                            r = join([e.operation, join([e.name, t]), join(e.directives, " ")], " ");
                        return ("query" === r ? "" : r + " ") + e.selectionSet
                    }
                },
                VariableDefinition: {
                    leave: ({
                        variable: e,
                        type: t,
                        defaultValue: r,
                        directives: n
                    }) => e + ": " + t + wrap(" = ", r) + wrap(" ", join(n, " "))
                },
                SelectionSet: {
                    leave: ({
                        selections: e
                    }) => block(e)
                },
                Field: {
                    leave({
                        alias: e,
                        name: t,
                        arguments: r,
                        directives: n,
                        selectionSet: i
                    }) {
                        let o = wrap("", e, ": ") + t,
                            a = o + wrap("(", join(r, ", "), ")");
                        return a.length > 80 && (a = o + wrap("(\n", indent(join(r, "\n")), "\n)")), join([a, join(n, " "), i], " ")
                    }
                },
                Argument: {
                    leave: ({
                        name: e,
                        value: t
                    }) => e + ": " + t
                },
                FragmentSpread: {
                    leave: ({
                        name: e,
                        directives: t
                    }) => "..." + e + wrap(" ", join(t, " "))
                },
                InlineFragment: {
                    leave: ({
                        typeCondition: e,
                        directives: t,
                        selectionSet: r
                    }) => join(["...", wrap("on ", e), join(t, " "), r], " ")
                },
                FragmentDefinition: {
                    leave: ({
                        name: e,
                        typeCondition: t,
                        variableDefinitions: r,
                        directives: n,
                        selectionSet: i
                    }) => `fragment ${e}${wrap("(",join(r,", "),")")} on ${t} ${wrap("",join(n," ")," ")}` + i
                },
                IntValue: {
                    leave: ({
                        value: e
                    }) => e
                },
                FloatValue: {
                    leave: ({
                        value: e
                    }) => e
                },
                StringValue: {
                    leave: ({
                        value: e,
                        block: t
                    }) => t ? (0, A.LZ)(e) : `"${e.replace(M,escapedReplacer)}"`
                },
                BooleanValue: {
                    leave: ({
                        value: e
                    }) => e ? "true" : "false"
                },
                NullValue: {
                    leave: () => "null"
                },
                EnumValue: {
                    leave: ({
                        value: e
                    }) => e
                },
                ListValue: {
                    leave: ({
                        values: e
                    }) => "[" + join(e, ", ") + "]"
                },
                ObjectValue: {
                    leave: ({
                        fields: e
                    }) => "{" + join(e, ", ") + "}"
                },
                ObjectField: {
                    leave: ({
                        name: e,
                        value: t
                    }) => e + ": " + t
                },
                Directive: {
                    leave: ({
                        name: e,
                        arguments: t
                    }) => "@" + e + wrap("(", join(t, ", "), ")")
                },
                NamedType: {
                    leave: ({
                        name: e
                    }) => e
                },
                ListType: {
                    leave: ({
                        type: e
                    }) => "[" + e + "]"
                },
                NonNullType: {
                    leave: ({
                        type: e
                    }) => e + "!"
                },
                SchemaDefinition: {
                    leave: ({
                        description: e,
                        directives: t,
                        operationTypes: r
                    }) => wrap("", e, "\n") + join(["schema", join(t, " "), block(r)], " ")
                },
                OperationTypeDefinition: {
                    leave: ({
                        operation: e,
                        type: t
                    }) => e + ": " + t
                },
                ScalarTypeDefinition: {
                    leave: ({
                        description: e,
                        name: t,
                        directives: r
                    }) => wrap("", e, "\n") + join(["scalar", t, join(r, " ")], " ")
                },
                ObjectTypeDefinition: {
                    leave: ({
                        description: e,
                        name: t,
                        interfaces: r,
                        directives: n,
                        fields: i
                    }) => wrap("", e, "\n") + join(["type", t, wrap("implements ", join(r, " & ")), join(n, " "), block(i)], " ")
                },
                FieldDefinition: {
                    leave: ({
                        description: e,
                        name: t,
                        arguments: r,
                        type: n,
                        directives: i
                    }) => wrap("", e, "\n") + t + (hasMultilineItems(r) ? wrap("(\n", indent(join(r, "\n")), "\n)") : wrap("(", join(r, ", "), ")")) + ": " + n + wrap(" ", join(i, " "))
                },
                InputValueDefinition: {
                    leave: ({
                        description: e,
                        name: t,
                        type: r,
                        defaultValue: n,
                        directives: i
                    }) => wrap("", e, "\n") + join([t + ": " + r, wrap("= ", n), join(i, " ")], " ")
                },
                InterfaceTypeDefinition: {
                    leave: ({
                        description: e,
                        name: t,
                        interfaces: r,
                        directives: n,
                        fields: i
                    }) => wrap("", e, "\n") + join(["interface", t, wrap("implements ", join(r, " & ")), join(n, " "), block(i)], " ")
                },
                UnionTypeDefinition: {
                    leave: ({
                        description: e,
                        name: t,
                        directives: r,
                        types: n
                    }) => wrap("", e, "\n") + join(["union", t, join(r, " "), wrap("= ", join(n, " | "))], " ")
                },
                EnumTypeDefinition: {
                    leave: ({
                        description: e,
                        name: t,
                        directives: r,
                        values: n
                    }) => wrap("", e, "\n") + join(["enum", t, join(r, " "), block(n)], " ")
                },
                EnumValueDefinition: {
                    leave: ({
                        description: e,
                        name: t,
                        directives: r
                    }) => wrap("", e, "\n") + join([t, join(r, " ")], " ")
                },
                InputObjectTypeDefinition: {
                    leave: ({
                        description: e,
                        name: t,
                        directives: r,
                        fields: n
                    }) => wrap("", e, "\n") + join(["input", t, join(r, " "), block(n)], " ")
                },
                DirectiveDefinition: {
                    leave: ({
                        description: e,
                        name: t,
                        arguments: r,
                        repeatable: n,
                        locations: i
                    }) => wrap("", e, "\n") + "directive @" + t + (hasMultilineItems(r) ? wrap("(\n", indent(join(r, "\n")), "\n)") : wrap("(", join(r, ", "), ")")) + (n ? " repeatable" : "") + " on " + join(i, " | ")
                },
                SchemaExtension: {
                    leave: ({
                        directives: e,
                        operationTypes: t
                    }) => join(["extend schema", join(e, " "), block(t)], " ")
                },
                ScalarTypeExtension: {
                    leave: ({
                        name: e,
                        directives: t
                    }) => join(["extend scalar", e, join(t, " ")], " ")
                },
                ObjectTypeExtension: {
                    leave: ({
                        name: e,
                        interfaces: t,
                        directives: r,
                        fields: n
                    }) => join(["extend type", e, wrap("implements ", join(t, " & ")), join(r, " "), block(n)], " ")
                },
                InterfaceTypeExtension: {
                    leave: ({
                        name: e,
                        interfaces: t,
                        directives: r,
                        fields: n
                    }) => join(["extend interface", e, wrap("implements ", join(t, " & ")), join(r, " "), block(n)], " ")
                },
                UnionTypeExtension: {
                    leave: ({
                        name: e,
                        directives: t,
                        types: r
                    }) => join(["extend union", e, join(t, " "), wrap("= ", join(r, " | "))], " ")
                },
                EnumTypeExtension: {
                    leave: ({
                        name: e,
                        directives: t,
                        values: r
                    }) => join(["extend enum", e, join(t, " "), block(r)], " ")
                },
                InputObjectTypeExtension: {
                    leave: ({
                        name: e,
                        directives: t,
                        fields: r
                    }) => join(["extend input", e, join(t, " "), block(r)], " ")
                }
            };

            function join(e, t = "") {
                var r;
                return null !== (r = null == e ? void 0 : e.filter(e => e).join(t)) && void 0 !== r ? r : ""
            }

            function block(e) {
                return wrap("{\n", indent(join(e, "\n")), "\n}")
            }

            function wrap(e, t, r = "") {
                return null != t && "" !== t ? e + t + r : ""
            }

            function indent(e) {
                return wrap("  ", e.replace(/\n/g, "\n  "))
            }

            function hasMultilineItems(e) {
                var t;
                return null !== (t = null == e ? void 0 : e.some(e => e.includes("\n"))) && void 0 !== t && t
            }
            var L = v.mr ? new WeakMap : void 0,
                print_print = function(e) {
                    var t;
                    return (t = null == L ? void 0 : L.get(e)) || (t = (0, F.Vn)(e, N), null == L || L.set(e, t)), t
                },
                U = {
                    http: {
                        includeQuery: !0,
                        includeExtensions: !1,
                        preserveHeaderCase: !1
                    },
                    headers: {
                        accept: "*/*",
                        "content-type": "application/json"
                    },
                    options: {
                        method: "POST"
                    }
                },
                defaultPrinter = function(e, t) {
                    return t(e)
                };

            function fromError(e) {
                return new l(function(t) {
                    t.error(e)
                })
            }
            var z = r(90535),
                G = (0, i.wY)(function() {
                    return fetch
                }),
                createHttpLink = function(e) {
                    void 0 === e && (e = {});
                    var t = e.uri,
                        r = void 0 === t ? "/graphql" : t,
                        o = e.fetch,
                        a = e.print,
                        s = void 0 === a ? defaultPrinter : a,
                        c = e.includeExtensions,
                        u = e.preserveHeaderCase,
                        p = e.useGETForQueries,
                        y = e.includeUnusedVariables,
                        P = void 0 !== y && y,
                        T = (0, n.__rest)(e, ["uri", "fetch", "print", "includeExtensions", "preserveHeaderCase", "useGETForQueries", "includeUnusedVariables"]);
                    !1 !== globalThis.__DEV__ && checkFetcher(o || G);
                    var A = {
                        http: {
                            includeExtensions: c,
                            preserveHeaderCase: u
                        },
                        options: T.fetchOptions,
                        credentials: T.credentials,
                        headers: T.headers
                    };
                    return new f(function(e) {
                        var t, a, c, u, f, y, T, M, B = (t = e, a = r, t.getContext().uri || ("function" == typeof a ? a(t) : a || "/graphql")),
                            N = e.getContext(),
                            L = {};
                        if (N.clientAwareness) {
                            var W = N.clientAwareness,
                                V = W.name,
                                Q = W.version;
                            V && (L["apollographql-client-name"] = V), Q && (L["apollographql-client-version"] = Q)
                        }
                        var K = (0, n.__assign)((0, n.__assign)({}, L), N.headers),
                            Y = {
                                http: N.http,
                                options: N.fetchOptions,
                                credentials: N.credentials,
                                headers: K
                            };
                        if ((0, g.FS)(["client"], e.query)) {
                            var J = (0, z.ob)(e.query);
                            if (!J) return fromError(Error("HttpLink: Trying to send a client-only query to the server. To send to the server, ensure a non-client field is added to the query or set the `transformOptions.removeClientFields` option to `true`."));
                            e.query = J
                        }
                        var X = function(e, t) {
                                for (var r = [], i = 2; i < arguments.length; i++) r[i - 2] = arguments[i];
                                var o = {},
                                    a = {};
                                r.forEach(function(e) {
                                    o = (0, n.__assign)((0, n.__assign)((0, n.__assign)({}, o), e.options), {
                                        headers: (0, n.__assign)((0, n.__assign)({}, o.headers), e.headers)
                                    }), e.credentials && (o.credentials = e.credentials), a = (0, n.__assign)((0, n.__assign)({}, a), e.http)
                                }), o.headers && (o.headers = function(e, t) {
                                    if (!t) {
                                        var r = Object.create(null);
                                        return Object.keys(Object(e)).forEach(function(t) {
                                            r[t.toLowerCase()] = e[t]
                                        }), r
                                    }
                                    var n = Object.create(null);
                                    Object.keys(Object(e)).forEach(function(t) {
                                        n[t.toLowerCase()] = {
                                            originalName: t,
                                            value: e[t]
                                        }
                                    });
                                    var i = Object.create(null);
                                    return Object.keys(n).forEach(function(e) {
                                        i[n[e].originalName] = n[e].value
                                    }), i
                                }(o.headers, a.preserveHeaderCase));
                                var s = e.operationName,
                                    c = e.extensions,
                                    u = e.variables,
                                    l = e.query,
                                    d = {
                                        operationName: s,
                                        variables: u
                                    };
                                return a.includeExtensions && (d.extensions = c), a.includeQuery && (d.query = t(l, print_print)), {
                                    options: o,
                                    body: d
                                }
                            }(e, s, U, A, Y),
                            er = X.options,
                            en = X.body;
                        en.variables && !P && (en.variables = (c = en.variables, u = e.query, f = (0, n.__assign)({}, c), y = new Set(Object.keys(c)), (0, F.Vn)(u, {
                            Variable: function(e, t, r) {
                                r && "VariableDefinition" !== r.kind && y.delete(e.name.value)
                            }
                        }), y.forEach(function(e) {
                            delete f[e]
                        }), f)), er.signal || "undefined" == typeof AbortController || (M = new AbortController, er.signal = M.signal);
                        var ei = "OperationDefinition" === (T = (0, d.p$)(e.query)).kind && "subscription" === T.operation,
                            eo = (0, g.FS)(["defer"], e.query);
                        if (p && !e.query.definitions.some(function(e) {
                                return "OperationDefinition" === e.kind && "mutation" === e.operation
                            }) && (er.method = "GET"), eo || ei) {
                            er.headers = er.headers || {};
                            var ea = "multipart/mixed;";
                            ei && eo && !1 !== globalThis.__DEV__ && i.kG.warn(38), ei ? ea += "boundary=graphql;subscriptionSpec=1.0,application/json" : eo && (ea += "deferSpec=20220824,application/json"), er.headers.accept = ea
                        }
                        if ("GET" === er.method) {
                            var es = function(e, t) {
                                    var r = [],
                                        addQueryParam = function(e, t) {
                                            r.push("".concat(e, "=").concat(encodeURIComponent(t)))
                                        };
                                    if ("query" in t && addQueryParam("query", t.query), t.operationName && addQueryParam("operationName", t.operationName), t.variables) {
                                        var n = void 0;
                                        try {
                                            n = serializeFetchParameter(t.variables, "Variables map")
                                        } catch (e) {
                                            return {
                                                parseError: e
                                            }
                                        }
                                        addQueryParam("variables", n)
                                    }
                                    if (t.extensions) {
                                        var i = void 0;
                                        try {
                                            i = serializeFetchParameter(t.extensions, "Extensions map")
                                        } catch (e) {
                                            return {
                                                parseError: e
                                            }
                                        }
                                        addQueryParam("extensions", i)
                                    }
                                    var o = "",
                                        a = e,
                                        s = e.indexOf("#"); - 1 !== s && (o = e.substr(s), a = e.substr(0, s));
                                    var c = -1 === a.indexOf("?") ? "?" : "&";
                                    return {
                                        newURI: a + c + r.join("&") + o
                                    }
                                }(B, en),
                                ec = es.newURI,
                                eu = es.parseError;
                            if (eu) return fromError(eu);
                            B = ec
                        } else try {
                            er.body = serializeFetchParameter(en, "Payload")
                        } catch (e) {
                            return fromError(e)
                        }
                        return new l(function(t) {
                            var r = o || (0, i.wY)(function() {
                                    return fetch
                                }) || G,
                                a = t.next.bind(t);
                            return r(B, er).then(function(t) {
                                    e.setContext({
                                        response: t
                                    });
                                    var r, i = null === (r = t.headers) || void 0 === r ? void 0 : r.get("content-type");
                                    return null !== i && /^multipart\/mixed/i.test(i) ? function(e, t) {
                                        var r;
                                        return (0, n.__awaiter)(this, void 0, void 0, function() {
                                            var i, o, a, s, c, u, l, d, f, p, y, g, P, T, x, A, M, B, F, N, L, U;
                                            return (0, n.__generator)(this, function(z) {
                                                switch (z.label) {
                                                    case 0:
                                                        if (void 0 === TextDecoder) throw Error("TextDecoder must be defined in the environment: please import a polyfill.");
                                                        i = new TextDecoder("utf-8"), o = null === (r = e.headers) || void 0 === r ? void 0 : r.get("content-type"), a = "boundary=", s = (null == o ? void 0 : o.includes(a)) ? null == o ? void 0 : o.substring((null == o ? void 0 : o.indexOf(a)) + a.length).replace(/['"]/g, "").replace(/\;(.*)/gm, "").trim() : "-", c = "\r\n--".concat(s), u = "", l = function(e) {
                                                            var t, r, n, i, o, a, s = e;
                                                            if (e.body && (s = e.body), t = s, v.DN && t[Symbol.asyncIterator]) return n = s[Symbol.asyncIterator](), (r = {
                                                                next: function() {
                                                                    return n.next()
                                                                }
                                                            })[Symbol.asyncIterator] = function() {
                                                                return this
                                                            }, r;
                                                            if (s.getReader) return readerIterator(s.getReader());
                                                            if (s.stream) return readerIterator(s.stream().getReader());
                                                            if (s.arrayBuffer) return i = s.arrayBuffer(), o = !1, a = {
                                                                next: function() {
                                                                    return o ? Promise.resolve({
                                                                        value: void 0,
                                                                        done: !0
                                                                    }) : (o = !0, new Promise(function(e, t) {
                                                                        i.then(function(t) {
                                                                            e({
                                                                                value: t,
                                                                                done: !1
                                                                            })
                                                                        }).catch(t)
                                                                    }))
                                                                }
                                                            }, v.DN && (a[Symbol.asyncIterator] = function() {
                                                                return this
                                                            }), a;
                                                            if (s.pipe) return function(e) {
                                                                var t = null,
                                                                    r = null,
                                                                    n = !1,
                                                                    i = [],
                                                                    o = [];

                                                                function onData(e) {
                                                                    if (!r) {
                                                                        if (o.length) {
                                                                            var t = o.shift();
                                                                            if (Array.isArray(t) && t[0]) return t[0]({
                                                                                value: e,
                                                                                done: !1
                                                                            })
                                                                        }
                                                                        i.push(e)
                                                                    }
                                                                }

                                                                function onError(e) {
                                                                    r = e, o.slice().forEach(function(t) {
                                                                        t[1](e)
                                                                    }), t && t()
                                                                }

                                                                function onEnd() {
                                                                    n = !0, o.slice().forEach(function(e) {
                                                                        e[0]({
                                                                            value: void 0,
                                                                            done: !0
                                                                        })
                                                                    }), t && t()
                                                                }
                                                                t = function() {
                                                                    t = null, e.removeListener("data", onData), e.removeListener("error", onError), e.removeListener("end", onEnd), e.removeListener("finish", onEnd), e.removeListener("close", onEnd)
                                                                }, e.on("data", onData), e.on("error", onError), e.on("end", onEnd), e.on("finish", onEnd), e.on("close", onEnd);
                                                                var a = {
                                                                    next: function() {
                                                                        return new Promise(function(e, t) {
                                                                            return r ? t(r) : i.length ? e({
                                                                                value: i.shift(),
                                                                                done: !1
                                                                            }) : n ? e({
                                                                                value: void 0,
                                                                                done: !0
                                                                            }) : void o.push([e, t])
                                                                        })
                                                                    }
                                                                };
                                                                return v.DN && (a[Symbol.asyncIterator] = function() {
                                                                    return this
                                                                }), a
                                                            }(s);
                                                            throw Error("Unknown body type for responseIterator. Please pass a streamable response.")
                                                        }(e), d = !0, z.label = 1;
                                                    case 1:
                                                        if (!d) return [3, 3];
                                                        return [4, l.next()];
                                                    case 2:
                                                        for (p = (f = z.sent()).value, y = f.done, g = "string" == typeof p ? p : i.decode(p), P = u.length - c.length + 1, d = !y, u += g, T = u.indexOf(c, P); T > -1;) {
                                                            if (x = void 0, x = (L = [u.slice(0, T), u.slice(T + c.length)])[0], u = L[1], A = x.indexOf("\r\n\r\n"), (M = function(e) {
                                                                    var t = {};
                                                                    return e.split("\n").forEach(function(e) {
                                                                        var r = e.indexOf(":");
                                                                        if (r > -1) {
                                                                            var n = e.slice(0, r).trim().toLowerCase(),
                                                                                i = e.slice(r + 1).trim();
                                                                            t[n] = i
                                                                        }
                                                                    }), t
                                                                }(x.slice(0, A))["content-type"]) && -1 === M.toLowerCase().indexOf("application/json")) throw Error("Unsupported patch content type: application/json is required.");
                                                            if (B = x.slice(A)) {
                                                                if (Object.keys(F = parseJsonBody(e, B)).length > 1 || "data" in F || "incremental" in F || "errors" in F || "payload" in F)(0, _.s)(F) && "payload" in F ? (N = {}, "payload" in F && (N = (0, n.__assign)({}, F.payload)), "errors" in F && (N = (0, n.__assign)((0, n.__assign)({}, N), {
                                                                    extensions: (0, n.__assign)((0, n.__assign)({}, "extensions" in N ? N.extensions : null), ((U = {})[E.YG] = F.errors, U))
                                                                })), t(N)) : t(F);
                                                                else if (1 === Object.keys(F).length && "hasNext" in F && !F.hasNext) return [2]
                                                            }
                                                            T = u.indexOf(c)
                                                        }
                                                        return [3, 1];
                                                    case 3:
                                                        return [2]
                                                }
                                            })
                                        })
                                    }(t, a) : t.text().then(function(e) {
                                        return parseJsonBody(t, e)
                                    }).then(function(r) {
                                        return t.status >= 300 && throwServerError(t, r, "Response not successful: Received status code ".concat(t.status)), Array.isArray(r) || x.call(r, "data") || x.call(r, "errors") || throwServerError(t, r, "Server response was missing for query '".concat(Array.isArray(e) ? e.map(function(e) {
                                            return e.operationName
                                        }) : e.operationName, "'.")), r
                                    }).then(a)
                                }).then(function() {
                                    M = void 0, t.complete()
                                }).catch(function(e) {
                                    M = void 0, e.result && e.result.errors && e.result.data && t.next(e.result), t.error(e)
                                }),
                                function() {
                                    M && M.abort()
                                }
                        })
                    })
                },
                W = function(e) {
                    function HttpLink(t) {
                        void 0 === t && (t = {});
                        var r = e.call(this, createHttpLink(t).request) || this;
                        return r.options = t, r
                    }
                    return (0, n.__extends)(HttpLink, e), HttpLink
                }(f),
                V = r(36510),
                Q = r(69165),
                K = r(65647);

            function asyncMap(e, t, r) {
                return new l(function(n) {
                    var i = {
                        then: function(e) {
                            return new Promise(function(t) {
                                return t(e())
                            })
                        }
                    };

                    function makeCallback(e, t) {
                        return function(r) {
                            if (e) {
                                var both = function() {
                                    return n.closed ? 0 : e(r)
                                };
                                i = i.then(both, both).then(function(e) {
                                    return n.next(e)
                                }, function(e) {
                                    return n.error(e)
                                })
                            } else n[t](r)
                        }
                    }
                    var o = {
                            next: makeCallback(t, "next"),
                            error: makeCallback(r, "error"),
                            complete: function() {
                                i.then(function() {
                                    return n.complete()
                                })
                            }
                        },
                        a = e.subscribe(o);
                    return function() {
                        return a.unsubscribe()
                    }
                })
            }

            function graphQLResultHasError(e) {
                var t = getGraphQLErrorsFromResult(e);
                return (0, P.O)(t)
            }

            function getGraphQLErrorsFromResult(e) {
                var t = (0, P.O)(e.errors) ? e.errors.slice(0) : [];
                return isExecutionPatchIncrementalResult(e) && (0, P.O)(e.incremental) && e.incremental.forEach(function(e) {
                    e.errors && t.push.apply(t, e.errors)
                }), t
            }
            var Y = r(44339),
                J = r(18333);

            function iterateObserversSafely(e, t, r) {
                var n = [];
                e.forEach(function(e) {
                    return e[t] && n.push(e)
                }), n.forEach(function(e) {
                    return e[t](r)
                })
            }

            function fixObservableSubclass(e) {
                function set(t) {
                    Object.defineProperty(e, t, {
                        value: l
                    })
                }
                return v.aS && Symbol.species && set(Symbol.species), set("@@species"), e
            }

            function isPromiseLike(e) {
                return e && "function" == typeof e.then
            }
            var X = function(e) {
                function Concast(t) {
                    var r = e.call(this, function(e) {
                        return r.addObserver(e),
                            function() {
                                return r.removeObserver(e)
                            }
                    }) || this;
                    return r.observers = new Set, r.promise = new Promise(function(e, t) {
                        r.resolve = e, r.reject = t
                    }), r.handlers = {
                        next: function(e) {
                            null !== r.sub && (r.latest = ["next", e], r.notify("next", e), iterateObserversSafely(r.observers, "next", e))
                        },
                        error: function(e) {
                            var t = r.sub;
                            null !== t && (t && setTimeout(function() {
                                return t.unsubscribe()
                            }), r.sub = null, r.latest = ["error", e], r.reject(e), r.notify("error", e), iterateObserversSafely(r.observers, "error", e))
                        },
                        complete: function() {
                            var e = r.sub,
                                t = r.sources;
                            if (null !== e) {
                                var n = (void 0 === t ? [] : t).shift();
                                n ? isPromiseLike(n) ? n.then(function(e) {
                                    return r.sub = e.subscribe(r.handlers)
                                }) : r.sub = n.subscribe(r.handlers) : (e && setTimeout(function() {
                                    return e.unsubscribe()
                                }), r.sub = null, r.latest && "next" === r.latest[0] ? r.resolve(r.latest[1]) : r.resolve(), r.notify("complete"), iterateObserversSafely(r.observers, "complete"))
                            }
                        }
                    }, r.nextResultListeners = new Set, r.cancel = function(e) {
                        r.reject(e), r.sources = [], r.handlers.complete()
                    }, r.promise.catch(function(e) {}), "function" == typeof t && (t = [new l(t)]), isPromiseLike(t) ? t.then(function(e) {
                        return r.start(e)
                    }, r.handlers.error) : r.start(t), r
                }
                return (0, n.__extends)(Concast, e), Concast.prototype.start = function(e) {
                    void 0 === this.sub && (this.sources = Array.from(e), this.handlers.complete())
                }, Concast.prototype.deliverLastMessage = function(e) {
                    if (this.latest) {
                        var t = this.latest[0],
                            r = e[t];
                        r && r.call(e, this.latest[1]), null === this.sub && "next" === t && e.complete && e.complete()
                    }
                }, Concast.prototype.addObserver = function(e) {
                    this.observers.has(e) || (this.deliverLastMessage(e), this.observers.add(e))
                }, Concast.prototype.removeObserver = function(e) {
                    this.observers.delete(e) && this.observers.size < 1 && this.handlers.complete()
                }, Concast.prototype.notify = function(e, t) {
                    var r = this.nextResultListeners;
                    r.size && (this.nextResultListeners = new Set, r.forEach(function(r) {
                        return r(e, t)
                    }))
                }, Concast.prototype.beforeNext = function(e) {
                    var t = !1;
                    this.nextResultListeners.add(function(r, n) {
                        t || (t = !0, e(r, n))
                    })
                }, Concast
            }(l);
            fixObservableSubclass(X);
            var er = r(12274),
                en = r(18865),
                ei = r(62566),
                eo = r(86275);

            function selectionHasNonreactiveDirective(e) {
                return !!e.directives && e.directives.some(directiveIsNonreactive)
            }

            function directiveIsNonreactive(e) {
                return "nonreactive" === e.name.value
            }
            var ea = Object.assign,
                es = Object.hasOwnProperty,
                ec = function(e) {
                    function ObservableQuery(t) {
                        var r = t.queryManager,
                            i = t.queryInfo,
                            o = t.options,
                            a = e.call(this, function(e) {
                                try {
                                    var t = e._subscription._observer;
                                    t && !t.error && (t.error = defaultSubscriptionObserverErrorCallback)
                                } catch (e) {}
                                var r = !a.observers.size;
                                a.observers.add(e);
                                var n = a.last;
                                return n && n.error ? e.error && e.error(n.error) : n && n.result && e.next && e.next(n.result), r && a.reobserve().catch(function() {}),
                                    function() {
                                        a.observers.delete(e) && !a.observers.size && a.tearDownQuery()
                                    }
                            }) || this;
                        a.observers = new Set, a.subscriptions = new Set, a.queryInfo = i, a.queryManager = r, a.waitForOwnResult = skipCacheDataFor(o.fetchPolicy), a.isTornDown = !1;
                        var s = r.defaultOptions.watchQuery,
                            c = (void 0 === s ? {} : s).fetchPolicy,
                            u = void 0 === c ? "cache-first" : c,
                            l = o.fetchPolicy,
                            f = void 0 === l ? u : l,
                            p = o.initialFetchPolicy,
                            y = void 0 === p ? "standby" === f ? u : f : p;
                        a.options = (0, n.__assign)((0, n.__assign)({}, o), {
                            initialFetchPolicy: y,
                            fetchPolicy: f
                        }), a.queryId = i.queryId || r.generateQueryId();
                        var g = (0, d.$H)(a.query);
                        return a.queryName = g && g.name && g.name.value, a
                    }
                    return (0, n.__extends)(ObservableQuery, e), Object.defineProperty(ObservableQuery.prototype, "query", {
                        get: function() {
                            return this.lastQuery || this.options.query
                        },
                        enumerable: !1,
                        configurable: !0
                    }), Object.defineProperty(ObservableQuery.prototype, "variables", {
                        get: function() {
                            return this.options.variables
                        },
                        enumerable: !1,
                        configurable: !0
                    }), ObservableQuery.prototype.result = function() {
                        var e = this;
                        return new Promise(function(t, r) {
                            var n = {
                                    next: function(r) {
                                        t(r), e.observers.delete(n), e.observers.size || e.queryManager.removeQuery(e.queryId), setTimeout(function() {
                                            i.unsubscribe()
                                        }, 0)
                                    },
                                    error: r
                                },
                                i = e.subscribe(n)
                        })
                    }, ObservableQuery.prototype.getCurrentResult = function(e) {
                        void 0 === e && (e = !0);
                        var t = this.getLastResult(!0),
                            r = this.queryInfo.networkStatus || t && t.networkStatus || er.Ie.ready,
                            i = (0, n.__assign)((0, n.__assign)({}, t), {
                                loading: (0, er.Oj)(r),
                                networkStatus: r
                            }),
                            o = this.options.fetchPolicy,
                            a = void 0 === o ? "cache-first" : o;
                        if (skipCacheDataFor(a) || this.queryManager.getDocumentInfo(this.query).hasForcedResolvers);
                        else if (this.waitForOwnResult) this.queryInfo.updateWatch();
                        else {
                            var s = this.queryInfo.getDiff();
                            (s.complete || this.options.returnPartialData) && (i.data = s.result), (0, V.D)(i.data, {}) && (i.data = void 0), s.complete ? (delete i.partial, s.complete && i.networkStatus === er.Ie.loading && ("cache-first" === a || "cache-only" === a) && (i.networkStatus = er.Ie.ready, i.loading = !1)) : i.partial = !0, !1 === globalThis.__DEV__ || s.complete || this.options.partialRefetch || i.loading || i.data || i.error || logMissingFieldErrors(s.missing)
                        }
                        return e && this.updateLastResult(i), i
                    }, ObservableQuery.prototype.isDifferentFromLastResult = function(e, t) {
                        var r, i, o, a, s, c, u;
                        return !this.last || (this.queryManager.getDocumentInfo(this.query).hasNonreactiveDirective ? (r = this.query, i = this.last.result, o = this.variables, a = i.data, s = (0, n.__rest)(i, ["data"]), c = e.data, u = (0, n.__rest)(e, ["data"]), !((0, V.Z)(s, u) && function equalBySelectionSet(e, t, r, n) {
                            if (t === r) return !0;
                            var i = new Set;
                            return e.selections.every(function(e) {
                                if (i.has(e) || (i.add(e), !(0, g.LZ)(e, n.variables) || selectionHasNonreactiveDirective(e))) return !0;
                                if ((0, Y.My)(e)) {
                                    var o = (0, Y.u2)(e),
                                        a = t && t[o],
                                        s = r && r[o],
                                        c = e.selectionSet;
                                    if (!c) return (0, V.Z)(a, s);
                                    var u = Array.isArray(a),
                                        l = Array.isArray(s);
                                    if (u !== l) return !1;
                                    if (u && l) {
                                        var d = a.length;
                                        if (s.length !== d) return !1;
                                        for (var f = 0; f < d; ++f)
                                            if (!equalBySelectionSet(c, a[f], s[f], n)) return !1;
                                        return !0
                                    }
                                    return equalBySelectionSet(c, a, s, n)
                                }
                                var p = (0, eo.hi)(e, n.fragmentMap);
                                if (p) return !!selectionHasNonreactiveDirective(p) || equalBySelectionSet(p.selectionSet, t, r, n)
                            })
                        }((0, d.p$)(r).selectionSet, a, c, {
                            fragmentMap: (0, eo.F)((0, d.kU)(r)),
                            variables: o
                        }))) : !(0, V.D)(this.last.result, e)) || t && !(0, V.D)(this.last.variables, t)
                    }, ObservableQuery.prototype.getLast = function(e, t) {
                        var r = this.last;
                        if (r && r[e] && (!t || (0, V.D)(r.variables, this.variables))) return r[e]
                    }, ObservableQuery.prototype.getLastResult = function(e) {
                        return this.getLast("result", e)
                    }, ObservableQuery.prototype.getLastError = function(e) {
                        return this.getLast("error", e)
                    }, ObservableQuery.prototype.resetLastResults = function() {
                        delete this.last, this.isTornDown = !1
                    }, ObservableQuery.prototype.resetQueryStoreErrors = function() {
                        this.queryManager.resetErrors(this.queryId)
                    }, ObservableQuery.prototype.refetch = function(e) {
                        var t, r = {
                                pollInterval: 0
                            },
                            o = this.options.fetchPolicy;
                        if ("cache-and-network" === o ? r.fetchPolicy = o : "no-cache" === o ? r.fetchPolicy = "no-cache" : r.fetchPolicy = "network-only", !1 !== globalThis.__DEV__ && e && es.call(e, "variables")) {
                            var a = (0, d.iW)(this.query),
                                s = a.variableDefinitions;
                            s && s.some(function(e) {
                                return "variables" === e.variable.name.value
                            }) || !1 === globalThis.__DEV__ || i.kG.warn(20, e, (null === (t = a.name) || void 0 === t ? void 0 : t.value) || a)
                        }
                        return e && !(0, V.D)(this.options.variables, e) && (r.variables = this.options.variables = (0, n.__assign)((0, n.__assign)({}, this.options.variables), e)), this.queryInfo.resetLastWrite(), this.reobserve(r, er.Ie.refetch)
                    }, ObservableQuery.prototype.fetchMore = function(e) {
                        var t = this,
                            r = (0, n.__assign)((0, n.__assign)({}, e.query ? e : (0, n.__assign)((0, n.__assign)((0, n.__assign)((0, n.__assign)({}, this.options), {
                                query: this.options.query
                            }), e), {
                                variables: (0, n.__assign)((0, n.__assign)({}, this.options.variables), e.variables)
                            })), {
                                fetchPolicy: "no-cache"
                            });
                        r.query = this.transformDocument(r.query);
                        var i = this.queryManager.generateQueryId();
                        this.lastQuery = e.query ? this.transformDocument(this.options.query) : r.query;
                        var o = this.queryInfo,
                            a = o.networkStatus;
                        o.networkStatus = er.Ie.fetchMore, r.notifyOnNetworkStatusChange && this.observe();
                        var s = new Set;
                        return this.queryManager.fetchQuery(i, r, er.Ie.fetchMore).then(function(n) {
                            return t.queryManager.removeQuery(i), o.networkStatus === er.Ie.fetchMore && (o.networkStatus = a), t.queryManager.cache.batch({
                                update: function(i) {
                                    var o = e.updateQuery;
                                    o ? i.updateQuery({
                                        query: t.query,
                                        variables: t.variables,
                                        returnPartialData: !0,
                                        optimistic: !1
                                    }, function(e) {
                                        return o(e, {
                                            fetchMoreResult: n.data,
                                            variables: r.variables
                                        })
                                    }) : i.writeQuery({
                                        query: r.query,
                                        variables: r.variables,
                                        data: n.data
                                    })
                                },
                                onWatchUpdated: function(e) {
                                    s.add(e.query)
                                }
                            }), n
                        }).finally(function() {
                            s.has(t.query) || reobserveCacheFirst(t)
                        })
                    }, ObservableQuery.prototype.subscribeToMore = function(e) {
                        var t = this,
                            r = this.queryManager.startGraphQLSubscription({
                                query: e.document,
                                variables: e.variables,
                                context: e.context
                            }).subscribe({
                                next: function(r) {
                                    var n = e.updateQuery;
                                    n && t.updateQuery(function(e, t) {
                                        return n(e, {
                                            subscriptionData: r,
                                            variables: t.variables
                                        })
                                    })
                                },
                                error: function(t) {
                                    if (e.onError) {
                                        e.onError(t);
                                        return
                                    }!1 !== globalThis.__DEV__ && i.kG.error(21, t)
                                }
                            });
                        return this.subscriptions.add(r),
                            function() {
                                t.subscriptions.delete(r) && r.unsubscribe()
                            }
                    }, ObservableQuery.prototype.setOptions = function(e) {
                        return this.reobserve(e)
                    }, ObservableQuery.prototype.silentSetOptions = function(e) {
                        var t = (0, en.o)(this.options, e || {});
                        ea(this.options, t)
                    }, ObservableQuery.prototype.setVariables = function(e) {
                        return (0, V.D)(this.variables, e) ? this.observers.size ? this.result() : Promise.resolve() : (this.options.variables = e, this.observers.size) ? this.reobserve({
                            fetchPolicy: this.options.initialFetchPolicy,
                            variables: e
                        }, er.Ie.setVariables) : Promise.resolve()
                    }, ObservableQuery.prototype.updateQuery = function(e) {
                        var t = this.queryManager,
                            r = e(t.cache.diff({
                                query: this.options.query,
                                variables: this.variables,
                                returnPartialData: !0,
                                optimistic: !1
                            }).result, {
                                variables: this.variables
                            });
                        r && (t.cache.writeQuery({
                            query: this.options.query,
                            data: r,
                            variables: this.variables
                        }), t.broadcastQueries())
                    }, ObservableQuery.prototype.startPolling = function(e) {
                        this.options.pollInterval = e, this.updatePolling()
                    }, ObservableQuery.prototype.stopPolling = function() {
                        this.options.pollInterval = 0, this.updatePolling()
                    }, ObservableQuery.prototype.applyNextFetchPolicy = function(e, t) {
                        if (t.nextFetchPolicy) {
                            var r = t.fetchPolicy,
                                n = void 0 === r ? "cache-first" : r,
                                i = t.initialFetchPolicy,
                                o = void 0 === i ? n : i;
                            "standby" === n || ("function" == typeof t.nextFetchPolicy ? t.fetchPolicy = t.nextFetchPolicy(n, {
                                reason: e,
                                options: t,
                                observable: this,
                                initialFetchPolicy: o
                            }) : "variables-changed" === e ? t.fetchPolicy = o : t.fetchPolicy = t.nextFetchPolicy)
                        }
                        return t.fetchPolicy
                    }, ObservableQuery.prototype.fetch = function(e, t, r) {
                        return this.queryManager.setObservableQuery(this), this.queryManager.fetchConcastWithInfo(this.queryId, e, t, r)
                    }, ObservableQuery.prototype.updatePolling = function() {
                        var e = this;
                        if (!this.queryManager.ssrMode) {
                            var t = this.pollingInfo,
                                r = this.options.pollInterval;
                            if (!r) {
                                t && (clearTimeout(t.timeout), delete this.pollingInfo);
                                return
                            }
                            if (!t || t.interval !== r) {
                                (0, i.kG)(r, 22), (t || (this.pollingInfo = {})).interval = r;
                                var maybeFetch = function() {
                                        e.pollingInfo && ((0, er.Oj)(e.queryInfo.networkStatus) ? poll() : e.reobserve({
                                            fetchPolicy: "no-cache" === e.options.initialFetchPolicy ? "no-cache" : "network-only"
                                        }, er.Ie.poll).then(poll, poll))
                                    },
                                    poll = function() {
                                        var t = e.pollingInfo;
                                        t && (clearTimeout(t.timeout), t.timeout = setTimeout(maybeFetch, t.interval))
                                    };
                                poll()
                            }
                        }
                    }, ObservableQuery.prototype.updateLastResult = function(e, t) {
                        void 0 === t && (t = this.variables);
                        var r = this.getLastError();
                        return r && this.last && !(0, V.D)(t, this.last.variables) && (r = void 0), this.last = (0, n.__assign)({
                            result: this.queryManager.assumeImmutableResults ? e : (0, ei.X)(e),
                            variables: t
                        }, r ? {
                            error: r
                        } : null)
                    }, ObservableQuery.prototype.reobserveAsConcast = function(e, t) {
                        var r = this;
                        this.isTornDown = !1;
                        var i = t === er.Ie.refetch || t === er.Ie.fetchMore || t === er.Ie.poll,
                            o = this.options.variables,
                            a = this.options.fetchPolicy,
                            s = (0, en.o)(this.options, e || {}),
                            c = i ? s : ea(this.options, s),
                            u = this.transformDocument(c.query);
                        this.lastQuery = u, !i && (this.updatePolling(), e && e.variables && !(0, V.D)(e.variables, o) && "standby" !== c.fetchPolicy && c.fetchPolicy === a && (this.applyNextFetchPolicy("variables-changed", c), void 0 === t && (t = er.Ie.setVariables))), this.waitForOwnResult && (this.waitForOwnResult = skipCacheDataFor(c.fetchPolicy));
                        var finishWaitingForOwnResult = function() {
                                r.concast === f && (r.waitForOwnResult = !1)
                            },
                            l = c.variables && (0, n.__assign)({}, c.variables),
                            d = this.fetch(c, t, u),
                            f = d.concast,
                            p = d.fromLink,
                            y = {
                                next: function(e) {
                                    finishWaitingForOwnResult(), r.reportResult(e, l)
                                },
                                error: function(e) {
                                    finishWaitingForOwnResult(), r.reportError(e, l)
                                }
                            };
                        return i || !p && this.concast || (this.concast && this.observer && this.concast.removeObserver(this.observer), this.concast = f, this.observer = y), f.addObserver(y), f
                    }, ObservableQuery.prototype.reobserve = function(e, t) {
                        return this.reobserveAsConcast(e, t).promise
                    }, ObservableQuery.prototype.resubscribeAfterError = function() {
                        for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
                        var r = this.last;
                        this.resetLastResults();
                        var n = this.subscribe.apply(this, e);
                        return this.last = r, n
                    }, ObservableQuery.prototype.observe = function() {
                        this.reportResult(this.getCurrentResult(!1), this.variables)
                    }, ObservableQuery.prototype.reportResult = function(e, t) {
                        var r = this.getLastError(),
                            n = this.isDifferentFromLastResult(e, t);
                        (r || !e.partial || this.options.returnPartialData) && this.updateLastResult(e, t), (r || n) && iterateObserversSafely(this.observers, "next", e)
                    }, ObservableQuery.prototype.reportError = function(e, t) {
                        var r = (0, n.__assign)((0, n.__assign)({}, this.getLastResult()), {
                            error: e,
                            errors: e.graphQLErrors,
                            networkStatus: er.Ie.error,
                            loading: !1
                        });
                        this.updateLastResult(r, t), iterateObserversSafely(this.observers, "error", this.last.error = e)
                    }, ObservableQuery.prototype.hasObservers = function() {
                        return this.observers.size > 0
                    }, ObservableQuery.prototype.tearDownQuery = function() {
                        this.isTornDown || (this.concast && this.observer && (this.concast.removeObserver(this.observer), delete this.concast, delete this.observer), this.stopPolling(), this.subscriptions.forEach(function(e) {
                            return e.unsubscribe()
                        }), this.subscriptions.clear(), this.queryManager.stopQuery(this.queryId), this.observers.clear(), this.isTornDown = !0)
                    }, ObservableQuery.prototype.transformDocument = function(e) {
                        return this.queryManager.transform(e)
                    }, ObservableQuery
                }(l);

            function reobserveCacheFirst(e) {
                var t = e.options,
                    r = t.fetchPolicy,
                    n = t.nextFetchPolicy;
                return "cache-and-network" === r || "network-only" === r ? e.reobserve({
                    fetchPolicy: "cache-first",
                    nextFetchPolicy: function(e, t) {
                        return (this.nextFetchPolicy = n, "function" == typeof this.nextFetchPolicy) ? this.nextFetchPolicy(e, t) : r
                    }
                }) : e.reobserve()
            }

            function defaultSubscriptionObserverErrorCallback(e) {
                !1 !== globalThis.__DEV__ && i.kG.error(23, e.message, e.stack)
            }

            function logMissingFieldErrors(e) {
                !1 !== globalThis.__DEV__ && e && !1 !== globalThis.__DEV__ && i.kG.debug(24, e)
            }

            function skipCacheDataFor(e) {
                return "network-only" === e || "no-cache" === e || "standby" === e
            }
            fixObservableSubclass(ec);
            var eu = r(55459);

            function isSelectionNode(e) {
                return e.kind === eu.h.FIELD || e.kind === eu.h.FRAGMENT_SPREAD || e.kind === eu.h.INLINE_FRAGMENT
            }
            var el = r(86048),
                ed = function() {
                    function LocalState(e) {
                        var t = e.cache,
                            r = e.client,
                            n = e.resolvers,
                            i = e.fragmentMatcher;
                        this.selectionsToResolveCache = new WeakMap, this.cache = t, r && (this.client = r), n && this.addResolvers(n), i && this.setFragmentMatcher(i)
                    }
                    return LocalState.prototype.addResolvers = function(e) {
                        var t = this;
                        this.resolvers = this.resolvers || {}, Array.isArray(e) ? e.forEach(function(e) {
                            t.resolvers = (0, T.Ee)(t.resolvers, e)
                        }) : this.resolvers = (0, T.Ee)(this.resolvers, e)
                    }, LocalState.prototype.setResolvers = function(e) {
                        this.resolvers = {}, this.addResolvers(e)
                    }, LocalState.prototype.getResolvers = function() {
                        return this.resolvers || {}
                    }, LocalState.prototype.runResolvers = function(e) {
                        var t = e.document,
                            r = e.remoteResult,
                            i = e.context,
                            o = e.variables,
                            a = e.onlyRunForcedResolvers,
                            s = void 0 !== a && a;
                        return (0, n.__awaiter)(this, void 0, void 0, function() {
                            return (0, n.__generator)(this, function(e) {
                                return t ? [2, this.resolveDocument(t, r.data, i, o, this.fragmentMatcher, s).then(function(e) {
                                    return (0, n.__assign)((0, n.__assign)({}, r), {
                                        data: e.result
                                    })
                                })] : [2, r]
                            })
                        })
                    }, LocalState.prototype.setFragmentMatcher = function(e) {
                        this.fragmentMatcher = e
                    }, LocalState.prototype.getFragmentMatcher = function() {
                        return this.fragmentMatcher
                    }, LocalState.prototype.clientQuery = function(e) {
                        return (0, g.FS)(["client"], e) && this.resolvers ? e : null
                    }, LocalState.prototype.serverQuery = function(e) {
                        return (0, z.ob)(e)
                    }, LocalState.prototype.prepareContext = function(e) {
                        var t = this.cache;
                        return (0, n.__assign)((0, n.__assign)({}, e), {
                            cache: t,
                            getCacheKey: function(e) {
                                return t.identify(e)
                            }
                        })
                    }, LocalState.prototype.addExportedVariables = function(e, t, r) {
                        return void 0 === t && (t = {}), void 0 === r && (r = {}), (0, n.__awaiter)(this, void 0, void 0, function() {
                            return (0, n.__generator)(this, function(i) {
                                return e ? [2, this.resolveDocument(e, this.buildRootValueFromCache(e, t) || {}, this.prepareContext(r), t).then(function(e) {
                                    return (0, n.__assign)((0, n.__assign)({}, t), e.exportedVariables)
                                })] : [2, (0, n.__assign)({}, t)]
                            })
                        })
                    }, LocalState.prototype.shouldForceResolvers = function(e) {
                        var t = !1;
                        return (0, F.Vn)(e, {
                            Directive: {
                                enter: function(e) {
                                    if ("client" === e.name.value && e.arguments && (t = e.arguments.some(function(e) {
                                            return "always" === e.name.value && "BooleanValue" === e.value.kind && !0 === e.value.value
                                        }))) return F.$_
                                }
                            }
                        }), t
                    }, LocalState.prototype.buildRootValueFromCache = function(e, t) {
                        return this.cache.diff({
                            query: (0, z.aL)(e),
                            variables: t,
                            returnPartialData: !0,
                            optimistic: !1
                        }).result
                    }, LocalState.prototype.resolveDocument = function(e, t, r, i, o, a) {
                        return void 0 === r && (r = {}), void 0 === i && (i = {}), void 0 === o && (o = function() {
                            return !0
                        }), void 0 === a && (a = !1), (0, n.__awaiter)(this, void 0, void 0, function() {
                            var s, c, u, l, f, p, y, g, v, E;
                            return (0, n.__generator)(this, function(_) {
                                return s = (0, d.p$)(e), c = (0, d.kU)(e), u = (0, eo.F)(c), l = this.collectSelectionsToResolve(s, u), p = (f = s.operation) ? f.charAt(0).toUpperCase() + f.slice(1) : "Query", y = this, g = y.cache, v = y.client, E = {
                                    fragmentMap: u,
                                    context: (0, n.__assign)((0, n.__assign)({}, r), {
                                        cache: g,
                                        client: v
                                    }),
                                    variables: i,
                                    fragmentMatcher: o,
                                    defaultOperationType: p,
                                    exportedVariables: {},
                                    selectionsToResolve: l,
                                    onlyRunForcedResolvers: a
                                }, [2, this.resolveSelectionSet(s.selectionSet, !1, t, E).then(function(e) {
                                    return {
                                        result: e,
                                        exportedVariables: E.exportedVariables
                                    }
                                })]
                            })
                        })
                    }, LocalState.prototype.resolveSelectionSet = function(e, t, r, o) {
                        return (0, n.__awaiter)(this, void 0, void 0, function() {
                            var a, s, c, u, l, d = this;
                            return (0, n.__generator)(this, function(f) {
                                return a = o.fragmentMap, s = o.context, c = o.variables, u = [r], l = function(e) {
                                    return (0, n.__awaiter)(d, void 0, void 0, function() {
                                        var l, d;
                                        return (0, n.__generator)(this, function(n) {
                                            return (t || o.selectionsToResolve.has(e)) && (0, g.LZ)(e, c) ? (0, Y.My)(e) ? [2, this.resolveField(e, t, r, o).then(function(t) {
                                                var r;
                                                void 0 !== t && u.push(((r = {})[(0, Y.u2)(e)] = t, r))
                                            })] : ((0, Y.Ao)(e) ? l = e : (l = a[e.name.value], (0, i.kG)(l, 18, e.name.value)), l && l.typeCondition && (d = l.typeCondition.name.value, o.fragmentMatcher(r, d, s))) ? [2, this.resolveSelectionSet(l.selectionSet, t, r, o).then(function(e) {
                                                u.push(e)
                                            })] : [2] : [2]
                                        })
                                    })
                                }, [2, Promise.all(e.selections.map(l)).then(function() {
                                    return (0, T.bw)(u)
                                })]
                            })
                        })
                    }, LocalState.prototype.resolveField = function(e, t, r, i) {
                        return (0, n.__awaiter)(this, void 0, void 0, function() {
                            var o, a, s, c, u, l, d, f, p, y = this;
                            return (0, n.__generator)(this, function(n) {
                                return r ? (o = i.variables, c = (a = e.name.value) !== (s = (0, Y.u2)(e)), l = Promise.resolve(u = r[s] || r[a]), (!i.onlyRunForcedResolvers || this.shouldForceResolvers(e)) && (d = r.__typename || i.defaultOperationType, (f = this.resolvers && this.resolvers[d]) && (p = f[c ? a : s]) && (l = Promise.resolve(el.ab.withValue(this.cache, p, [r, (0, Y.NC)(e, o), i.context, {
                                    field: e,
                                    fragmentMap: i.fragmentMap
                                }])))), [2, l.then(function(r) {
                                    if (void 0 === r && (r = u), e.directives && e.directives.forEach(function(e) {
                                            "export" === e.name.value && e.arguments && e.arguments.forEach(function(e) {
                                                "as" === e.name.value && "StringValue" === e.value.kind && (i.exportedVariables[e.value.value] = r)
                                            })
                                        }), !e.selectionSet || null == r) return r;
                                    var n, o, a = null !== (o = null === (n = e.directives) || void 0 === n ? void 0 : n.some(function(e) {
                                        return "client" === e.name.value
                                    })) && void 0 !== o && o;
                                    return Array.isArray(r) ? y.resolveSubSelectedArray(e, t || a, r, i) : e.selectionSet ? y.resolveSelectionSet(e.selectionSet, t || a, r, i) : void 0
                                })]) : [2, null]
                            })
                        })
                    }, LocalState.prototype.resolveSubSelectedArray = function(e, t, r, n) {
                        var i = this;
                        return Promise.all(r.map(function(r) {
                            return null === r ? null : Array.isArray(r) ? i.resolveSubSelectedArray(e, t, r, n) : e.selectionSet ? i.resolveSelectionSet(e.selectionSet, t, r, n) : void 0
                        }))
                    }, LocalState.prototype.collectSelectionsToResolve = function(e, t) {
                        var isSingleASTNode = function(e) {
                                return !Array.isArray(e)
                            },
                            r = this.selectionsToResolveCache;
                        return function collectByDefinition(e) {
                            if (!r.has(e)) {
                                var n = new Set;
                                r.set(e, n), (0, F.Vn)(e, {
                                    Directive: function(e, t, r, i, o) {
                                        "client" === e.name.value && o.forEach(function(e) {
                                            isSingleASTNode(e) && isSelectionNode(e) && n.add(e)
                                        })
                                    },
                                    FragmentSpread: function(e, r, o, a, s) {
                                        var c = t[e.name.value];
                                        (0, i.kG)(c, 19, e.name.value);
                                        var u = collectByDefinition(c);
                                        u.size > 0 && (s.forEach(function(e) {
                                            isSingleASTNode(e) && isSelectionNode(e) && n.add(e)
                                        }), n.add(e), u.forEach(function(e) {
                                            n.add(e)
                                        }))
                                    }
                                })
                            }
                            return r.get(e)
                        }(e)
                    }, LocalState
                }(),
                ef = new(v.mr ? WeakMap : Map);

            function wrapDestructiveCacheMethod(e, t) {
                var r = e[t];
                "function" == typeof r && (e[t] = function() {
                    return ef.set(e, (ef.get(e) + 1) % 1e15), r.apply(this, arguments)
                })
            }

            function cancelNotifyTimeout(e) {
                e.notifyTimeout && (clearTimeout(e.notifyTimeout), e.notifyTimeout = void 0)
            }
            var ep = function() {
                function QueryInfo(e, t) {
                    void 0 === t && (t = e.generateQueryId()), this.queryId = t, this.listeners = new Set, this.document = null, this.lastRequestId = 1, this.stopped = !1, this.dirty = !1, this.observableQuery = null;
                    var r = this.cache = e.cache;
                    ef.has(r) || (ef.set(r, 0), wrapDestructiveCacheMethod(r, "evict"), wrapDestructiveCacheMethod(r, "modify"), wrapDestructiveCacheMethod(r, "reset"))
                }
                return QueryInfo.prototype.init = function(e) {
                    var t = e.networkStatus || er.Ie.loading;
                    return this.variables && this.networkStatus !== er.Ie.loading && !(0, V.D)(this.variables, e.variables) && (t = er.Ie.setVariables), (0, V.D)(e.variables, this.variables) || (this.lastDiff = void 0), Object.assign(this, {
                        document: e.document,
                        variables: e.variables,
                        networkError: null,
                        graphQLErrors: this.graphQLErrors || [],
                        networkStatus: t
                    }), e.observableQuery && this.setObservableQuery(e.observableQuery), e.lastRequestId && (this.lastRequestId = e.lastRequestId), this
                }, QueryInfo.prototype.reset = function() {
                    cancelNotifyTimeout(this), this.dirty = !1
                }, QueryInfo.prototype.getDiff = function() {
                    var e = this.getDiffOptions();
                    if (this.lastDiff && (0, V.D)(e, this.lastDiff.options)) return this.lastDiff.diff;
                    this.updateWatch(this.variables);
                    var t = this.observableQuery;
                    if (t && "no-cache" === t.options.fetchPolicy) return {
                        complete: !1
                    };
                    var r = this.cache.diff(e);
                    return this.updateLastDiff(r, e), r
                }, QueryInfo.prototype.updateLastDiff = function(e, t) {
                    this.lastDiff = e ? {
                        diff: e,
                        options: t || this.getDiffOptions()
                    } : void 0
                }, QueryInfo.prototype.getDiffOptions = function(e) {
                    var t;
                    return void 0 === e && (e = this.variables), {
                        query: this.document,
                        variables: e,
                        returnPartialData: !0,
                        optimistic: !0,
                        canonizeResults: null === (t = this.observableQuery) || void 0 === t ? void 0 : t.options.canonizeResults
                    }
                }, QueryInfo.prototype.setDiff = function(e) {
                    var t = this,
                        r = this.lastDiff && this.lastDiff.diff;
                    this.updateLastDiff(e), this.dirty || (0, V.D)(r && r.result, e && e.result) || (this.dirty = !0, this.notifyTimeout || (this.notifyTimeout = setTimeout(function() {
                        return t.notify()
                    }, 0)))
                }, QueryInfo.prototype.setObservableQuery = function(e) {
                    var t = this;
                    e !== this.observableQuery && (this.oqListener && this.listeners.delete(this.oqListener), this.observableQuery = e, e ? (e.queryInfo = this, this.listeners.add(this.oqListener = function() {
                        t.getDiff().fromOptimisticTransaction ? e.observe() : reobserveCacheFirst(e)
                    })) : delete this.oqListener)
                }, QueryInfo.prototype.notify = function() {
                    var e = this;
                    cancelNotifyTimeout(this), this.shouldNotify() && this.listeners.forEach(function(t) {
                        return t(e)
                    }), this.dirty = !1
                }, QueryInfo.prototype.shouldNotify = function() {
                    if (!this.dirty || !this.listeners.size) return !1;
                    if ((0, er.Oj)(this.networkStatus) && this.observableQuery) {
                        var e = this.observableQuery.options.fetchPolicy;
                        if ("cache-only" !== e && "cache-and-network" !== e) return !1
                    }
                    return !0
                }, QueryInfo.prototype.stop = function() {
                    if (!this.stopped) {
                        this.stopped = !0, this.reset(), this.cancel(), this.cancel = QueryInfo.prototype.cancel;
                        var e = this.observableQuery;
                        e && e.stopPolling()
                    }
                }, QueryInfo.prototype.cancel = function() {}, QueryInfo.prototype.updateWatch = function(e) {
                    var t = this;
                    void 0 === e && (e = this.variables);
                    var r = this.observableQuery;
                    if (!r || "no-cache" !== r.options.fetchPolicy) {
                        var i = (0, n.__assign)((0, n.__assign)({}, this.getDiffOptions(e)), {
                            watcher: this,
                            callback: function(e) {
                                return t.setDiff(e)
                            }
                        });
                        this.lastWatch && (0, V.D)(i, this.lastWatch) || (this.cancel(), this.cancel = this.cache.watch(this.lastWatch = i))
                    }
                }, QueryInfo.prototype.resetLastWrite = function() {
                    this.lastWrite = void 0
                }, QueryInfo.prototype.shouldWrite = function(e, t) {
                    var r = this.lastWrite;
                    return !(r && r.dmCount === ef.get(this.cache) && (0, V.D)(t, r.variables) && (0, V.D)(e.data, r.result.data))
                }, QueryInfo.prototype.markResult = function(e, t, r, n) {
                    var i = this,
                        o = new T.w0,
                        a = (0, P.O)(e.errors) ? e.errors.slice(0) : [];
                    if (this.reset(), "incremental" in e && (0, P.O)(e.incremental)) {
                        var s = mergeIncrementalData(this.getDiff().result, e);
                        e.data = s
                    } else if ("hasNext" in e && e.hasNext) {
                        var c = this.getDiff();
                        e.data = o.merge(c.result, e.data)
                    }
                    this.graphQLErrors = a, "no-cache" === r.fetchPolicy ? this.updateLastDiff({
                        result: e.data,
                        complete: !0
                    }, this.getDiffOptions(r.variables)) : 0 !== n && (shouldWriteResult(e, r.errorPolicy) ? this.cache.performTransaction(function(o) {
                        if (i.shouldWrite(e, r.variables)) o.writeQuery({
                            query: t,
                            data: e.data,
                            variables: r.variables,
                            overwrite: 1 === n
                        }), i.lastWrite = {
                            result: e,
                            variables: r.variables,
                            dmCount: ef.get(i.cache)
                        };
                        else if (i.lastDiff && i.lastDiff.diff.complete) {
                            e.data = i.lastDiff.diff.result;
                            return
                        }
                        var a = i.getDiffOptions(r.variables),
                            s = o.diff(a);
                        !i.stopped && (0, V.D)(i.variables, r.variables) && i.updateWatch(r.variables), i.updateLastDiff(s, a), s.complete && (e.data = s.result)
                    }) : this.lastWrite = void 0)
                }, QueryInfo.prototype.markReady = function() {
                    return this.networkError = null, this.networkStatus = er.Ie.ready
                }, QueryInfo.prototype.markError = function(e) {
                    return this.networkStatus = er.Ie.error, this.lastWrite = void 0, this.reset(), e.graphQLErrors && (this.graphQLErrors = e.graphQLErrors), e.networkError && (this.networkError = e.networkError), e
                }, QueryInfo
            }();

            function shouldWriteResult(e, t) {
                void 0 === t && (t = "none");
                var r = "ignore" === t || "all" === t,
                    n = !graphQLResultHasError(e);
                return !n && r && e.data && (n = !0), n
            }
            var eh = Object.prototype.hasOwnProperty,
                em = function() {
                    function QueryManager(e) {
                        var t = e.cache,
                            r = e.link,
                            n = e.defaultOptions,
                            i = e.documentTransform,
                            o = e.queryDeduplication,
                            a = e.onBroadcast,
                            s = e.ssrMode,
                            c = e.clientAwareness,
                            u = e.localState,
                            l = e.assumeImmutableResults,
                            d = void 0 === l ? !!t.assumeImmutableResults : l,
                            f = this;
                        this.clientAwareness = {}, this.queries = new Map, this.fetchCancelFns = new Map, this.transformCache = new(v.mr ? WeakMap : Map), this.queryIdCounter = 1, this.requestIdCounter = 1, this.mutationIdCounter = 1, this.inFlightLinkObservables = new Map;
                        var p = new K.A(function(e) {
                            return f.cache.transformDocument(e)
                        }, {
                            cache: !1
                        });
                        this.cache = t, this.link = r, this.defaultOptions = n || Object.create(null), this.queryDeduplication = void 0 !== o && o, this.clientAwareness = void 0 === c ? {} : c, this.localState = u || new ed({
                            cache: t
                        }), this.ssrMode = void 0 !== s && s, this.assumeImmutableResults = d, this.documentTransform = i ? p.concat(i).concat(p) : p, (this.onBroadcast = a) && (this.mutationStore = Object.create(null))
                    }
                    return QueryManager.prototype.stop = function() {
                        var e = this;
                        this.queries.forEach(function(t, r) {
                            e.stopQueryNoBroadcast(r)
                        }), this.cancelPendingFetches((0, i._K)(25))
                    }, QueryManager.prototype.cancelPendingFetches = function(e) {
                        this.fetchCancelFns.forEach(function(t) {
                            return t(e)
                        }), this.fetchCancelFns.clear()
                    }, QueryManager.prototype.mutate = function(e) {
                        var t, r, o = e.mutation,
                            a = e.variables,
                            s = e.optimisticResponse,
                            c = e.updateQueries,
                            u = e.refetchQueries,
                            l = void 0 === u ? [] : u,
                            d = e.awaitRefetchQueries,
                            f = void 0 !== d && d,
                            p = e.update,
                            y = e.onQueryUpdated,
                            g = e.fetchPolicy,
                            v = void 0 === g ? (null === (t = this.defaultOptions.mutate) || void 0 === t ? void 0 : t.fetchPolicy) || "network-only" : g,
                            _ = e.errorPolicy,
                            P = void 0 === _ ? (null === (r = this.defaultOptions.mutate) || void 0 === r ? void 0 : r.errorPolicy) || "none" : _,
                            T = e.keepRootFields,
                            x = e.context;
                        return (0, n.__awaiter)(this, void 0, void 0, function() {
                            var e, t, r, u;
                            return (0, n.__generator)(this, function(d) {
                                switch (d.label) {
                                    case 0:
                                        if ((0, i.kG)(o, 26), (0, i.kG)("network-only" === v || "no-cache" === v, 27), e = this.generateMutationId(), o = this.cache.transformForLink(this.transform(o)), t = this.getDocumentInfo(o).hasClientExports, a = this.getVariables(o, a), !t) return [3, 2];
                                        return [4, this.localState.addExportedVariables(o, a, x)];
                                    case 1:
                                        a = d.sent(), d.label = 2;
                                    case 2:
                                        return r = this.mutationStore && (this.mutationStore[e] = {
                                            mutation: o,
                                            variables: a,
                                            loading: !0,
                                            error: null
                                        }), s && this.markMutationOptimistic(s, {
                                            mutationId: e,
                                            document: o,
                                            variables: a,
                                            fetchPolicy: v,
                                            errorPolicy: P,
                                            context: x,
                                            updateQueries: c,
                                            update: p,
                                            keepRootFields: T
                                        }), this.broadcastQueries(), u = this, [2, new Promise(function(t, i) {
                                            return asyncMap(u.getObservableFromLink(o, (0, n.__assign)((0, n.__assign)({}, x), {
                                                optimisticResponse: s
                                            }), a, !1), function(t) {
                                                if (graphQLResultHasError(t) && "none" === P) throw new E.cA({
                                                    graphQLErrors: getGraphQLErrorsFromResult(t)
                                                });
                                                r && (r.loading = !1, r.error = null);
                                                var i = (0, n.__assign)({}, t);
                                                return "function" == typeof l && (l = l(i)), "ignore" === P && graphQLResultHasError(i) && delete i.errors, u.markMutationResult({
                                                    mutationId: e,
                                                    result: i,
                                                    document: o,
                                                    variables: a,
                                                    fetchPolicy: v,
                                                    errorPolicy: P,
                                                    context: x,
                                                    update: p,
                                                    updateQueries: c,
                                                    awaitRefetchQueries: f,
                                                    refetchQueries: l,
                                                    removeOptimistic: s ? e : void 0,
                                                    onQueryUpdated: y,
                                                    keepRootFields: T
                                                })
                                            }).subscribe({
                                                next: function(e) {
                                                    u.broadcastQueries(), "hasNext" in e && !1 !== e.hasNext || t(e)
                                                },
                                                error: function(t) {
                                                    r && (r.loading = !1, r.error = t), s && u.cache.removeOptimistic(e), u.broadcastQueries(), i(t instanceof E.cA ? t : new E.cA({
                                                        networkError: t
                                                    }))
                                                }
                                            })
                                        })]
                                }
                            })
                        })
                    }, QueryManager.prototype.markMutationResult = function(e, t) {
                        var r = this;
                        void 0 === t && (t = this.cache);
                        var i = e.result,
                            o = [],
                            a = "no-cache" === e.fetchPolicy;
                        if (!a && shouldWriteResult(i, e.errorPolicy)) {
                            if (isExecutionPatchIncrementalResult(i) || o.push({
                                    result: i.data,
                                    dataId: "ROOT_MUTATION",
                                    query: e.document,
                                    variables: e.variables
                                }), isExecutionPatchIncrementalResult(i) && (0, P.O)(i.incremental)) {
                                var s = t.diff({
                                        id: "ROOT_MUTATION",
                                        query: this.getDocumentInfo(e.document).asQuery,
                                        variables: e.variables,
                                        optimistic: !1,
                                        returnPartialData: !0
                                    }),
                                    c = void 0;
                                s.result && (c = mergeIncrementalData(s.result, i)), void 0 !== c && (i.data = c, o.push({
                                    result: c,
                                    dataId: "ROOT_MUTATION",
                                    query: e.document,
                                    variables: e.variables
                                }))
                            }
                            var u = e.updateQueries;
                            u && this.queries.forEach(function(e, n) {
                                var a = e.observableQuery,
                                    s = a && a.queryName;
                                if (s && eh.call(u, s)) {
                                    var c = u[s],
                                        l = r.queries.get(n),
                                        f = l.document,
                                        p = l.variables,
                                        y = t.diff({
                                            query: f,
                                            variables: p,
                                            returnPartialData: !0,
                                            optimistic: !1
                                        }),
                                        g = y.result;
                                    if (y.complete && g) {
                                        var v = c(g, {
                                            mutationResult: i,
                                            queryName: f && (0, d.rY)(f) || void 0,
                                            queryVariables: p
                                        });
                                        v && o.push({
                                            result: v,
                                            dataId: "ROOT_QUERY",
                                            query: f,
                                            variables: p
                                        })
                                    }
                                }
                            })
                        }
                        if (o.length > 0 || e.refetchQueries || e.update || e.onQueryUpdated || e.removeOptimistic) {
                            var l = [];
                            if (this.refetchQueries({
                                    updateCache: function(t) {
                                        a || o.forEach(function(e) {
                                            return t.write(e)
                                        });
                                        var s, c = e.update,
                                            u = !(isExecutionPatchIncrementalResult(s = i) || "hasNext" in s && "data" in s) || isExecutionPatchIncrementalResult(i) && !i.hasNext;
                                        if (c) {
                                            if (!a) {
                                                var l = t.diff({
                                                    id: "ROOT_MUTATION",
                                                    query: r.getDocumentInfo(e.document).asQuery,
                                                    variables: e.variables,
                                                    optimistic: !1,
                                                    returnPartialData: !0
                                                });
                                                l.complete && ("incremental" in (i = (0, n.__assign)((0, n.__assign)({}, i), {
                                                    data: l.result
                                                })) && delete i.incremental, "hasNext" in i && delete i.hasNext)
                                            }
                                            u && c(t, i, {
                                                context: e.context,
                                                variables: e.variables
                                            })
                                        }
                                        a || e.keepRootFields || !u || t.modify({
                                            id: "ROOT_MUTATION",
                                            fields: function(e, t) {
                                                var r = t.fieldName,
                                                    n = t.DELETE;
                                                return "__typename" === r ? e : n
                                            }
                                        })
                                    },
                                    include: e.refetchQueries,
                                    optimistic: !1,
                                    removeOptimistic: e.removeOptimistic,
                                    onQueryUpdated: e.onQueryUpdated || null
                                }).forEach(function(e) {
                                    return l.push(e)
                                }), e.awaitRefetchQueries || e.onQueryUpdated) return Promise.all(l).then(function() {
                                return i
                            })
                        }
                        return Promise.resolve(i)
                    }, QueryManager.prototype.markMutationOptimistic = function(e, t) {
                        var r = this,
                            o = "function" == typeof e ? e(t.variables) : e;
                        return this.cache.recordOptimisticTransaction(function(e) {
                            try {
                                r.markMutationResult((0, n.__assign)((0, n.__assign)({}, t), {
                                    result: {
                                        data: o
                                    }
                                }), e)
                            } catch (e) {
                                !1 !== globalThis.__DEV__ && i.kG.error(e)
                            }
                        }, t.mutationId)
                    }, QueryManager.prototype.fetchQuery = function(e, t, r) {
                        return this.fetchConcastWithInfo(e, t, r).concast.promise
                    }, QueryManager.prototype.getQueryStore = function() {
                        var e = Object.create(null);
                        return this.queries.forEach(function(t, r) {
                            e[r] = {
                                variables: t.variables,
                                networkStatus: t.networkStatus,
                                networkError: t.networkError,
                                graphQLErrors: t.graphQLErrors
                            }
                        }), e
                    }, QueryManager.prototype.resetErrors = function(e) {
                        var t = this.queries.get(e);
                        t && (t.networkError = void 0, t.graphQLErrors = [])
                    }, QueryManager.prototype.transform = function(e) {
                        return this.documentTransform.transformDocument(e)
                    }, QueryManager.prototype.getDocumentInfo = function(e) {
                        var t = this.transformCache;
                        if (!t.has(e)) {
                            var r = {
                                hasClientExports: (0, g.mj)(e),
                                hasForcedResolvers: this.localState.shouldForceResolvers(e),
                                hasNonreactiveDirective: (0, g.FS)(["nonreactive"], e),
                                clientQuery: this.localState.clientQuery(e),
                                serverQuery: (0, z.bi)([{
                                    name: "client",
                                    remove: !0
                                }, {
                                    name: "connection"
                                }, {
                                    name: "nonreactive"
                                }], e),
                                defaultVars: (0, d.O4)((0, d.$H)(e)),
                                asQuery: (0, n.__assign)((0, n.__assign)({}, e), {
                                    definitions: e.definitions.map(function(e) {
                                        return "OperationDefinition" === e.kind && "query" !== e.operation ? (0, n.__assign)((0, n.__assign)({}, e), {
                                            operation: "query"
                                        }) : e
                                    })
                                })
                            };
                            t.set(e, r)
                        }
                        return t.get(e)
                    }, QueryManager.prototype.getVariables = function(e, t) {
                        return (0, n.__assign)((0, n.__assign)({}, this.getDocumentInfo(e).defaultVars), t)
                    }, QueryManager.prototype.watchQuery = function(e) {
                        var t = this.transform(e.query);
                        void 0 === (e = (0, n.__assign)((0, n.__assign)({}, e), {
                            variables: this.getVariables(t, e.variables)
                        })).notifyOnNetworkStatusChange && (e.notifyOnNetworkStatusChange = !1);
                        var r = new ep(this),
                            i = new ec({
                                queryManager: this,
                                queryInfo: r,
                                options: e
                            });
                        return i.lastQuery = t, this.queries.set(i.queryId, r), r.init({
                            document: t,
                            observableQuery: i,
                            variables: i.variables
                        }), i
                    }, QueryManager.prototype.query = function(e, t) {
                        var r = this;
                        return void 0 === t && (t = this.generateQueryId()), (0, i.kG)(e.query, 28), (0, i.kG)("Document" === e.query.kind, 29), (0, i.kG)(!e.returnPartialData, 30), (0, i.kG)(!e.pollInterval, 31), this.fetchQuery(t, (0, n.__assign)((0, n.__assign)({}, e), {
                            query: this.transform(e.query)
                        })).finally(function() {
                            return r.stopQuery(t)
                        })
                    }, QueryManager.prototype.generateQueryId = function() {
                        return String(this.queryIdCounter++)
                    }, QueryManager.prototype.generateRequestId = function() {
                        return this.requestIdCounter++
                    }, QueryManager.prototype.generateMutationId = function() {
                        return String(this.mutationIdCounter++)
                    }, QueryManager.prototype.stopQueryInStore = function(e) {
                        this.stopQueryInStoreNoBroadcast(e), this.broadcastQueries()
                    }, QueryManager.prototype.stopQueryInStoreNoBroadcast = function(e) {
                        var t = this.queries.get(e);
                        t && t.stop()
                    }, QueryManager.prototype.clearStore = function(e) {
                        return void 0 === e && (e = {
                            discardWatches: !0
                        }), this.cancelPendingFetches((0, i._K)(32)), this.queries.forEach(function(e) {
                            e.observableQuery ? e.networkStatus = er.Ie.loading : e.stop()
                        }), this.mutationStore && (this.mutationStore = Object.create(null)), this.cache.reset(e)
                    }, QueryManager.prototype.getObservableQueries = function(e) {
                        var t = this;
                        void 0 === e && (e = "active");
                        var r = new Map,
                            o = new Map,
                            a = new Set;
                        return Array.isArray(e) && e.forEach(function(e) {
                            "string" == typeof e ? o.set(e, !1) : (0, Y.JW)(e) ? o.set(t.transform(e), !1) : (0, _.s)(e) && e.query && a.add(e)
                        }), this.queries.forEach(function(t, n) {
                            var i = t.observableQuery,
                                a = t.document;
                            if (i) {
                                if ("all" === e) {
                                    r.set(n, i);
                                    return
                                }
                                var s = i.queryName;
                                if ("standby" === i.options.fetchPolicy || "active" === e && !i.hasObservers()) return;
                                ("active" === e || s && o.has(s) || a && o.has(a)) && (r.set(n, i), s && o.set(s, !0), a && o.set(a, !0))
                            }
                        }), a.size && a.forEach(function(e) {
                            var o = (0, J.X)("legacyOneTimeQuery"),
                                a = t.getQuery(o).init({
                                    document: e.query,
                                    variables: e.variables
                                }),
                                s = new ec({
                                    queryManager: t,
                                    queryInfo: a,
                                    options: (0, n.__assign)((0, n.__assign)({}, e), {
                                        fetchPolicy: "network-only"
                                    })
                                });
                            (0, i.kG)(s.queryId === o), a.setObservableQuery(s), r.set(o, s)
                        }), !1 !== globalThis.__DEV__ && o.size && o.forEach(function(e, t) {
                            e || !1 === globalThis.__DEV__ || i.kG.warn("string" == typeof t ? 33 : 34, t)
                        }), r
                    }, QueryManager.prototype.reFetchObservableQueries = function(e) {
                        var t = this;
                        void 0 === e && (e = !1);
                        var r = [];
                        return this.getObservableQueries(e ? "all" : "active").forEach(function(n, i) {
                            var o = n.options.fetchPolicy;
                            n.resetLastResults(), (e || "standby" !== o && "cache-only" !== o) && r.push(n.refetch()), t.getQuery(i).setDiff(null)
                        }), this.broadcastQueries(), Promise.all(r)
                    }, QueryManager.prototype.setObservableQuery = function(e) {
                        this.getQuery(e.queryId).setObservableQuery(e)
                    }, QueryManager.prototype.startGraphQLSubscription = function(e) {
                        var t = this,
                            r = e.query,
                            n = e.fetchPolicy,
                            i = e.errorPolicy,
                            o = void 0 === i ? "none" : i,
                            a = e.variables,
                            s = e.context,
                            c = void 0 === s ? {} : s;
                        r = this.transform(r), a = this.getVariables(r, a);
                        var makeObservable = function(e) {
                            return t.getObservableFromLink(r, c, e).map(function(i) {
                                "no-cache" !== n && (shouldWriteResult(i, o) && t.cache.write({
                                    query: r,
                                    result: i.data,
                                    dataId: "ROOT_SUBSCRIPTION",
                                    variables: e
                                }), t.broadcastQueries());
                                var a = graphQLResultHasError(i),
                                    s = (0, E.ls)(i);
                                if (a || s) {
                                    var c = {};
                                    if (a && (c.graphQLErrors = i.errors), s && (c.protocolErrors = i.extensions[E.YG]), "none" === o || s) throw new E.cA(c)
                                }
                                return "ignore" === o && delete i.errors, i
                            })
                        };
                        if (this.getDocumentInfo(r).hasClientExports) {
                            var u = this.localState.addExportedVariables(r, a, c).then(makeObservable);
                            return new l(function(e) {
                                var t = null;
                                return u.then(function(r) {
                                        return t = r.subscribe(e)
                                    }, e.error),
                                    function() {
                                        return t && t.unsubscribe()
                                    }
                            })
                        }
                        return makeObservable(a)
                    }, QueryManager.prototype.stopQuery = function(e) {
                        this.stopQueryNoBroadcast(e), this.broadcastQueries()
                    }, QueryManager.prototype.stopQueryNoBroadcast = function(e) {
                        this.stopQueryInStoreNoBroadcast(e), this.removeQuery(e)
                    }, QueryManager.prototype.removeQuery = function(e) {
                        this.fetchCancelFns.delete(e), this.queries.has(e) && (this.getQuery(e).stop(), this.queries.delete(e))
                    }, QueryManager.prototype.broadcastQueries = function() {
                        this.onBroadcast && this.onBroadcast(), this.queries.forEach(function(e) {
                            return e.notify()
                        })
                    }, QueryManager.prototype.getLocalState = function() {
                        return this.localState
                    }, QueryManager.prototype.getObservableFromLink = function(e, t, r, i) {
                        var o, a, s = this;
                        void 0 === i && (i = null !== (o = null == t ? void 0 : t.queryDeduplication) && void 0 !== o ? o : this.queryDeduplication);
                        var c = this.getDocumentInfo(e),
                            u = c.serverQuery,
                            f = c.clientQuery;
                        if (u) {
                            var y = this.inFlightLinkObservables,
                                g = this.link,
                                v = {
                                    query: u,
                                    variables: r,
                                    operationName: (0, d.rY)(u) || void 0,
                                    context: this.prepareContext((0, n.__assign)((0, n.__assign)({}, t), {
                                        forceFetch: !i
                                    }))
                                };
                            if (t = v.context, i) {
                                var E = print_print(u),
                                    _ = y.get(E) || new Map;
                                y.set(E, _);
                                var P = (0, Q.B)(r);
                                if (!(a = _.get(P))) {
                                    var T = new X([p(g, v)]);
                                    _.set(P, a = T), T.beforeNext(function() {
                                        _.delete(P) && _.size < 1 && y.delete(E)
                                    })
                                }
                            } else a = new X([p(g, v)])
                        } else a = new X([l.of({
                            data: {}
                        })]), t = this.prepareContext(t);
                        return f && (a = asyncMap(a, function(e) {
                            return s.localState.runResolvers({
                                document: f,
                                remoteResult: e,
                                context: t,
                                variables: r
                            })
                        })), a
                    }, QueryManager.prototype.getResultsFromLink = function(e, t, r) {
                        var n = e.lastRequestId = this.generateRequestId(),
                            i = this.cache.transformForLink(r.query);
                        return asyncMap(this.getObservableFromLink(i, r.context, r.variables), function(o) {
                            var a = getGraphQLErrorsFromResult(o),
                                s = a.length > 0;
                            if (n >= e.lastRequestId) {
                                if (s && "none" === r.errorPolicy) throw e.markError(new E.cA({
                                    graphQLErrors: a
                                }));
                                e.markResult(o, i, r, t), e.markReady()
                            }
                            var c = {
                                data: o.data,
                                loading: !1,
                                networkStatus: er.Ie.ready
                            };
                            return s && "ignore" !== r.errorPolicy && (c.errors = a, c.networkStatus = er.Ie.error), c
                        }, function(t) {
                            var r = (0, E.MS)(t) ? t : new E.cA({
                                networkError: t
                            });
                            throw n >= e.lastRequestId && e.markError(r), r
                        })
                    }, QueryManager.prototype.fetchConcastWithInfo = function(e, t, r, n) {
                        var i, o, a = this;
                        void 0 === r && (r = er.Ie.loading), void 0 === n && (n = t.query);
                        var s = this.getVariables(n, t.variables),
                            c = this.getQuery(e),
                            u = this.defaultOptions.watchQuery,
                            l = t.fetchPolicy,
                            d = void 0 === l ? u && u.fetchPolicy || "cache-first" : l,
                            f = t.errorPolicy,
                            p = void 0 === f ? u && u.errorPolicy || "none" : f,
                            y = t.returnPartialData,
                            g = t.notifyOnNetworkStatusChange,
                            v = t.context,
                            E = Object.assign({}, t, {
                                query: n,
                                variables: s,
                                fetchPolicy: d,
                                errorPolicy: p,
                                returnPartialData: void 0 !== y && y,
                                notifyOnNetworkStatusChange: void 0 !== g && g,
                                context: void 0 === v ? {} : v
                            }),
                            fromVariables = function(e) {
                                E.variables = e;
                                var n = a.fetchQueryByPolicy(c, E, r);
                                return "standby" !== E.fetchPolicy && n.sources.length > 0 && c.observableQuery && c.observableQuery.applyNextFetchPolicy("after-fetch", t), n
                            },
                            cleanupCancelFn = function() {
                                return a.fetchCancelFns.delete(e)
                            };
                        if (this.fetchCancelFns.set(e, function(e) {
                                cleanupCancelFn(), setTimeout(function() {
                                    return i.cancel(e)
                                })
                            }), this.getDocumentInfo(E.query).hasClientExports) i = new X(this.localState.addExportedVariables(E.query, E.variables, E.context).then(fromVariables).then(function(e) {
                            return e.sources
                        })), o = !0;
                        else {
                            var _ = fromVariables(E.variables);
                            o = _.fromLink, i = new X(_.sources)
                        }
                        return i.promise.then(cleanupCancelFn, cleanupCancelFn), {
                            concast: i,
                            fromLink: o
                        }
                    }, QueryManager.prototype.refetchQueries = function(e) {
                        var t = this,
                            r = e.updateCache,
                            n = e.include,
                            i = e.optimistic,
                            o = void 0 !== i && i,
                            a = e.removeOptimistic,
                            s = void 0 === a ? o ? (0, J.X)("refetchQueries") : void 0 : a,
                            c = e.onQueryUpdated,
                            u = new Map;
                        n && this.getObservableQueries(n).forEach(function(e, r) {
                            u.set(r, {
                                oq: e,
                                lastDiff: t.getQuery(r).getDiff()
                            })
                        });
                        var l = new Map;
                        return r && this.cache.batch({
                            update: r,
                            optimistic: o && s || !1,
                            removeOptimistic: s,
                            onWatchUpdated: function(e, t, r) {
                                var n = e.watcher instanceof ep && e.watcher.observableQuery;
                                if (n) {
                                    if (c) {
                                        u.delete(n.queryId);
                                        var i = c(n, t, r);
                                        return !0 === i && (i = n.refetch()), !1 !== i && l.set(n, i), i
                                    }
                                    null !== c && u.set(n.queryId, {
                                        oq: n,
                                        lastDiff: r,
                                        diff: t
                                    })
                                }
                            }
                        }), u.size && u.forEach(function(e, r) {
                            var n, i = e.oq,
                                o = e.lastDiff,
                                a = e.diff;
                            if (c) {
                                if (!a) {
                                    var s = i.queryInfo;
                                    s.reset(), a = s.getDiff()
                                }
                                n = c(i, a, o)
                            }
                            c && !0 !== n || (n = i.refetch()), !1 !== n && l.set(i, n), r.indexOf("legacyOneTimeQuery") >= 0 && t.stopQueryNoBroadcast(r)
                        }), s && this.cache.removeOptimistic(s), l
                    }, QueryManager.prototype.fetchQueryByPolicy = function(e, t, r) {
                        var i = this,
                            o = t.query,
                            a = t.variables,
                            s = t.fetchPolicy,
                            c = t.refetchWritePolicy,
                            u = t.errorPolicy,
                            d = t.returnPartialData,
                            f = t.context,
                            p = t.notifyOnNetworkStatusChange,
                            y = e.networkStatus;
                        e.init({
                            document: o,
                            variables: a,
                            networkStatus: r
                        });
                        var readCache = function() {
                                return e.getDiff()
                            },
                            resultsFromCache = function(t, r) {
                                void 0 === r && (r = e.networkStatus || er.Ie.loading);
                                var s = t.result;
                                !1 === globalThis.__DEV__ || d || (0, V.D)(s, {}) || logMissingFieldErrors(t.missing);
                                var fromData = function(e) {
                                    return l.of((0, n.__assign)({
                                        data: e,
                                        loading: (0, er.Oj)(r),
                                        networkStatus: r
                                    }, t.complete ? null : {
                                        partial: !0
                                    }))
                                };
                                return s && i.getDocumentInfo(o).hasForcedResolvers ? i.localState.runResolvers({
                                    document: o,
                                    remoteResult: {
                                        data: s
                                    },
                                    context: f,
                                    variables: a,
                                    onlyRunForcedResolvers: !0
                                }).then(function(e) {
                                    return fromData(e.data || void 0)
                                }) : "none" === u && r === er.Ie.refetch && Array.isArray(t.missing) ? fromData(void 0) : fromData(s)
                            },
                            g = "no-cache" === s ? 0 : r === er.Ie.refetch && "merge" !== c ? 1 : 2,
                            resultsFromLink = function() {
                                return i.getResultsFromLink(e, g, {
                                    query: o,
                                    variables: a,
                                    context: f,
                                    fetchPolicy: s,
                                    errorPolicy: u
                                })
                            },
                            v = p && "number" == typeof y && y !== r && (0, er.Oj)(r);
                        switch (s) {
                            default:
                                case "cache-first":
                                var E = readCache();
                            if (E.complete) return {
                                fromLink: !1,
                                sources: [resultsFromCache(E, e.markReady())]
                            };
                            if (d || v) return {
                                fromLink: !0,
                                sources: [resultsFromCache(E), resultsFromLink()]
                            };
                            return {
                                fromLink: !0,
                                sources: [resultsFromLink()]
                            };
                            case "cache-and-network":
                                    var E = readCache();
                                if (E.complete || d || v) return {
                                    fromLink: !0,
                                    sources: [resultsFromCache(E), resultsFromLink()]
                                };
                                return {
                                    fromLink: !0,
                                    sources: [resultsFromLink()]
                                };
                            case "cache-only":
                                    return {
                                    fromLink: !1,
                                    sources: [resultsFromCache(readCache(), e.markReady())]
                                };
                            case "network-only":
                                    if (v) return {
                                    fromLink: !0,
                                    sources: [resultsFromCache(readCache()), resultsFromLink()]
                                };
                                return {
                                    fromLink: !0,
                                    sources: [resultsFromLink()]
                                };
                            case "no-cache":
                                    if (v) return {
                                    fromLink: !0,
                                    sources: [resultsFromCache(e.getDiff()), resultsFromLink()]
                                };
                                return {
                                    fromLink: !0,
                                    sources: [resultsFromLink()]
                                };
                            case "standby":
                                    return {
                                    fromLink: !1,
                                    sources: []
                                }
                        }
                    }, QueryManager.prototype.getQuery = function(e) {
                        return e && !this.queries.has(e) && this.queries.set(e, new ep(this, e)), this.queries.get(e)
                    }, QueryManager.prototype.prepareContext = function(e) {
                        void 0 === e && (e = {});
                        var t = this.localState.prepareContext(e);
                        return (0, n.__assign)((0, n.__assign)({}, t), {
                            clientAwareness: this.clientAwareness
                        })
                    }, QueryManager
                }(),
                ey = r(17466),
                eb = !1,
                eg = function() {
                    function ApolloClient(e) {
                        var t = this;
                        if (this.resetStoreCallbacks = [], this.clearStoreCallbacks = [], !e.cache) throw (0, i._K)(15);
                        var r = e.uri,
                            n = e.credentials,
                            o = e.headers,
                            a = e.cache,
                            s = e.documentTransform,
                            c = e.ssrMode,
                            u = void 0 !== c && c,
                            l = e.ssrForceFetchDelay,
                            d = void 0 === l ? 0 : l,
                            p = e.connectToDevTools,
                            g = void 0 === p ? "object" == typeof window && !window.__APOLLO_CLIENT__ && !1 !== globalThis.__DEV__ : p,
                            v = e.queryDeduplication,
                            E = void 0 === v || v,
                            _ = e.defaultOptions,
                            P = e.assumeImmutableResults,
                            T = void 0 === P ? a.assumeImmutableResults : P,
                            x = e.resolvers,
                            A = e.typeDefs,
                            M = e.fragmentMatcher,
                            B = e.name,
                            F = e.version,
                            N = e.link;
                        N || (N = r ? new W({
                            uri: r,
                            credentials: n,
                            headers: o
                        }) : f.empty()), this.link = N, this.cache = a, this.disableNetworkFetches = u || d > 0, this.queryDeduplication = E, this.defaultOptions = _ || Object.create(null), this.typeDefs = A, d && setTimeout(function() {
                            return t.disableNetworkFetches = !1
                        }, d), this.watchQuery = this.watchQuery.bind(this), this.query = this.query.bind(this), this.mutate = this.mutate.bind(this), this.resetStore = this.resetStore.bind(this), this.reFetchObservableQueries = this.reFetchObservableQueries.bind(this), this.version = y.i, this.localState = new ed({
                            cache: a,
                            client: this,
                            resolvers: x,
                            fragmentMatcher: M
                        }), this.queryManager = new em({
                            cache: this.cache,
                            link: this.link,
                            defaultOptions: this.defaultOptions,
                            documentTransform: s,
                            queryDeduplication: E,
                            ssrMode: u,
                            clientAwareness: {
                                name: B,
                                version: F
                            },
                            localState: this.localState,
                            assumeImmutableResults: T,
                            onBroadcast: g ? function() {
                                t.devToolsHookCb && t.devToolsHookCb({
                                    action: {},
                                    state: {
                                        queries: t.queryManager.getQueryStore(),
                                        mutations: t.queryManager.mutationStore || {}
                                    },
                                    dataWithOptimisticResults: t.cache.extract(!0)
                                })
                            } : void 0
                        }), g && this.connectToDevTools()
                    }
                    return ApolloClient.prototype.connectToDevTools = function() {
                        if ("object" == typeof window) {
                            var e = window,
                                t = Symbol.for("apollo.devtools");
                            (e[t] = e[t] || []).push(this), e.__APOLLO_CLIENT__ = this
                        }
                        eb || !1 === globalThis.__DEV__ || (eb = !0, setTimeout(function() {
                            if ("undefined" != typeof window && window.document && window.top === window.self && !window.__APOLLO_DEVTOOLS_GLOBAL_HOOK__) {
                                var e = window.navigator,
                                    t = e && e.userAgent,
                                    r = void 0;
                                "string" == typeof t && (t.indexOf("Chrome/") > -1 ? r = "https://chrome.google.com/webstore/detail/apollo-client-developer-t/jdkknkkbebbapilgoeccciglkfbmbnfm" : t.indexOf("Firefox/") > -1 && (r = "https://addons.mozilla.org/en-US/firefox/addon/apollo-developer-tools/")), r && !1 !== globalThis.__DEV__ && i.kG.log("Download the Apollo DevTools for a better development experience: %s", r)
                            }
                        }, 1e4))
                    }, Object.defineProperty(ApolloClient.prototype, "documentTransform", {
                        get: function() {
                            return this.queryManager.documentTransform
                        },
                        enumerable: !1,
                        configurable: !0
                    }), ApolloClient.prototype.stop = function() {
                        this.queryManager.stop()
                    }, ApolloClient.prototype.watchQuery = function(e) {
                        return this.defaultOptions.watchQuery && (e = (0, ey.J)(this.defaultOptions.watchQuery, e)), this.disableNetworkFetches && ("network-only" === e.fetchPolicy || "cache-and-network" === e.fetchPolicy) && (e = (0, n.__assign)((0, n.__assign)({}, e), {
                            fetchPolicy: "cache-first"
                        })), this.queryManager.watchQuery(e)
                    }, ApolloClient.prototype.query = function(e) {
                        return this.defaultOptions.query && (e = (0, ey.J)(this.defaultOptions.query, e)), (0, i.kG)("cache-and-network" !== e.fetchPolicy, 16), this.disableNetworkFetches && "network-only" === e.fetchPolicy && (e = (0, n.__assign)((0, n.__assign)({}, e), {
                            fetchPolicy: "cache-first"
                        })), this.queryManager.query(e)
                    }, ApolloClient.prototype.mutate = function(e) {
                        return this.defaultOptions.mutate && (e = (0, ey.J)(this.defaultOptions.mutate, e)), this.queryManager.mutate(e)
                    }, ApolloClient.prototype.subscribe = function(e) {
                        return this.queryManager.startGraphQLSubscription(e)
                    }, ApolloClient.prototype.readQuery = function(e, t) {
                        return void 0 === t && (t = !1), this.cache.readQuery(e, t)
                    }, ApolloClient.prototype.readFragment = function(e, t) {
                        return void 0 === t && (t = !1), this.cache.readFragment(e, t)
                    }, ApolloClient.prototype.writeQuery = function(e) {
                        var t = this.cache.writeQuery(e);
                        return !1 !== e.broadcast && this.queryManager.broadcastQueries(), t
                    }, ApolloClient.prototype.writeFragment = function(e) {
                        var t = this.cache.writeFragment(e);
                        return !1 !== e.broadcast && this.queryManager.broadcastQueries(), t
                    }, ApolloClient.prototype.__actionHookForDevTools = function(e) {
                        this.devToolsHookCb = e
                    }, ApolloClient.prototype.__requestRaw = function(e) {
                        return p(this.link, e)
                    }, ApolloClient.prototype.resetStore = function() {
                        var e = this;
                        return Promise.resolve().then(function() {
                            return e.queryManager.clearStore({
                                discardWatches: !1
                            })
                        }).then(function() {
                            return Promise.all(e.resetStoreCallbacks.map(function(e) {
                                return e()
                            }))
                        }).then(function() {
                            return e.reFetchObservableQueries()
                        })
                    }, ApolloClient.prototype.clearStore = function() {
                        var e = this;
                        return Promise.resolve().then(function() {
                            return e.queryManager.clearStore({
                                discardWatches: !0
                            })
                        }).then(function() {
                            return Promise.all(e.clearStoreCallbacks.map(function(e) {
                                return e()
                            }))
                        })
                    }, ApolloClient.prototype.onResetStore = function(e) {
                        var t = this;
                        return this.resetStoreCallbacks.push(e),
                            function() {
                                t.resetStoreCallbacks = t.resetStoreCallbacks.filter(function(t) {
                                    return t !== e
                                })
                            }
                    }, ApolloClient.prototype.onClearStore = function(e) {
                        var t = this;
                        return this.clearStoreCallbacks.push(e),
                            function() {
                                t.clearStoreCallbacks = t.clearStoreCallbacks.filter(function(t) {
                                    return t !== e
                                })
                            }
                    }, ApolloClient.prototype.reFetchObservableQueries = function(e) {
                        return this.queryManager.reFetchObservableQueries(e)
                    }, ApolloClient.prototype.refetchQueries = function(e) {
                        var t = this.queryManager.refetchQueries(e),
                            r = [],
                            n = [];
                        t.forEach(function(e, t) {
                            r.push(t), n.push(e)
                        });
                        var o = Promise.all(n);
                        return o.queries = r, o.results = n, o.catch(function(e) {
                            !1 !== globalThis.__DEV__ && i.kG.debug(17, e)
                        }), o
                    }, ApolloClient.prototype.getObservableQueries = function(e) {
                        return void 0 === e && (e = "active"), this.queryManager.getObservableQueries(e)
                    }, ApolloClient.prototype.extract = function(e) {
                        return this.cache.extract(e)
                    }, ApolloClient.prototype.restore = function(e) {
                        return this.cache.restore(e)
                    }, ApolloClient.prototype.addResolvers = function(e) {
                        this.localState.addResolvers(e)
                    }, ApolloClient.prototype.setResolvers = function(e) {
                        this.localState.setResolvers(e)
                    }, ApolloClient.prototype.getResolvers = function() {
                        return this.localState.getResolvers()
                    }, ApolloClient.prototype.setLocalStateFragmentMatcher = function(e) {
                        this.localState.setFragmentMatcher(e)
                    }, ApolloClient.prototype.setLink = function(e) {
                        this.link = this.queryManager.link = e
                    }, ApolloClient
                }()
        },
        25787: function(e, t, r) {
            "use strict";
            r.d(t, {
                e: function() {
                    return ApolloProvider
                }
            });
            var n = r(50044),
                i = r(17143),
                o = r(2265),
                a = r(54312),
                ApolloProvider = function(e) {
                    var t = e.client,
                        r = e.children,
                        s = (0, a.K)(),
                        c = o.useContext(s),
                        u = o.useMemo(function() {
                            return (0, n.__assign)((0, n.__assign)({}, c), {
                                client: t || c.client
                            })
                        }, [c, t]);
                    return (0, i.kG)(u.client, 46), o.createElement(s.Provider, {
                        value: u
                    }, r)
                }
        },
        62566: function(e, t, r) {
            "use strict";
            r.d(t, {
                X: function() {
                    return cloneDeep
                }
            });
            var n = Object.prototype.toString;

            function cloneDeep(e) {
                return function cloneDeepHelper(e, t) {
                    switch (n.call(e)) {
                        case "[object Array]":
                            if ((t = t || new Map).has(e)) return t.get(e);
                            var r = e.slice(0);
                            return t.set(e, r), r.forEach(function(e, n) {
                                r[n] = cloneDeepHelper(e, t)
                            }), r;
                        case "[object Object]":
                            if ((t = t || new Map).has(e)) return t.get(e);
                            var i = Object.create(Object.getPrototypeOf(e));
                            return t.set(e, i), Object.keys(e).forEach(function(r) {
                                i[r] = cloneDeepHelper(e[r], t)
                            }), i;
                        default:
                            return e
                    }
                }(e)
            }
        },
        93592: function(e, t, r) {
            "use strict";
            r.d(t, {
                Ee: function() {
                    return mergeDeep
                },
                bw: function() {
                    return mergeDeepArray
                },
                w0: function() {
                    return a
                }
            });
            var n = r(50044),
                i = r(88550),
                o = Object.prototype.hasOwnProperty;

            function mergeDeep() {
                for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
                return mergeDeepArray(e)
            }

            function mergeDeepArray(e) {
                var t = e[0] || {},
                    r = e.length;
                if (r > 1)
                    for (var n = new a, i = 1; i < r; ++i) t = n.merge(t, e[i]);
                return t
            }
            var defaultReconciler = function(e, t, r) {
                    return this.merge(e[r], t[r])
                },
                a = function() {
                    function DeepMerger(e) {
                        void 0 === e && (e = defaultReconciler), this.reconciler = e, this.isObject = i.s, this.pastCopies = new Set
                    }
                    return DeepMerger.prototype.merge = function(e, t) {
                        for (var r = this, a = [], s = 2; s < arguments.length; s++) a[s - 2] = arguments[s];
                        return (0, i.s)(t) && (0, i.s)(e) ? (Object.keys(t).forEach(function(i) {
                            if (o.call(e, i)) {
                                var s = e[i];
                                if (t[i] !== s) {
                                    var c = r.reconciler.apply(r, (0, n.__spreadArray)([e, t, i], a, !1));
                                    c !== s && ((e = r.shallowCopyForMerge(e))[i] = c)
                                }
                            } else(e = r.shallowCopyForMerge(e))[i] = t[i]
                        }), e) : t
                    }, DeepMerger.prototype.shallowCopyForMerge = function(e) {
                        return (0, i.s)(e) && !this.pastCopies.has(e) && (e = Array.isArray(e) ? e.slice(0) : (0, n.__assign)({
                            __proto__: Object.getPrototypeOf(e)
                        }, e), this.pastCopies.add(e)), e
                    }, DeepMerger
                }()
        },
        65647: function(e, t, r) {
            "use strict";
            r.d(t, {
                A: function() {
                    return s
                }
            });
            var n = r(12913),
                i = r(38191),
                o = r(11739),
                a = r(17143);

            function identity(e) {
                return e
            }
            var s = function() {
                function DocumentTransform(e, t) {
                    void 0 === t && (t = Object.create(null)), this.resultCache = i.sy ? new WeakSet : new Set, this.transform = e, t.getCacheKey && (this.getCacheKey = t.getCacheKey), !1 !== t.cache && (this.stableCacheKeys = new n.B(i.mr, function(e) {
                        return {
                            key: e
                        }
                    }))
                }
                return DocumentTransform.prototype.getCacheKey = function(e) {
                    return [e]
                }, DocumentTransform.identity = function() {
                    return new DocumentTransform(identity, {
                        cache: !1
                    })
                }, DocumentTransform.split = function(e, t, r) {
                    return void 0 === r && (r = DocumentTransform.identity()), new DocumentTransform(function(n) {
                        return (e(n) ? t : r).transformDocument(n)
                    }, {
                        cache: !1
                    })
                }, DocumentTransform.prototype.transformDocument = function(e) {
                    if (this.resultCache.has(e)) return e;
                    var t = this.getStableCacheEntry(e);
                    if (t && t.value) return t.value;
                    (0, o.A$)(e);
                    var r = this.transform(e);
                    return this.resultCache.add(r), t && (t.value = r), r
                }, DocumentTransform.prototype.concat = function(e) {
                    var t = this;
                    return new DocumentTransform(function(r) {
                        return e.transformDocument(t.transformDocument(r))
                    }, {
                        cache: !1
                    })
                }, DocumentTransform.prototype.getStableCacheEntry = function(e) {
                    if (this.stableCacheKeys) {
                        var t = this.getCacheKey(e);
                        if (t) return (0, a.kG)(Array.isArray(t), 65), this.stableCacheKeys.lookupArray(t)
                    }
                }, DocumentTransform
            }()
        },
        85812: function(e, t, r) {
            "use strict";
            r.d(t, {
                FS: function() {
                    return hasDirectives
                },
                LZ: function() {
                    return shouldInclude
                },
                mj: function() {
                    return hasClientExports
                }
            });
            var n = r(17143),
                i = r(34829);

            function shouldInclude(e, t) {
                var r, i = e.directives;
                return !i || !i.length || (r = [], i && i.length && i.forEach(function(e) {
                    var t;
                    if (!("skip" !== (t = e.name.value) && "include" !== t)) {
                        var i = e.arguments,
                            o = e.name.value;
                        (0, n.kG)(i && 1 === i.length, 67, o);
                        var a = i[0];
                        (0, n.kG)(a.name && "if" === a.name.value, 68, o);
                        var s = a.value;
                        (0, n.kG)(s && ("Variable" === s.kind || "BooleanValue" === s.kind), 69, o), r.push({
                            directive: e,
                            ifArgument: a
                        })
                    }
                }), r).every(function(e) {
                    var r = e.directive,
                        i = e.ifArgument,
                        o = !1;
                    return "Variable" === i.value.kind ? (o = t && t[i.value.name.value], (0, n.kG)(void 0 !== o, 66, r.name.value)) : o = i.value.value, "skip" === r.name.value ? !o : o
                })
            }

            function hasDirectives(e, t, r) {
                var n = new Set(e),
                    o = n.size;
                return (0, i.Vn)(t, {
                    Directive: function(e) {
                        if (n.delete(e.name.value) && (!r || !n.size)) return i.$_
                    }
                }), r ? !n.size : n.size < o
            }

            function hasClientExports(e) {
                return e && hasDirectives(["client", "export"], e, !0)
            }
        },
        86275: function(e, t, r) {
            "use strict";
            r.d(t, {
                F: function() {
                    return createFragmentMap
                },
                Yk: function() {
                    return getFragmentQueryDocument
                },
                hi: function() {
                    return getFragmentFromSelection
                }
            });
            var n = r(50044),
                i = r(17143);

            function getFragmentQueryDocument(e, t) {
                var r = t,
                    o = [];
                return e.definitions.forEach(function(e) {
                    if ("OperationDefinition" === e.kind) throw (0, i._K)(70, e.operation, e.name ? " named '".concat(e.name.value, "'") : "");
                    "FragmentDefinition" === e.kind && o.push(e)
                }), void 0 === r && ((0, i.kG)(1 === o.length, 71, o.length), r = o[0].name.value), (0, n.__assign)((0, n.__assign)({}, e), {
                    definitions: (0, n.__spreadArray)([{
                        kind: "OperationDefinition",
                        operation: "query",
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "FragmentSpread",
                                name: {
                                    kind: "Name",
                                    value: r
                                }
                            }]
                        }
                    }], e.definitions, !0)
                })
            }

            function createFragmentMap(e) {
                void 0 === e && (e = []);
                var t = {};
                return e.forEach(function(e) {
                    t[e.name.value] = e
                }), t
            }

            function getFragmentFromSelection(e, t) {
                switch (e.kind) {
                    case "InlineFragment":
                        return e;
                    case "FragmentSpread":
                        var r = e.name.value;
                        if ("function" == typeof t) return t(r);
                        var n = t && t[r];
                        return (0, i.kG)(n, 72, r), n || null;
                    default:
                        return null
                }
            }
        },
        11739: function(e, t, r) {
            "use strict";
            r.d(t, {
                $H: function() {
                    return getOperationDefinition
                },
                A$: function() {
                    return checkDocument
                },
                O4: function() {
                    return getDefaultValues
                },
                iW: function() {
                    return getQueryDefinition
                },
                kU: function() {
                    return getFragmentDefinitions
                },
                p$: function() {
                    return getMainDefinition
                },
                pD: function() {
                    return getFragmentDefinition
                },
                rY: function() {
                    return getOperationName
                }
            });
            var n = r(17143),
                i = r(44339);

            function checkDocument(e) {
                (0, n.kG)(e && "Document" === e.kind, 73);
                var t = e.definitions.filter(function(e) {
                    return "FragmentDefinition" !== e.kind
                }).map(function(e) {
                    if ("OperationDefinition" !== e.kind) throw (0, n._K)(74, e.kind);
                    return e
                });
                return (0, n.kG)(t.length <= 1, 75, t.length), e
            }

            function getOperationDefinition(e) {
                return checkDocument(e), e.definitions.filter(function(e) {
                    return "OperationDefinition" === e.kind
                })[0]
            }

            function getOperationName(e) {
                return e.definitions.filter(function(e) {
                    return "OperationDefinition" === e.kind && !!e.name
                }).map(function(e) {
                    return e.name.value
                })[0] || null
            }

            function getFragmentDefinitions(e) {
                return e.definitions.filter(function(e) {
                    return "FragmentDefinition" === e.kind
                })
            }

            function getQueryDefinition(e) {
                var t = getOperationDefinition(e);
                return (0, n.kG)(t && "query" === t.operation, 76), t
            }

            function getFragmentDefinition(e) {
                (0, n.kG)("Document" === e.kind, 77), (0, n.kG)(e.definitions.length <= 1, 78);
                var t = e.definitions[0];
                return (0, n.kG)("FragmentDefinition" === t.kind, 79), t
            }

            function getMainDefinition(e) {
                checkDocument(e);
                for (var t, r = 0, i = e.definitions; r < i.length; r++) {
                    var o = i[r];
                    if ("OperationDefinition" === o.kind) {
                        var a = o.operation;
                        if ("query" === a || "mutation" === a || "subscription" === a) return o
                    }
                    "FragmentDefinition" !== o.kind || t || (t = o)
                }
                if (t) return t;
                throw (0, n._K)(80)
            }

            function getDefaultValues(e) {
                var t = Object.create(null),
                    r = e && e.variableDefinitions;
                return r && r.length && r.forEach(function(e) {
                    e.defaultValue && (0, i.vb)(t, e.variable.name, e.defaultValue)
                }), t
            }
        },
        44339: function(e, t, r) {
            "use strict";
            r.d(t, {
                Ao: function() {
                    return isInlineFragment
                },
                JW: function() {
                    return isDocumentNode
                },
                My: function() {
                    return isField
                },
                NC: function() {
                    return argumentsObjectFromField
                },
                PT: function() {
                    return s
                },
                Yk: function() {
                    return isReference
                },
                kQ: function() {
                    return makeReference
                },
                qw: function() {
                    return function getTypenameFromResult(e, t, r) {
                        for (var n, i = 0, a = t.selections; i < a.length; i++) {
                            var s = a[i];
                            if (isField(s)) {
                                if ("__typename" === s.name.value) return e[resultKeyNameFromField(s)]
                            } else n ? n.push(s) : n = [s]
                        }
                        if ("string" == typeof e.__typename) return e.__typename;
                        if (n)
                            for (var c = 0, u = n; c < u.length; c++) {
                                var s = u[c],
                                    l = getTypenameFromResult(e, (0, o.hi)(s, r).selectionSet, r);
                                if ("string" == typeof l) return l
                            }
                    }
                },
                u2: function() {
                    return resultKeyNameFromField
                },
                vb: function() {
                    return valueToObjectRepresentation
                },
                vf: function() {
                    return storeKeyNameFromField
                }
            });
            var n = r(17143),
                i = r(88550),
                o = r(86275);

            function makeReference(e) {
                return {
                    __ref: String(e)
                }
            }

            function isReference(e) {
                return !!(e && "object" == typeof e && "string" == typeof e.__ref)
            }

            function isDocumentNode(e) {
                return (0, i.s)(e) && "Document" === e.kind && Array.isArray(e.definitions)
            }

            function valueToObjectRepresentation(e, t, r, i) {
                if ("IntValue" === r.kind || "FloatValue" === r.kind) e[t.value] = Number(r.value);
                else if ("BooleanValue" === r.kind || "StringValue" === r.kind) e[t.value] = r.value;
                else if ("ObjectValue" === r.kind) {
                    var o = {};
                    r.fields.map(function(e) {
                        return valueToObjectRepresentation(o, e.name, e.value, i)
                    }), e[t.value] = o
                } else if ("Variable" === r.kind) {
                    var a = (i || {})[r.name.value];
                    e[t.value] = a
                } else if ("ListValue" === r.kind) e[t.value] = r.values.map(function(e) {
                    var r = {};
                    return valueToObjectRepresentation(r, t, e, i), r[t.value]
                });
                else if ("EnumValue" === r.kind) e[t.value] = r.value;
                else if ("NullValue" === r.kind) e[t.value] = null;
                else throw (0, n._K)(81, t.value, r.kind)
            }

            function storeKeyNameFromField(e, t) {
                var r = null;
                e.directives && (r = {}, e.directives.forEach(function(e) {
                    r[e.name.value] = {}, e.arguments && e.arguments.forEach(function(n) {
                        var i = n.name,
                            o = n.value;
                        return valueToObjectRepresentation(r[e.name.value], i, o, t)
                    })
                }));
                var n = null;
                return e.arguments && e.arguments.length && (n = {}, e.arguments.forEach(function(e) {
                    var r = e.name,
                        i = e.value;
                    return valueToObjectRepresentation(n, r, i, t)
                })), s(e.name.value, n, r)
            }
            var a = ["connection", "include", "skip", "client", "rest", "export", "nonreactive"],
                s = Object.assign(function(e, t, r) {
                    if (t && r && r.connection && r.connection.key) {
                        if (!r.connection.filter || !(r.connection.filter.length > 0)) return r.connection.key;
                        var n = r.connection.filter ? r.connection.filter : [];
                        n.sort();
                        var i = {};
                        return n.forEach(function(e) {
                            i[e] = t[e]
                        }), "".concat(r.connection.key, "(").concat(stringify(i), ")")
                    }
                    var o = e;
                    if (t) {
                        var s = stringify(t);
                        o += "(".concat(s, ")")
                    }
                    return r && Object.keys(r).forEach(function(e) {
                        -1 === a.indexOf(e) && (r[e] && Object.keys(r[e]).length ? o += "@".concat(e, "(").concat(stringify(r[e]), ")") : o += "@".concat(e))
                    }), o
                }, {
                    setStringify: function(e) {
                        var t = stringify;
                        return stringify = e, t
                    }
                }),
                stringify = function(e) {
                    return JSON.stringify(e, stringifyReplacer)
                };

            function stringifyReplacer(e, t) {
                return (0, i.s)(t) && !Array.isArray(t) && (t = Object.keys(t).sort().reduce(function(e, r) {
                    return e[r] = t[r], e
                }, {})), t
            }

            function argumentsObjectFromField(e, t) {
                if (e.arguments && e.arguments.length) {
                    var r = {};
                    return e.arguments.forEach(function(e) {
                        return valueToObjectRepresentation(r, e.name, e.value, t)
                    }), r
                }
                return null
            }

            function resultKeyNameFromField(e) {
                return e.alias ? e.alias.value : e.name.value
            }

            function isField(e) {
                return "Field" === e.kind
            }

            function isInlineFragment(e) {
                return "InlineFragment" === e.kind
            }
        },
        90535: function(e, t, r) {
            "use strict";
            r.d(t, {
                Gw: function() {
                    return f
                },
                aL: function() {
                    return buildQueryFromSelectionSet
                },
                bi: function() {
                    return removeDirectivesFromDocument
                },
                ob: function() {
                    return removeClientSetsFromDocument
                }
            });
            var n = r(50044),
                i = r(17143),
                o = r(55459),
                a = r(34829),
                s = r(11739),
                c = r(44339),
                u = r(86275),
                l = r(28607),
                d = {
                    kind: o.h.FIELD,
                    name: {
                        kind: o.h.NAME,
                        value: "__typename"
                    }
                };

            function makeInUseGetterFunction(e) {
                var t = new Map;
                return function(r) {
                    void 0 === r && (r = e);
                    var n = t.get(r);
                    return n || t.set(r, n = {
                        variables: new Set,
                        fragmentSpreads: new Set
                    }), n
                }
            }

            function removeDirectivesFromDocument(e, t) {
                (0, s.A$)(t);
                for (var r, c, d, f = makeInUseGetterFunction(""), p = makeInUseGetterFunction(""), getInUse = function(e) {
                        for (var t = 0, r = void 0; t < e.length && (r = e[t]); ++t)
                            if (!(0, l.k)(r)) {
                                if (r.kind === o.h.OPERATION_DEFINITION) return f(r.name && r.name.value);
                                if (r.kind === o.h.FRAGMENT_DEFINITION) return p(r.name.value)
                            }
                        return !1 !== globalThis.__DEV__ && i.kG.error(82), null
                    }, y = 0, g = t.definitions.length - 1; g >= 0; --g) t.definitions[g].kind === o.h.OPERATION_DEFINITION && ++y;
                var v = (r = new Map, c = new Map, e.forEach(function(e) {
                        e && (e.name ? r.set(e.name, e) : e.test && c.set(e.test, e))
                    }), function(e) {
                        var t = r.get(e.name.value);
                        return !t && c.size && c.forEach(function(r, n) {
                            n(e) && (t = r)
                        }), t
                    }),
                    shouldRemoveField = function(e) {
                        return (0, l.O)(e) && e.map(v).some(function(e) {
                            return e && e.remove
                        })
                    },
                    E = new Map,
                    _ = !1,
                    P = {
                        enter: function(e) {
                            if (shouldRemoveField(e.directives)) return _ = !0, null
                        }
                    },
                    T = (0, a.Vn)(t, {
                        Field: P,
                        InlineFragment: P,
                        VariableDefinition: {
                            enter: function() {
                                return !1
                            }
                        },
                        Variable: {
                            enter: function(e, t, r, n, i) {
                                var o = getInUse(i);
                                o && o.variables.add(e.name.value)
                            }
                        },
                        FragmentSpread: {
                            enter: function(e, t, r, n, i) {
                                if (shouldRemoveField(e.directives)) return _ = !0, null;
                                var o = getInUse(i);
                                o && o.fragmentSpreads.add(e.name.value)
                            }
                        },
                        FragmentDefinition: {
                            enter: function(e, t, r, n) {
                                E.set(JSON.stringify(n), e)
                            },
                            leave: function(e, t, r, n) {
                                return e === E.get(JSON.stringify(n)) ? e : y > 0 && e.selectionSet.selections.every(function(e) {
                                    return e.kind === o.h.FIELD && "__typename" === e.name.value
                                }) ? (p(e.name.value).removed = !0, _ = !0, null) : void 0
                            }
                        },
                        Directive: {
                            leave: function(e) {
                                if (v(e)) return _ = !0, null
                            }
                        }
                    });
                if (!_) return t;
                var populateTransitiveVars = function(e) {
                        return e.transitiveVars || (e.transitiveVars = new Set(e.variables), e.removed || e.fragmentSpreads.forEach(function(t) {
                            populateTransitiveVars(p(t)).transitiveVars.forEach(function(t) {
                                e.transitiveVars.add(t)
                            })
                        })), e
                    },
                    x = new Set;
                T.definitions.forEach(function(e) {
                    e.kind === o.h.OPERATION_DEFINITION ? populateTransitiveVars(f(e.name && e.name.value)).fragmentSpreads.forEach(function(e) {
                        x.add(e)
                    }) : e.kind !== o.h.FRAGMENT_DEFINITION || 0 !== y || p(e.name.value).removed || x.add(e.name.value)
                }), x.forEach(function(e) {
                    populateTransitiveVars(p(e)).fragmentSpreads.forEach(function(e) {
                        x.add(e)
                    })
                });
                var A = {
                    enter: function(e) {
                        var t;
                        if (t = e.name.value, !x.has(t) || p(t).removed) return null
                    }
                };
                return d = (0, a.Vn)(T, {
                    FragmentSpread: A,
                    FragmentDefinition: A,
                    OperationDefinition: {
                        leave: function(e) {
                            if (e.variableDefinitions) {
                                var t = populateTransitiveVars(f(e.name && e.name.value)).transitiveVars;
                                if (t.size < e.variableDefinitions.length) return (0, n.__assign)((0, n.__assign)({}, e), {
                                    variableDefinitions: e.variableDefinitions.filter(function(e) {
                                        return t.has(e.variable.name.value)
                                    })
                                })
                            }
                        }
                    }
                }), ! function isEmpty(e, t) {
                    return !e || e.selectionSet.selections.every(function(e) {
                        return e.kind === o.h.FRAGMENT_SPREAD && isEmpty(t[e.name.value], t)
                    })
                }((0, s.$H)(d) || (0, s.pD)(d), (0, u.F)((0, s.kU)(d))) ? d : null
            }
            var f = Object.assign(function(e) {
                return (0, a.Vn)(e, {
                    SelectionSet: {
                        enter: function(e, t, r) {
                            if (!r || r.kind !== o.h.OPERATION_DEFINITION) {
                                var i = e.selections;
                                if (!(!i || i.some(function(e) {
                                        return (0, c.My)(e) && ("__typename" === e.name.value || 0 === e.name.value.lastIndexOf("__", 0))
                                    })) && !((0, c.My)(r) && r.directives && r.directives.some(function(e) {
                                        return "export" === e.name.value
                                    }))) return (0, n.__assign)((0, n.__assign)({}, e), {
                                    selections: (0, n.__spreadArray)((0, n.__spreadArray)([], i, !0), [d], !1)
                                })
                            }
                        }
                    }
                })
            }, {
                added: function(e) {
                    return e === d
                }
            });

            function buildQueryFromSelectionSet(e) {
                return "query" === (0, s.p$)(e).operation ? e : (0, a.Vn)(e, {
                    OperationDefinition: {
                        enter: function(e) {
                            return (0, n.__assign)((0, n.__assign)({}, e), {
                                operation: "query"
                            })
                        }
                    }
                })
            }

            function removeClientSetsFromDocument(e) {
                return (0, s.A$)(e), removeDirectivesFromDocument([{
                    test: function(e) {
                        return "client" === e.name.value
                    },
                    remove: !0
                }], e)
            }
        },
        28035: function(e, t, r) {
            "use strict";
            var n = r(2265);
            let i = n.forwardRef(function({
                title: e,
                titleId: t,
                ...r
            }, i) {
                return n.createElement("svg", Object.assign({
                    xmlns: "http://www.w3.org/2000/svg",
                    viewBox: "0 0 24 24",
                    fill: "currentColor",
                    "aria-hidden": "true",
                    ref: i,
                    "aria-labelledby": t
                }, r), e ? n.createElement("title", {
                    id: t
                }, e) : null, n.createElement("path", {
                    fillRule: "evenodd",
                    d: "M19.952 1.651a.75.75 0 01.298.599V16.303a3 3 0 01-2.176 2.884l-1.32.377a2.553 2.553 0 11-1.403-4.909l2.311-.66a1.5 1.5 0 001.088-1.442V6.994l-9 2.572v9.737a3 3 0 01-2.176 2.884l-1.32.377a2.553 2.553 0 11-1.402-4.909l2.31-.66a1.5 1.5 0 001.088-1.442V9.017 5.25a.75.75 0 01.544-.721l10.5-3a.75.75 0 01.658.122z",
                    clipRule: "evenodd"
                }))
            });
            t.Z = i
        },
        26029: function(e, t, r) {
            "use strict";
            r.d(t, {
                $: function() {
                    return darkTheme
                }
            });
            var n = r(23826),
                i = "#1A1B1F",
                o = {
                    blue: {
                        accentColor: "#3898FF",
                        accentColorForeground: "#FFF"
                    },
                    green: {
                        accentColor: "#4BD166",
                        accentColorForeground: i
                    },
                    orange: {
                        accentColor: "#FF983D",
                        accentColorForeground: i
                    },
                    pink: {
                        accentColor: "#FF7AB8",
                        accentColorForeground: i
                    },
                    purple: {
                        accentColor: "#7A70FF",
                        accentColorForeground: "#FFF"
                    },
                    red: {
                        accentColor: "#FF6257",
                        accentColorForeground: "#FFF"
                    }
                },
                a = o.blue,
                darkTheme = ({
                    accentColor: e = a.accentColor,
                    accentColorForeground: t = a.accentColorForeground,
                    ...r
                } = {}) => ({ ...(0, n.w)(r),
                    colors: {
                        accentColor: e,
                        accentColorForeground: t,
                        actionButtonBorder: "rgba(255, 255, 255, 0.04)",
                        actionButtonBorderMobile: "rgba(255, 255, 255, 0.08)",
                        actionButtonSecondaryBackground: "rgba(255, 255, 255, 0.08)",
                        closeButton: "rgba(224, 232, 255, 0.6)",
                        closeButtonBackground: "rgba(255, 255, 255, 0.08)",
                        connectButtonBackground: i,
                        connectButtonBackgroundError: "#FF494A",
                        connectButtonInnerBackground: "linear-gradient(0deg, rgba(255, 255, 255, 0.075), rgba(255, 255, 255, 0.15))",
                        connectButtonText: "#FFF",
                        connectButtonTextError: "#FFF",
                        connectionIndicator: "#30E000",
                        downloadBottomCardBackground: "linear-gradient(126deg, rgba(0, 0, 0, 0) 9.49%, rgba(120, 120, 120, 0.2) 71.04%), #1A1B1F",
                        downloadTopCardBackground: "linear-gradient(126deg, rgba(120, 120, 120, 0.2) 9.49%, rgba(0, 0, 0, 0) 71.04%), #1A1B1F",
                        error: "#FF494A",
                        generalBorder: "rgba(255, 255, 255, 0.08)",
                        generalBorderDim: "rgba(255, 255, 255, 0.04)",
                        menuItemBackground: "rgba(224, 232, 255, 0.1)",
                        modalBackdrop: "rgba(0, 0, 0, 0.5)",
                        modalBackground: "#1A1B1F",
                        modalBorder: "rgba(255, 255, 255, 0.08)",
                        modalText: "#FFF",
                        modalTextDim: "rgba(224, 232, 255, 0.3)",
                        modalTextSecondary: "rgba(255, 255, 255, 0.6)",
                        profileAction: "rgba(224, 232, 255, 0.1)",
                        profileActionHover: "rgba(224, 232, 255, 0.2)",
                        profileForeground: "rgba(224, 232, 255, 0.05)",
                        selectedOptionBorder: "rgba(224, 232, 255, 0.1)",
                        standby: "#FFD641"
                    },
                    shadows: {
                        connectButton: "0px 4px 12px rgba(0, 0, 0, 0.1)",
                        dialog: "0px 8px 32px rgba(0, 0, 0, 0.32)",
                        profileDetailsAction: "0px 2px 6px rgba(37, 41, 46, 0.04)",
                        selectedOption: "0px 2px 6px rgba(0, 0, 0, 0.24)",
                        selectedWallet: "0px 2px 6px rgba(0, 0, 0, 0.24)",
                        walletLogo: "0px 2px 16px rgba(0, 0, 0, 0.16)"
                    }
                });
            darkTheme.accentColors = o
        },
        27472: function(e, t, r) {
            "use strict";
            r.d(t, {
                wo: function() {
                    return getDefaultWallets
                }
            });
            var n, i, o, a, s, c, u, l, d, f, p, y, g, v, E, _, P, T, x, A, M, B, F, N, L, U, z, G, W = r(82256),
                V = r(54701),
                Q = r(3537),
                K = r(39803),
                Y = r(48519),
                J = r(22570),
                X = r(39730),
                er = r(21693),
                en = "eip155",
                ei = "requestedChains",
                eo = "wallet_addEthereumChain",
                ea = class extends V.wR {
                    constructor(e) {
                        super({ ...e,
                            options: {
                                isNewChainsStale: !0,
                                ...e.options
                            }
                        }), (0, V.Ko)(this, o), (0, V.Ko)(this, s), (0, V.Ko)(this, u), (0, V.Ko)(this, d), (0, V.Ko)(this, p), (0, V.Ko)(this, g), (0, V.Ko)(this, E), (0, V.Ko)(this, P), (0, V.Ko)(this, x), (0, V.ov)(this, "id", "walletConnect"), (0, V.ov)(this, "name", "WalletConnect"), (0, V.ov)(this, "ready", !0), (0, V.Ko)(this, n, void 0), (0, V.Ko)(this, i, void 0), (0, V.ov)(this, "onAccountsChanged", e => {
                            0 === e.length ? this.emit("disconnect") : this.emit("change", {
                                account: (0, K.K)(e[0])
                            })
                        }), (0, V.ov)(this, "onChainChanged", e => {
                            let t = Number(e),
                                r = this.isChainUnsupported(t);
                            this.emit("change", {
                                chain: {
                                    id: t,
                                    unsupported: r
                                }
                            })
                        }), (0, V.ov)(this, "onDisconnect", () => {
                            (0, V.U9)(this, g, v).call(this, []), this.emit("disconnect")
                        }), (0, V.ov)(this, "onDisplayUri", e => {
                            this.emit("message", {
                                type: "display_uri",
                                data: e
                            })
                        }), (0, V.ov)(this, "onConnect", () => {
                            this.emit("connect", {})
                        }), (0, V.U9)(this, o, a).call(this)
                    }
                    async connect({
                        chainId: e,
                        pairingTopic: t
                    } = {}) {
                        try {
                            let r = e;
                            if (!r) {
                                let e = this.storage ? .getItem("store"),
                                    t = e ? .state ? .data ? .chain ? .id;
                                r = t && !this.isChainUnsupported(t) ? t : this.chains[0] ? .id
                            }
                            if (!r) throw Error("No chains found on connector.");
                            let n = await this.getProvider();
                            (0, V.U9)(this, d, f).call(this);
                            let i = (0, V.U9)(this, u, l).call(this);
                            if (n.session && i && await n.disconnect(), !n.session || i) {
                                let e = this.chains.filter(e => e.id !== r).map(e => e.id);
                                this.emit("message", {
                                    type: "connecting"
                                }), await n.connect({
                                    pairingTopic: t,
                                    chains: [r],
                                    optionalChains: e.length ? e : void 0
                                }), (0, V.U9)(this, g, v).call(this, this.chains.map(({
                                    id: e
                                }) => e))
                            }
                            let o = await n.enable(),
                                a = (0, K.K)(o[0]),
                                s = await this.getChainId(),
                                c = this.isChainUnsupported(s);
                            return {
                                account: a,
                                chain: {
                                    id: s,
                                    unsupported: c
                                }
                            }
                        } catch (e) {
                            if (/user rejected/i.test(e ? .message)) throw new Y.ab(e);
                            throw e
                        }
                    }
                    async disconnect() {
                        let e = await this.getProvider();
                        try {
                            await e.disconnect()
                        } catch (e) {
                            if (!/No matching key/i.test(e.message)) throw e
                        } finally {
                            (0, V.U9)(this, p, y).call(this), (0, V.U9)(this, g, v).call(this, [])
                        }
                    }
                    async getAccount() {
                        let {
                            accounts: e
                        } = await this.getProvider();
                        return (0, K.K)(e[0])
                    }
                    async getChainId() {
                        let {
                            chainId: e
                        } = await this.getProvider();
                        return e
                    }
                    async getProvider({
                        chainId: e
                    } = {}) {
                        return (0, V.ac)(this, n) || await (0, V.U9)(this, o, a).call(this), e && await this.switchChain(e), (0, V.ac)(this, n)
                    }
                    async getWalletClient({
                        chainId: e
                    } = {}) {
                        let [t, r] = await Promise.all([this.getProvider({
                            chainId: e
                        }), this.getAccount()]), n = this.chains.find(t => t.id === e);
                        if (!t) throw Error("provider is required.");
                        return (0, J.K)({
                            account: r,
                            chain: n,
                            transport: (0, X.P)(t)
                        })
                    }
                    async isAuthorized() {
                        try {
                            let [e, t] = await Promise.all([this.getAccount(), this.getProvider()]), r = (0, V.U9)(this, u, l).call(this);
                            if (!e) return !1;
                            if (r && t.session) {
                                try {
                                    await t.disconnect()
                                } catch {}
                                return !1
                            }
                            return !0
                        } catch {
                            return !1
                        }
                    }
                    async switchChain(e) {
                        let t = this.chains.find(t => t.id === e);
                        if (!t) throw new Y.x3(Error("chain not found on connector."));
                        try {
                            let r = await this.getProvider(),
                                n = (0, V.U9)(this, P, T).call(this),
                                i = (0, V.U9)(this, x, A).call(this),
                                o = n.includes(e);
                            if (!o && i.includes(eo)) {
                                await r.request({
                                    method: eo,
                                    params: [{
                                        chainId: (0, er.eC)(t.id),
                                        blockExplorerUrls: [t.blockExplorers ? .default ? .url],
                                        chainName: t.name,
                                        nativeCurrency: t.nativeCurrency,
                                        rpcUrls: [...t.rpcUrls.default.http]
                                    }]
                                });
                                let n = (0, V.U9)(this, E, _).call(this);
                                n.push(e), (0, V.U9)(this, g, v).call(this, n)
                            }
                            return await r.request({
                                method: "wallet_switchEthereumChain",
                                params: [{
                                    chainId: (0, er.eC)(e)
                                }]
                            }), t
                        } catch (t) {
                            let e = "string" == typeof t ? t : t ? .message;
                            if (/user rejected request/i.test(e)) throw new Y.ab(t);
                            throw new Y.x3(t)
                        }
                    }
                };
            n = new WeakMap, i = new WeakMap, o = new WeakSet, a = async function() {
                return (0, V.ac)(this, i) || "undefined" == typeof window || (0, V.qx)(this, i, (0, V.U9)(this, s, c).call(this)), (0, V.ac)(this, i)
            }, s = new WeakSet, c = async function() {
                let {
                    EthereumProvider: e,
                    OPTIONAL_EVENTS: t,
                    OPTIONAL_METHODS: i
                } = await Promise.all([r.e(3389), r.e(8382)]).then(r.bind(r, 58382)), [o, ...a] = this.chains.map(({
                    id: e
                }) => e);
                if (o) {
                    let {
                        projectId: r,
                        showQrModal: s = !0,
                        qrModalOptions: c,
                        metadata: u,
                        relayUrl: l
                    } = this.options;
                    (0, V.qx)(this, n, await e.init({
                        showQrModal: s,
                        qrModalOptions: c,
                        projectId: r,
                        optionalMethods: i,
                        optionalEvents: t,
                        chains: [o],
                        optionalChains: a.length ? a : void 0,
                        rpcMap: Object.fromEntries(this.chains.map(e => [e.id, e.rpcUrls.default.http[0]])),
                        metadata: u,
                        relayUrl: l
                    }))
                }
            }, u = new WeakSet, l = function() {
                let e = (0, V.U9)(this, x, A).call(this);
                if (e.includes(eo) || !this.options.isNewChainsStale) return !1;
                let t = (0, V.U9)(this, E, _).call(this),
                    r = this.chains.map(({
                        id: e
                    }) => e),
                    n = (0, V.U9)(this, P, T).call(this);
                return (!n.length || !!n.some(e => r.includes(e))) && !r.every(e => t.includes(e))
            }, d = new WeakSet, f = function() {
                (0, V.ac)(this, n) && ((0, V.U9)(this, p, y).call(this), (0, V.ac)(this, n).on("accountsChanged", this.onAccountsChanged), (0, V.ac)(this, n).on("chainChanged", this.onChainChanged), (0, V.ac)(this, n).on("disconnect", this.onDisconnect), (0, V.ac)(this, n).on("session_delete", this.onDisconnect), (0, V.ac)(this, n).on("display_uri", this.onDisplayUri), (0, V.ac)(this, n).on("connect", this.onConnect))
            }, p = new WeakSet, y = function() {
                (0, V.ac)(this, n) && ((0, V.ac)(this, n).removeListener("accountsChanged", this.onAccountsChanged), (0, V.ac)(this, n).removeListener("chainChanged", this.onChainChanged), (0, V.ac)(this, n).removeListener("disconnect", this.onDisconnect), (0, V.ac)(this, n).removeListener("session_delete", this.onDisconnect), (0, V.ac)(this, n).removeListener("display_uri", this.onDisplayUri), (0, V.ac)(this, n).removeListener("connect", this.onConnect))
            }, g = new WeakSet, v = function(e) {
                this.storage ? .setItem(ei, e)
            }, E = new WeakSet, _ = function() {
                return this.storage ? .getItem(ei) ? ? []
            }, P = new WeakSet, T = function() {
                if (!(0, V.ac)(this, n)) return [];
                let e = V.ac(this, n).session ? .namespaces;
                if (!e) return [];
                let t = (0, Q.fK)(e),
                    r = t[en] ? .chains ? .map(e => parseInt(e.split(":")[1] || ""));
                return r ? ? []
            }, x = new WeakSet, A = function() {
                if (!(0, V.ac)(this, n)) return [];
                let e = V.ac(this, n).session ? .namespaces;
                if (!e) return [];
                let t = (0, Q.fK)(e),
                    r = t[en] ? .methods;
                return r ? ? []
            };
            var es = r(48615),
                ec = r(42018),
                eu = r(75660),
                el = class extends V.wR {
                    constructor({
                        chains: e,
                        options: t
                    }) {
                        super({
                            chains: e,
                            options: {
                                reloadOnDisconnect: !1,
                                ...t
                            }
                        }), (0, V.ov)(this, "id", "coinbaseWallet"), (0, V.ov)(this, "name", "Coinbase Wallet"), (0, V.ov)(this, "ready", !0), (0, V.Ko)(this, M, void 0), (0, V.Ko)(this, B, void 0), (0, V.ov)(this, "onAccountsChanged", e => {
                            0 === e.length ? this.emit("disconnect") : this.emit("change", {
                                account: (0, K.K)(e[0])
                            })
                        }), (0, V.ov)(this, "onChainChanged", e => {
                            let t = (0, eu.J)(e),
                                r = this.isChainUnsupported(t);
                            this.emit("change", {
                                chain: {
                                    id: t,
                                    unsupported: r
                                }
                            })
                        }), (0, V.ov)(this, "onDisconnect", () => {
                            this.emit("disconnect")
                        })
                    }
                    async connect({
                        chainId: e
                    } = {}) {
                        try {
                            let t = await this.getProvider();
                            t.on("accountsChanged", this.onAccountsChanged), t.on("chainChanged", this.onChainChanged), t.on("disconnect", this.onDisconnect), this.emit("message", {
                                type: "connecting"
                            });
                            let r = await t.enable(),
                                n = (0, K.K)(r[0]),
                                i = await this.getChainId(),
                                o = this.isChainUnsupported(i);
                            if (e && i !== e) {
                                let t = await this.switchChain(e);
                                i = t.id, o = this.isChainUnsupported(i)
                            }
                            return {
                                account: n,
                                chain: {
                                    id: i,
                                    unsupported: o
                                }
                            }
                        } catch (e) {
                            if (/(user closed modal|accounts received is empty)/i.test(e.message)) throw new Y.ab(e);
                            throw e
                        }
                    }
                    async disconnect() {
                        if (!(0, V.ac)(this, B)) return;
                        let e = await this.getProvider();
                        e.removeListener("accountsChanged", this.onAccountsChanged), e.removeListener("chainChanged", this.onChainChanged), e.removeListener("disconnect", this.onDisconnect), e.disconnect(), e.close()
                    }
                    async getAccount() {
                        let e = await this.getProvider(),
                            t = await e.request({
                                method: "eth_accounts"
                            });
                        return (0, K.K)(t[0])
                    }
                    async getChainId() {
                        let e = await this.getProvider(),
                            t = (0, eu.J)(e.chainId);
                        return t
                    }
                    async getProvider() {
                        if (!(0, V.ac)(this, B)) {
                            let e = (await Promise.all([r.e(4775), r.e(6942)]).then(r.t.bind(r, 64775, 19))).default;
                            "function" != typeof e && "function" == typeof e.default && (e = e.default), (0, V.qx)(this, M, new e(this.options));
                            let t = V.ac(this, M).walletExtension ? .getChainId(),
                                n = this.chains.find(e => this.options.chainId ? e.id === this.options.chainId : e.id === t) || this.chains[0],
                                i = this.options.chainId || n ? .id,
                                o = this.options.jsonRpcUrl || n ? .rpcUrls.default.http[0];
                            (0, V.qx)(this, B, (0, V.ac)(this, M).makeWeb3Provider(o, i))
                        }
                        return (0, V.ac)(this, B)
                    }
                    async getWalletClient({
                        chainId: e
                    } = {}) {
                        let [t, r] = await Promise.all([this.getProvider(), this.getAccount()]), n = this.chains.find(t => t.id === e);
                        if (!t) throw Error("provider is required.");
                        return (0, J.K)({
                            account: r,
                            chain: n,
                            transport: (0, X.P)(t)
                        })
                    }
                    async isAuthorized() {
                        try {
                            let e = await this.getAccount();
                            return !!e
                        } catch {
                            return !1
                        }
                    }
                    async switchChain(e) {
                        let t = await this.getProvider(),
                            r = (0, er.eC)(e);
                        try {
                            return await t.request({
                                method: "wallet_switchEthereumChain",
                                params: [{
                                    chainId: r
                                }]
                            }), this.chains.find(t => t.id === e) ? ? {
                                id: e,
                                name: `Chain ${r}`,
                                network: `${r}`,
                                nativeCurrency: {
                                    name: "Ether",
                                    decimals: 18,
                                    symbol: "ETH"
                                },
                                rpcUrls: {
                                    default: {
                                        http: [""]
                                    },
                                    public: {
                                        http: [""]
                                    }
                                }
                            }
                        } catch (i) {
                            let n = this.chains.find(t => t.id === e);
                            if (!n) throw new ec.B({
                                chainId: e,
                                connectorId: this.id
                            });
                            if (4902 === i.code) try {
                                return await t.request({
                                    method: "wallet_addEthereumChain",
                                    params: [{
                                        chainId: r,
                                        chainName: n.name,
                                        nativeCurrency: n.nativeCurrency,
                                        rpcUrls: [n.rpcUrls.public ? .http[0] ? ? ""],
                                        blockExplorerUrls: this.getBlockExplorerUrls(n)
                                    }]
                                }), n
                            } catch (e) {
                                throw new Y.ab(e)
                            }
                            throw new Y.x3(i)
                        }
                    }
                    async watchAsset({
                        address: e,
                        decimals: t = 18,
                        image: r,
                        symbol: n
                    }) {
                        let i = await this.getProvider();
                        return i.request({
                            method: "wallet_watchAsset",
                            params: {
                                type: "ERC20",
                                options: {
                                    address: e,
                                    decimals: t,
                                    image: r,
                                    symbol: n
                                }
                            }
                        })
                    }
                };
            M = new WeakMap, B = new WeakMap;
            var ed = class extends es._ {
                constructor({
                    chains: e,
                    options: t
                } = {}) {
                    let r = {
                        name: "MetaMask",
                        shimDisconnect: !0,
                        getProvider() {
                            function getReady(e) {
                                let t = !!e ? .isMetaMask;
                                if (t && (!e.isBraveWallet || e._events || e._state) && !e.isApexWallet && !e.isAvalanche && !e.isBitKeep && !e.isBlockWallet && !e.isMathWallet && !e.isOkxWallet && !e.isOKExWallet && !e.isOneInchIOSWallet && !e.isOneInchAndroidWallet && !e.isOpera && !e.isPortal && !e.isRabby && !e.isDefiant && !e.isTokenPocket && !e.isTokenary && !e.isZerion) return e
                            }
                            if ("undefined" == typeof window) return;
                            let e = window.ethereum;
                            return e ? .providers ? e.providers.find(getReady) : getReady(e)
                        },
                        ...t
                    };
                    super({
                        chains: e,
                        options: r
                    }), (0, V.ov)(this, "id", "metaMask"), (0, V.ov)(this, "shimDisconnectKey", `${this.id}.shimDisconnect`), (0, V.Ko)(this, F, void 0), (0, V.qx)(this, F, r.UNSTABLE_shimOnConnectSelectAccount)
                }
                async connect({
                    chainId: e
                } = {}) {
                    try {
                        let t = await this.getProvider();
                        if (!t) throw new ec.N;
                        t.on && (t.on("accountsChanged", this.onAccountsChanged), t.on("chainChanged", this.onChainChanged), t.on("disconnect", this.onDisconnect)), this.emit("message", {
                            type: "connecting"
                        });
                        let r = null;
                        if ((0, V.ac)(this, F) && this.options ? .shimDisconnect && !this.storage ? .getItem(this.shimDisconnectKey)) {
                            r = await this.getAccount().catch(() => null);
                            let e = !!r;
                            if (e) try {
                                await t.request({
                                    method: "wallet_requestPermissions",
                                    params: [{
                                        eth_accounts: {}
                                    }]
                                }), r = await this.getAccount()
                            } catch (e) {
                                if (this.isUserRejectedRequestError(e)) throw new Y.ab(e);
                                if (e.code === new Y.pT(e).code) throw e
                            }
                        }
                        if (!r) {
                            let e = await t.request({
                                method: "eth_requestAccounts"
                            });
                            r = (0, K.K)(e[0])
                        }
                        let n = await this.getChainId(),
                            i = this.isChainUnsupported(n);
                        if (e && n !== e) {
                            let t = await this.switchChain(e);
                            n = t.id, i = this.isChainUnsupported(n)
                        }
                        return this.options ? .shimDisconnect && this.storage ? .setItem(this.shimDisconnectKey, !0), {
                            account: r,
                            chain: {
                                id: n,
                                unsupported: i
                            },
                            provider: t
                        }
                    } catch (e) {
                        if (this.isUserRejectedRequestError(e)) throw new Y.ab(e);
                        if (-32002 === e.code) throw new Y.pT(e);
                        throw e
                    }
                }
            };
            F = new WeakMap;
            var ef = /(imtoken|metamask|rainbow|trust wallet|uniswap wallet|ledger)/i,
                ep = class extends V.wR {
                    constructor() {
                        super(...arguments), (0, V.Ko)(this, L), (0, V.ov)(this, "id", "walletConnectLegacy"), (0, V.ov)(this, "name", "WalletConnectLegacy"), (0, V.ov)(this, "ready", !0), (0, V.Ko)(this, N, void 0), (0, V.ov)(this, "onAccountsChanged", e => {
                            0 === e.length ? this.emit("disconnect") : this.emit("change", {
                                account: (0, K.K)(e[0])
                            })
                        }), (0, V.ov)(this, "onChainChanged", e => {
                            let t = (0, eu.J)(e),
                                r = this.isChainUnsupported(t);
                            this.emit("change", {
                                chain: {
                                    id: t,
                                    unsupported: r
                                }
                            })
                        }), (0, V.ov)(this, "onDisconnect", () => {
                            this.emit("disconnect")
                        })
                    }
                    async connect({
                        chainId: e
                    } = {}) {
                        try {
                            let t = e;
                            if (!t) {
                                let e = this.storage ? .getItem("store"),
                                    r = e ? .state ? .data ? .chain ? .id;
                                r && !this.isChainUnsupported(r) && (t = r)
                            }
                            let r = await this.getProvider({
                                chainId: t,
                                create: !0
                            });
                            r.on("accountsChanged", this.onAccountsChanged), r.on("chainChanged", this.onChainChanged), r.on("disconnect", this.onDisconnect), setTimeout(() => this.emit("message", {
                                type: "connecting"
                            }), 0);
                            let n = await r.enable(),
                                i = (0, K.K)(n[0]),
                                o = await this.getChainId(),
                                a = this.isChainUnsupported(o),
                                s = r.connector ? .peerMeta ? .name ? ? "";
                            return ef.test(s) && (this.switchChain = (0, V.U9)(this, L, U)), {
                                account: i,
                                chain: {
                                    id: o,
                                    unsupported: a
                                }
                            }
                        } catch (e) {
                            if (/user closed modal/i.test(e.message)) throw new Y.ab(e);
                            throw e
                        }
                    }
                    async disconnect() {
                        let e = await this.getProvider();
                        await e.disconnect(), e.removeListener("accountsChanged", this.onAccountsChanged), e.removeListener("chainChanged", this.onChainChanged), e.removeListener("disconnect", this.onDisconnect), "undefined" != typeof localStorage && localStorage.removeItem("walletconnect")
                    }
                    async getAccount() {
                        let e = await this.getProvider(),
                            t = e.accounts;
                        return (0, K.K)(t[0])
                    }
                    async getChainId() {
                        let e = await this.getProvider(),
                            t = (0, eu.J)(e.chainId);
                        return t
                    }
                    async getProvider({
                        chainId: e,
                        create: t
                    } = {}) {
                        if (!(0, V.ac)(this, N) || e || t) {
                            let t = this.options ? .infuraId ? {} : this.chains.reduce((e, t) => ({ ...e,
                                    [t.id]: t.rpcUrls.default.http[0]
                                }), {}),
                                n = (await Promise.all([r.e(5298), r.e(3389), r.e(9090)]).then(r.bind(r, 59090))).default;
                            (0, V.qx)(this, N, new n({ ...this.options,
                                chainId: e,
                                rpc: { ...t,
                                    ...this.options ? .rpc
                                }
                            })), (0, V.ac)(this, N).http = await (0, V.ac)(this, N).setHttpProvider(e)
                        }
                        return (0, V.ac)(this, N)
                    }
                    async getWalletClient({
                        chainId: e
                    } = {}) {
                        let [t, r] = await Promise.all([this.getProvider({
                            chainId: e
                        }), this.getAccount()]), n = this.chains.find(t => t.id === e);
                        if (!t) throw Error("provider is required.");
                        return (0, J.K)({
                            account: r,
                            chain: n,
                            transport: (0, X.P)(t)
                        })
                    }
                    async isAuthorized() {
                        try {
                            let e = await this.getAccount();
                            return !!e
                        } catch {
                            return !1
                        }
                    }
                };
            N = new WeakMap, L = new WeakSet, U = async function(e) {
                let t = await this.getProvider(),
                    r = (0, er.eC)(e);
                try {
                    return await Promise.race([t.request({
                        method: "wallet_switchEthereumChain",
                        params: [{
                            chainId: r
                        }]
                    }), new Promise(t => this.on("change", ({
                        chain: r
                    }) => {
                        r ? .id === e && t(e)
                    }))]), this.chains.find(t => t.id === e) ? ? {
                        id: e,
                        name: `Chain ${r}`,
                        network: `${r}`,
                        nativeCurrency: {
                            name: "Ether",
                            decimals: 18,
                            symbol: "ETH"
                        },
                        rpcUrls: {
                            default: {
                                http: [""]
                            },
                            public: {
                                http: [""]
                            }
                        }
                    }
                } catch (t) {
                    let e = "string" == typeof t ? t : t ? .message;
                    if (/user rejected request/i.test(e)) throw new Y.ab(t);
                    throw new Y.x3(t)
                }
            };
            var eh = r(63531),
                em = r(44378),
                ey = class extends V.wR {
                    constructor({
                        chains: e,
                        options: t
                    }) {
                        let r = {
                            shimDisconnect: !1,
                            ...t
                        };
                        super({
                            chains: e,
                            options: r
                        }), (0, V.ov)(this, "id", "safe"), (0, V.ov)(this, "name", "Safe"), (0, V.ov)(this, "ready", "undefined" != typeof window && window ? .parent !== window), (0, V.Ko)(this, z, void 0), (0, V.Ko)(this, G, void 0), (0, V.ov)(this, "shimDisconnectKey", `${this.id}.shimDisconnect`);
                        let n = em;
                        "function" != typeof em && "function" == typeof em.default && (n = em.default), (0, V.qx)(this, G, new n(r))
                    }
                    async connect() {
                        let e = await this.getProvider();
                        if (!e) throw new ec.N;
                        e.on && (e.on("accountsChanged", this.onAccountsChanged), e.on("chainChanged", this.onChainChanged), e.on("disconnect", this.onDisconnect)), this.emit("message", {
                            type: "connecting"
                        });
                        let t = await this.getAccount(),
                            r = await this.getChainId();
                        return this.options.shimDisconnect && this.storage ? .setItem(this.shimDisconnectKey, !0), {
                            account: t,
                            chain: {
                                id: r,
                                unsupported: this.isChainUnsupported(r)
                            }
                        }
                    }
                    async disconnect() {
                        let e = await this.getProvider();
                        e ? .removeListener && (e.removeListener("accountsChanged", this.onAccountsChanged), e.removeListener("chainChanged", this.onChainChanged), e.removeListener("disconnect", this.onDisconnect), this.options.shimDisconnect && this.storage ? .removeItem(this.shimDisconnectKey))
                    }
                    async getAccount() {
                        let e = await this.getProvider();
                        if (!e) throw new ec.N;
                        let t = await e.request({
                            method: "eth_accounts"
                        });
                        return (0, K.K)(t[0])
                    }
                    async getChainId() {
                        let e = await this.getProvider();
                        if (!e) throw new ec.N;
                        return (0, eu.J)(e.chainId)
                    }
                    async getProvider() {
                        if (!(0, V.ac)(this, z)) {
                            let e = await (0, V.ac)(this, G).safe.getInfo();
                            if (!e) throw Error("Could not load Safe information");
                            (0, V.qx)(this, z, new eh.N(e, (0, V.ac)(this, G)))
                        }
                        return (0, V.ac)(this, z)
                    }
                    async getWalletClient({
                        chainId: e
                    } = {}) {
                        let t = await this.getProvider(),
                            r = await this.getAccount(),
                            n = this.chains.find(t => t.id === e);
                        if (!t) throw Error("provider is required.");
                        return (0, J.K)({
                            account: r,
                            chain: n,
                            transport: (0, X.P)(t)
                        })
                    }
                    async isAuthorized() {
                        try {
                            if (this.options.shimDisconnect && !this.storage ? .getItem(this.shimDisconnectKey)) return !1;
                            let e = await this.getAccount();
                            return !!e
                        } catch {
                            return !1
                        }
                    }
                    onAccountsChanged(e) {}
                    onChainChanged(e) {}
                    onDisconnect() {
                        this.emit("disconnect")
                    }
                };
            z = new WeakMap, G = new WeakMap, r(2265);
            var _connectorsForWallets = e => () => {
                    let t = -1,
                        r = [],
                        n = [],
                        i = [],
                        o = [];
                    e.forEach(({
                        groupName: e,
                        wallets: r
                    }, o) => {
                        r.forEach(r => {
                            if (t++, (null == r ? void 0 : r.iconAccent) && !(0, W.A7)(null == r ? void 0 : r.iconAccent)) throw Error(`Property \`iconAccent\` is not a hex value for wallet: ${r.name}`);
                            let a = { ...r,
                                groupIndex: o,
                                groupName: e,
                                index: t
                            };
                            "function" == typeof r.hidden ? i.push(a) : n.push(a)
                        })
                    });
                    let a = [...n, ...i];
                    return a.forEach(({
                        createConnector: e,
                        groupIndex: t,
                        groupName: n,
                        hidden: i,
                        index: a,
                        ...s
                    }) => {
                        let c;
                        if ("function" == typeof i) {
                            let e = i({
                                wallets: [...o.map(({
                                    connector: e,
                                    id: t,
                                    installed: r,
                                    name: n
                                }) => ({
                                    connector: e,
                                    id: t,
                                    installed: r,
                                    name: n
                                }))]
                            });
                            if (e) return
                        }
                        let {
                            connector: u,
                            ...l
                        } = Object.fromEntries(Object.entries(e()).filter(([e, t]) => void 0 !== t));
                        if ("walletConnect" === s.id && l.qrCode && !(0, W.tq)()) {
                            let {
                                chains: e,
                                options: t
                            } = u;
                            c = new ea({
                                chains: e,
                                options: { ...t,
                                    showQrModal: !0
                                }
                            }), r.push(c)
                        }
                        let d = {
                            connector: u,
                            groupIndex: t,
                            groupName: n,
                            index: a,
                            walletConnectModalConnector: c,
                            ...s,
                            ...l
                        };
                        o.push(d), r.includes(u) || (r.push(u), u._wallets = []), u._wallets.push(d)
                    }), r
                },
                braveWallet = ({
                    chains: e,
                    ...t
                }) => {
                    var n;
                    return {
                        id: "brave",
                        name: "Brave Wallet",
                        iconUrl: async () => (await r.e(4471).then(r.bind(r, 44471))).default,
                        iconBackground: "#fff",
                        installed: "undefined" != typeof window && (null == (n = window.ethereum) ? void 0 : n.isBraveWallet) === !0,
                        downloadUrls: {},
                        createConnector: () => ({
                            connector: new es._({
                                chains: e,
                                options: t
                            })
                        })
                    }
                };

            function getExplicitInjectedProvider(e) {
                if ("undefined" == typeof window || void 0 === window.ethereum) return;
                let t = window.ethereum.providers;
                return t ? t.find(t => t[e]) : window.ethereum[e] ? window.ethereum : void 0
            }
            var coinbaseWallet = ({
                    appName: e,
                    chains: t,
                    ...n
                }) => {
                    let i = !!getExplicitInjectedProvider("isCoinbaseWallet");
                    return {
                        id: "coinbase",
                        name: "Coinbase Wallet",
                        shortName: "Coinbase",
                        iconUrl: async () => (await r.e(9012).then(r.bind(r, 9012))).default,
                        iconAccent: "#2c5ff6",
                        iconBackground: "#2c5ff6",
                        installed: i || void 0,
                        downloadUrls: {
                            android: "https://play.google.com/store/apps/details?id=org.toshi",
                            ios: "https://apps.apple.com/us/app/coinbase-wallet-store-crypto/id1278383455",
                            mobile: "https://coinbase.com/wallet/downloads",
                            qrCode: "https://coinbase-wallet.onelink.me/q5Sx/fdb9b250",
                            chrome: "https://chrome.google.com/webstore/detail/coinbase-wallet-extension/hnfanknocfeofbddgcijnmhnfnkdnaad",
                            browserExtension: "https://coinbase.com/wallet"
                        },
                        createConnector: () => {
                            let r = (0, W.gn)(),
                                i = new el({
                                    chains: t,
                                    options: {
                                        appName: e,
                                        headlessMode: !0,
                                        ...n
                                    }
                                }),
                                getUri = async () => (await i.getProvider()).qrUrl;
                            return {
                                connector: i,
                                ...r ? {} : {
                                    qrCode: {
                                        getUri,
                                        instructions: {
                                            learnMoreUrl: "https://coinbase.com/wallet/articles/getting-started-mobile",
                                            steps: [{
                                                description: "wallet_connectors.coinbase.qr_code.step1.description",
                                                step: "install",
                                                title: "wallet_connectors.coinbase.qr_code.step1.title"
                                            }, {
                                                description: "wallet_connectors.coinbase.qr_code.step2.description",
                                                step: "create",
                                                title: "wallet_connectors.coinbase.qr_code.step2.title"
                                            }, {
                                                description: "wallet_connectors.coinbase.qr_code.step3.description",
                                                step: "scan",
                                                title: "wallet_connectors.coinbase.qr_code.step3.title"
                                            }]
                                        }
                                    },
                                    extension: {
                                        instructions: {
                                            learnMoreUrl: "https://coinbase.com/wallet/articles/getting-started-extension",
                                            steps: [{
                                                description: "wallet_connectors.coinbase.extension.step1.description",
                                                step: "install",
                                                title: "wallet_connectors.coinbase.extension.step1.title"
                                            }, {
                                                description: "wallet_connectors.coinbase.extension.step2.description",
                                                step: "create",
                                                title: "wallet_connectors.coinbase.extension.step2.title"
                                            }, {
                                                description: "wallet_connectors.coinbase.extension.step3.description",
                                                step: "refresh",
                                                title: "wallet_connectors.coinbase.extension.step3.title"
                                            }]
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                injectedWallet = ({
                    chains: e,
                    ...t
                }) => ({
                    id: "injected",
                    name: "Browser Wallet",
                    iconUrl: async () => (await r.e(6103).then(r.bind(r, 68819))).default,
                    iconBackground: "#fff",
                    hidden: ({
                        wallets: e
                    }) => e.some(e => e.installed && e.name === e.connector.name && (e.connector instanceof es._ || "coinbase" === e.id)),
                    createConnector: () => ({
                        connector: new es._({
                            chains: e,
                            options: t
                        })
                    })
                });
            async function getWalletConnectUri(e, t) {
                let r = await e.getProvider();
                return "2" === t ? new Promise(e => r.once("display_uri", e)) : r.connector.uri
            }
            var eb = new Map;

            function getWalletConnectConnector({
                chains: e,
                options: t = {},
                projectId: r,
                version: n = "2"
            }) {
                let i = "21fef48091f12692cad574a6f7753643";
                if ("2" === n) {
                    if (r && "" !== r)("YOUR_PROJECT_ID" === r || r === i) && console.warn("Invalid projectId. Please create a unique WalletConnect Cloud projectId for your dApp https://www.rainbowkit.com/docs/installation#configure");
                    else throw Error("No projectId found. Every dApp must now provide a WalletConnect Cloud projectId to enable WalletConnect v2 https://www.rainbowkit.com/docs/installation#configure")
                }
                let o = {
                        chains: e,
                        options: "1" === n ? {
                            qrcode: !1,
                            ...t
                        } : {
                            projectId: "YOUR_PROJECT_ID" === r ? i : r,
                            showQrModal: !1,
                            ...t
                        }
                    },
                    a = JSON.stringify(o),
                    s = eb.get(a);
                return null != s ? s : function(e, t) {
                    let r = "1" === e ? new ep(t) : new ea(t);
                    return eb.set(JSON.stringify(t), r), r
                }(n, o)
            }

            function isMetaMask(e) {
                return !!(null == e ? void 0 : e.isMetaMask) && (!e.isBraveWallet || !!e._events || !!e._state) && !e.isApexWallet && !e.isAvalanche && !e.isBackpack && !e.isBifrost && !e.isBitKeep && !e.isBitski && !e.isBlockWallet && !e.isCoinbaseWallet && !e.isDawn && !e.isEnkrypt && !e.isExodus && !e.isFrame && !e.isFrontier && !e.isGamestop && !e.isHyperPay && !e.isImToken && !e.isKuCoinWallet && !e.isMathWallet && !e.isOkxWallet && !e.isOKExWallet && !e.isOneInchIOSWallet && !e.isOneInchAndroidWallet && !e.isOpera && !e.isPhantom && !e.isPortal && !e.isRabby && !e.isRainbow && !e.isStatus && !e.isTalisman && !e.isTally && !e.isTokenPocket && !e.isTokenary && !e.isTrust && !e.isTrustWallet && !e.isXDEFI && !e.isZeal && !e.isZerion
            }
            var metaMaskWallet = ({
                    chains: e,
                    projectId: t,
                    walletConnectOptions: n,
                    walletConnectVersion: i = "2",
                    ...o
                }) => {
                    var a, s;
                    let c = "undefined" != typeof window && (null == (a = window.ethereum) ? void 0 : a.providers),
                        u = "undefined" != typeof window && void 0 !== window.ethereum && ((null == (s = window.ethereum.providers) ? void 0 : s.some(isMetaMask)) || window.ethereum.isMetaMask),
                        l = !u;
                    return {
                        id: "metaMask",
                        name: "MetaMask",
                        iconUrl: async () => (await r.e(8780).then(r.bind(r, 48780))).default,
                        iconAccent: "#f6851a",
                        iconBackground: "#fff",
                        installed: l ? void 0 : u,
                        downloadUrls: {
                            android: "https://play.google.com/store/apps/details?id=io.metamask",
                            ios: "https://apps.apple.com/us/app/metamask/id1438144202",
                            mobile: "https://metamask.io/download",
                            qrCode: "https://metamask.io/download",
                            chrome: "https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn",
                            edge: "https://microsoftedge.microsoft.com/addons/detail/metamask/ejbalbakoplchlghecdalmeeeajnimhm",
                            firefox: "https://addons.mozilla.org/firefox/addon/ether-metamask",
                            opera: "https://addons.opera.com/extensions/details/metamask-10",
                            browserExtension: "https://metamask.io/download"
                        },
                        createConnector: () => {
                            let r = l ? getWalletConnectConnector({
                                    projectId: t,
                                    chains: e,
                                    version: i,
                                    options: n
                                }) : new ed({
                                    chains: e,
                                    options: {
                                        getProvider: () => c ? c.find(isMetaMask) : "undefined" != typeof window ? window.ethereum : void 0,
                                        ...o
                                    }
                                }),
                                getUri = async () => {
                                    let e = await getWalletConnectUri(r, i);
                                    return (0, W.Dt)() ? e : (0, W.gn)() ? `metamask://wc?uri=${encodeURIComponent(e)}` : `https://metamask.app.link/wc?uri=${encodeURIComponent(e)}`
                                };
                            return {
                                connector: r,
                                mobile: {
                                    getUri: l ? getUri : void 0
                                },
                                qrCode: l ? {
                                    getUri,
                                    instructions: {
                                        learnMoreUrl: "https://metamask.io/faqs/",
                                        steps: [{
                                            description: "wallet_connectors.metamask.qr_code.step1.description",
                                            step: "install",
                                            title: "wallet_connectors.metamask.qr_code.step1.title"
                                        }, {
                                            description: "wallet_connectors.metamask.qr_code.step2.description",
                                            step: "create",
                                            title: "wallet_connectors.metamask.qr_code.step2.title"
                                        }, {
                                            description: "wallet_connectors.metamask.qr_code.step3.description",
                                            step: "refresh",
                                            title: "wallet_connectors.metamask.qr_code.step3.title"
                                        }]
                                    }
                                } : void 0,
                                extension: {
                                    instructions: {
                                        learnMoreUrl: "https://metamask.io/faqs/",
                                        steps: [{
                                            description: "wallet_connectors.metamask.extension.step1.description",
                                            step: "install",
                                            title: "wallet_connectors.metamask.extension.step1.title"
                                        }, {
                                            description: "wallet_connectors.metamask.extension.step2.description",
                                            step: "create",
                                            title: "wallet_connectors.metamask.extension.step2.title"
                                        }, {
                                            description: "wallet_connectors.metamask.extension.step3.description",
                                            step: "refresh",
                                            title: "wallet_connectors.metamask.extension.step3.title"
                                        }]
                                    }
                                }
                            }
                        }
                    }
                },
                rainbowWallet = ({
                    chains: e,
                    projectId: t,
                    walletConnectOptions: n,
                    walletConnectVersion: i = "2",
                    ...o
                }) => {
                    let a = !!getExplicitInjectedProvider("isRainbow"),
                        s = !a;
                    return {
                        id: "rainbow",
                        name: "Rainbow",
                        iconUrl: async () => (await r.e(9601).then(r.bind(r, 99601))).default,
                        iconBackground: "#0c2f78",
                        installed: s ? void 0 : a,
                        downloadUrls: {
                            android: "https://play.google.com/store/apps/details?id=me.rainbow&referrer=utm_source%3Drainbowkit&utm_source=rainbowkit",
                            ios: "https://apps.apple.com/app/apple-store/id1457119021?pt=119997837&ct=rainbowkit&mt=8",
                            mobile: "https://rainbow.download?utm_source=rainbowkit",
                            qrCode: "https://rainbow.download?utm_source=rainbowkit&utm_medium=qrcode",
                            browserExtension: "https://rainbow.me/extension?utm_source=rainbowkit"
                        },
                        createConnector: () => {
                            let r = s ? getWalletConnectConnector({
                                    projectId: t,
                                    chains: e,
                                    version: i,
                                    options: n
                                }) : function({
                                    chains: e,
                                    flag: t,
                                    options: r
                                }) {
                                    return new es._({
                                        chains: e,
                                        options: {
                                            getProvider: () => (function(e) {
                                                if ("undefined" == typeof window || void 0 === window.ethereum) return;
                                                let t = window.ethereum.providers,
                                                    r = getExplicitInjectedProvider(e);
                                                return r || (void 0 !== t && t.length > 0 ? t[0] : window.ethereum)
                                            })(t),
                                            ...r
                                        }
                                    })
                                }({
                                    flag: "isRainbow",
                                    chains: e,
                                    options: o
                                }),
                                getUri = async () => {
                                    let e = await getWalletConnectUri(r, i);
                                    return (0, W.Dt)() ? e : (0, W.gn)() ? `rainbow://wc?uri=${encodeURIComponent(e)}&connector=rainbowkit` : `https://rnbwapp.com/wc?uri=${encodeURIComponent(e)}&connector=rainbowkit`
                                };
                            return {
                                connector: r,
                                mobile: {
                                    getUri: s ? getUri : void 0
                                },
                                qrCode: s ? {
                                    getUri,
                                    instructions: {
                                        learnMoreUrl: "https://learn.rainbow.me/connect-to-a-website-or-app?utm_source=rainbowkit&utm_medium=connector&utm_campaign=learnmore",
                                        steps: [{
                                            description: "wallet_connectors.rainbow.qr_code.step1.description",
                                            step: "install",
                                            title: "wallet_connectors.rainbow.qr_code.step1.title"
                                        }, {
                                            description: "wallet_connectors.rainbow.qr_code.step2.description",
                                            step: "create",
                                            title: "wallet_connectors.rainbow.qr_code.step2.title"
                                        }, {
                                            description: "wallet_connectors.rainbow.qr_code.step3.description",
                                            step: "scan",
                                            title: "wallet_connectors.rainbow.qr_code.step3.title"
                                        }]
                                    }
                                } : void 0
                            }
                        }
                    }
                },
                safeWallet = ({
                    chains: e,
                    ...t
                }) => ({
                    id: "safe",
                    name: "Safe",
                    iconAccent: "#12ff80",
                    iconBackground: "#fff",
                    iconUrl: async () => (await r.e(9062).then(r.bind(r, 19062))).default,
                    installed: "undefined" != typeof window && (null == window ? void 0 : window.parent) !== window,
                    downloadUrls: {},
                    createConnector: () => ({
                        connector: new ey({
                            chains: e,
                            options: t
                        })
                    })
                }),
                walletConnectWallet = ({
                    chains: e,
                    options: t,
                    projectId: n,
                    version: i = "2"
                }) => ({
                    id: "walletConnect",
                    name: "WalletConnect",
                    iconUrl: async () => (await r.e(7792).then(r.bind(r, 7792))).default,
                    iconBackground: "#3b99fc",
                    createConnector: () => {
                        let r = (0, W.gn)(),
                            o = "1" === i ? getWalletConnectConnector({
                                version: "1",
                                chains: e,
                                options: {
                                    qrcode: r,
                                    ...t
                                }
                            }) : getWalletConnectConnector({
                                version: "2",
                                chains: e,
                                projectId: n,
                                options: {
                                    showQrModal: r,
                                    ...t
                                }
                            }),
                            getUri = async () => getWalletConnectUri(o, i);
                        return {
                            connector: o,
                            ...r ? {} : {
                                mobile: {
                                    getUri
                                },
                                qrCode: {
                                    getUri
                                }
                            }
                        }
                    }
                }),
                getDefaultWallets = ({
                    appName: e,
                    chains: t,
                    projectId: r
                }) => {
                    let n = [{
                        groupName: "Popular",
                        wallets: [injectedWallet({
                            chains: t
                        }), safeWallet({
                            chains: t
                        }), rainbowWallet({
                            chains: t,
                            projectId: r
                        }), coinbaseWallet({
                            appName: e,
                            chains: t
                        }), metaMaskWallet({
                            chains: t,
                            projectId: r
                        }), walletConnectWallet({
                            chains: t,
                            projectId: r
                        }), braveWallet({
                            chains: t
                        })]
                    }];
                    return {
                        connectors: "groupName" in n[0] ? _connectorsForWallets(n) : _connectorsForWallets([{
                            groupName: "",
                            wallets: n
                        }])(),
                        wallets: n
                    }
                };
            W.xZ, W.Bg, W.VQ, W.UG
        },
        44441: function(e, t, r) {
            "use strict";
            r.d(t, {
                c: function() {
                    return Analytics
                }
            });
            var n = r(2265),
                initQueue = () => {
                    window.va || (window.va = function(...e) {
                        (window.vaq = window.vaq || []).push(e)
                    })
                };

            function isBrowser() {
                return "undefined" != typeof window
            }

            function detectEnvironment() {
                return "production"
            }

            function isDevelopment() {
                return "development" === function() {
                    let e = isBrowser() ? window.vam : detectEnvironment();
                    return e || "production"
                }()
            }

            function Analytics({
                beforeSend: e,
                debug: t = !0,
                mode: r = "auto"
            }) {
                return (0, n.useEffect)(() => {
                    ! function(e = {
                        debug: !0
                    }) {
                        var t;
                        if (!isBrowser()) return;
                        (function(e = "auto") {
                            if ("auto" === e) {
                                window.vam = detectEnvironment();
                                return
                            }
                            window.vam = e
                        })(e.mode), initQueue(), e.beforeSend && (null == (t = window.va) || t.call(window, "beforeSend", e.beforeSend));
                        let r = isDevelopment() ? "https://va.vercel-scripts.com/v1/script.debug.js" : "/_vercel/insights/script.js";
                        if (document.head.querySelector(`script[src*="${r}"]`)) return;
                        let n = document.createElement("script");
                        n.src = r, n.defer = !0, n.setAttribute("data-sdkn", "@vercel/analytics"), n.setAttribute("data-sdkv", "1.1.1"), n.onerror = () => {
                            let e = isDevelopment() ? "Please check if any ad blockers are enabled and try again." : "Be sure to enable Web Analytics for your project and deploy again. See https://vercel.com/docs/analytics/quickstart for more information.";
                            console.log(`[Vercel Web Analytics] Failed to load script from ${r}. ${e}`)
                        }, isDevelopment() && !1 === e.debug && n.setAttribute("data-debug", "false"), document.head.appendChild(n)
                    }({
                        beforeSend: e,
                        debug: t,
                        mode: r
                    })
                }, [e, t, r]), null
            }
        },
        26266: function(e, t, r) {
            "use strict";
            r.d(t, {
                RJ: function() {
                    return n
                }
            });
            var n = {
                id: 1,
                network: "homestead",
                name: "Ethereum",
                nativeCurrency: {
                    name: "Ether",
                    symbol: "ETH",
                    decimals: 18
                },
                rpcUrls: {
                    alchemy: {
                        http: ["https://eth-mainnet.g.alchemy.com/v2"],
                        webSocket: ["wss://eth-mainnet.g.alchemy.com/v2"]
                    },
                    infura: {
                        http: ["https://mainnet.infura.io/v3"],
                        webSocket: ["wss://mainnet.infura.io/ws/v3"]
                    },
                    default: {
                        http: ["https://cloudflare-eth.com"]
                    },
                    public: {
                        http: ["https://cloudflare-eth.com"]
                    }
                },
                blockExplorers: {
                    etherscan: {
                        name: "Etherscan",
                        url: "https://etherscan.io"
                    },
                    default: {
                        name: "Etherscan",
                        url: "https://etherscan.io"
                    }
                },
                contracts: {
                    ensRegistry: {
                        address: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e"
                    },
                    ensUniversalResolver: {
                        address: "0xc0497E381f536Be9ce14B0dD3817cBcAe57d2F62",
                        blockCreated: 16966585
                    },
                    multicall3: {
                        address: "0xca11bde05977b3631167028862be2a173976ca11",
                        blockCreated: 14353601
                    }
                }
            }
        },
        89390: function(e, t, r) {
            "use strict";

            function alchemyProvider({
                apiKey: e
            }) {
                return function(t) {
                    let r = t.rpcUrls.alchemy ? .http[0],
                        n = t.rpcUrls.alchemy ? .webSocket ? .[0];
                    return r ? {
                        chain: { ...t,
                            rpcUrls: { ...t.rpcUrls,
                                default: {
                                    http: [`${r}/${e}`]
                                }
                            }
                        },
                        rpcUrls: {
                            http: [`${r}/${e}`],
                            webSocket: [`${n}/${e}`]
                        }
                    } : null
                }
            }
            r.d(t, {
                G: function() {
                    return alchemyProvider
                }
            })
        },
        9253: function(e, t, r) {
            "use strict";

            function publicProvider() {
                return function(e) {
                    return e.rpcUrls.public.http[0] ? {
                        chain: e,
                        rpcUrls: e.rpcUrls.public
                    } : null
                }
            }
            r.d(t, {
                I: function() {
                    return publicProvider
                }
            })
        },
        12913: function(e, t, r) {
            "use strict";
            r.d(t, {
                B: function() {
                    return Trie
                }
            });
            let defaultMakeData = () => Object.create(null),
                {
                    forEach: n,
                    slice: i
                } = Array.prototype,
                {
                    hasOwnProperty: o
                } = Object.prototype;
            let Trie = class Trie {
                constructor(e = !0, t = defaultMakeData) {
                    this.weakness = e, this.makeData = t
                }
                lookup() {
                    return this.lookupArray(arguments)
                }
                lookupArray(e) {
                    let t = this;
                    return n.call(e, e => t = t.getChildTrie(e)), o.call(t, "data") ? t.data : t.data = this.makeData(i.call(e))
                }
                peek() {
                    return this.peekArray(arguments)
                }
                peekArray(e) {
                    let t = this;
                    for (let r = 0, n = e.length; t && r < n; ++r) {
                        let n = t.mapFor(e[r], !1);
                        t = n && n.get(e[r])
                    }
                    return t && t.data
                }
                remove() {
                    return this.removeArray(arguments)
                }
                removeArray(e) {
                    let t;
                    if (e.length) {
                        let r = e[0],
                            n = this.mapFor(r, !1),
                            o = n && n.get(r);
                        !o || (t = o.removeArray(i.call(e, 1)), o.data || o.weak || o.strong && o.strong.size || n.delete(r))
                    } else t = this.data, delete this.data;
                    return t
                }
                getChildTrie(e) {
                    let t = this.mapFor(e, !0),
                        r = t.get(e);
                    return r || t.set(e, r = new Trie(this.weakness, this.makeData)), r
                }
                mapFor(e, t) {
                    return this.weakness && function(e) {
                        switch (typeof e) {
                            case "object":
                                if (null === e) break;
                            case "function":
                                return !0
                        }
                        return !1
                    }(e) ? this.weak || (t ? this.weak = new WeakMap : void 0) : this.strong || (t ? this.strong = new Map : void 0)
                }
            }
        },
        34829: function(e, t, r) {
            "use strict";
            r.d(t, {
                $_: function() {
                    return s
                },
                Vn: function() {
                    return visit
                }
            });
            var n = r(86771),
                i = r(94775),
                o = r(5064),
                a = r(55459);
            let s = Object.freeze({});

            function visit(e, t, r = o.h8) {
                let c, u, l;
                let d = new Map;
                for (let e of Object.values(a.h)) d.set(e, function(e, t) {
                    let r = e[t];
                    return "object" == typeof r ? r : "function" == typeof r ? {
                        enter: r,
                        leave: void 0
                    } : {
                        enter: e.enter,
                        leave: e.leave
                    }
                }(t, e));
                let f = Array.isArray(e),
                    p = [e],
                    y = -1,
                    g = [],
                    v = e,
                    E = [],
                    _ = [];
                do {
                    var P, T, x;
                    let e;
                    y++;
                    let a = y === p.length,
                        A = a && 0 !== g.length;
                    if (a) {
                        if (u = 0 === _.length ? void 0 : E[E.length - 1], v = l, l = _.pop(), A) {
                            if (f) {
                                v = v.slice();
                                let e = 0;
                                for (let [t, r] of g) {
                                    let n = t - e;
                                    null === r ? (v.splice(n, 1), e++) : v[n] = r
                                }
                            } else
                                for (let [e, t] of (v = Object.defineProperties({}, Object.getOwnPropertyDescriptors(v)), g)) v[e] = t
                        }
                        y = c.index, p = c.keys, g = c.edits, f = c.inArray, c = c.prev
                    } else if (l) {
                        if (null == (v = l[u = f ? y : p[y]])) continue;
                        E.push(u)
                    }
                    if (!Array.isArray(v)) {
                        (0, o.UG)(v) || (0, n.a)(!1, `Invalid AST Node: ${(0,i.X)(v)}.`);
                        let r = a ? null === (P = d.get(v.kind)) || void 0 === P ? void 0 : P.leave : null === (T = d.get(v.kind)) || void 0 === T ? void 0 : T.enter;
                        if ((e = null == r ? void 0 : r.call(t, v, u, l, E, _)) === s) break;
                        if (!1 === e) {
                            if (!a) {
                                E.pop();
                                continue
                            }
                        } else if (void 0 !== e && (g.push([u, e]), !a)) {
                            if ((0, o.UG)(e)) v = e;
                            else {
                                E.pop();
                                continue
                            }
                        }
                    }
                    void 0 === e && A && g.push([u, v]), a ? E.pop() : (c = {
                        inArray: f,
                        index: y,
                        keys: p,
                        edits: g,
                        prev: c
                    }, p = (f = Array.isArray(v)) ? v : null !== (x = r[v.kind]) && void 0 !== x ? x : [], y = -1, g = [], l && _.push(l), l = v)
                } while (void 0 !== c);
                return 0 !== g.length ? g[g.length - 1][1] : e
            }
        },
        50905: function(e, t, r) {
            "use strict";
            let n;
            r.d(t, {
                g7: function() {
                    return f
                },
                dP: function() {
                    return dep
                },
                re: function() {
                    return wrap
                }
            });
            let defaultMakeData = () => Object.create(null),
                {
                    forEach: i,
                    slice: o
                } = Array.prototype,
                {
                    hasOwnProperty: a
                } = Object.prototype;
            let Trie = class Trie {
                constructor(e = !0, t = defaultMakeData) {
                    this.weakness = e, this.makeData = t
                }
                lookup(...e) {
                    return this.lookupArray(e)
                }
                lookupArray(e) {
                    let t = this;
                    return i.call(e, e => t = t.getChildTrie(e)), a.call(t, "data") ? t.data : t.data = this.makeData(o.call(e))
                }
                peek(...e) {
                    return this.peekArray(e)
                }
                peekArray(e) {
                    let t = this;
                    for (let r = 0, n = e.length; t && r < n; ++r) {
                        let n = this.weakness && isObjRef(e[r]) ? t.weak : t.strong;
                        t = n && n.get(e[r])
                    }
                    return t && t.data
                }
                getChildTrie(e) {
                    let t = this.weakness && isObjRef(e) ? this.weak || (this.weak = new WeakMap) : this.strong || (this.strong = new Map),
                        r = t.get(e);
                    return r || t.set(e, r = new Trie(this.weakness, this.makeData)), r
                }
            };

            function isObjRef(e) {
                switch (typeof e) {
                    case "object":
                        if (null === e) break;
                    case "function":
                        return !0
                }
                return !1
            }

            function defaultDispose() {}
            let StrongCache = class StrongCache {
                constructor(e = 1 / 0, t = defaultDispose) {
                    this.max = e, this.dispose = t, this.map = new Map, this.newest = null, this.oldest = null
                }
                has(e) {
                    return this.map.has(e)
                }
                get(e) {
                    let t = this.getNode(e);
                    return t && t.value
                }
                get size() {
                    return this.map.size
                }
                getNode(e) {
                    let t = this.map.get(e);
                    if (t && t !== this.newest) {
                        let {
                            older: e,
                            newer: r
                        } = t;
                        r && (r.older = e), e && (e.newer = r), t.older = this.newest, t.older.newer = t, t.newer = null, this.newest = t, t === this.oldest && (this.oldest = r)
                    }
                    return t
                }
                set(e, t) {
                    let r = this.getNode(e);
                    return r ? r.value = t : (r = {
                        key: e,
                        value: t,
                        newer: null,
                        older: this.newest
                    }, this.newest && (this.newest.newer = r), this.newest = r, this.oldest = this.oldest || r, this.map.set(e, r), r.value)
                }
                clean() {
                    for (; this.oldest && this.map.size > this.max;) this.delete(this.oldest.key)
                }
                delete(e) {
                    let t = this.map.get(e);
                    return !!t && (t === this.newest && (this.newest = t.older), t === this.oldest && (this.oldest = t.newer), t.newer && (t.newer.older = t.older), t.older && (t.older.newer = t.newer), this.map.delete(e), this.dispose(t.value, e), !0)
                }
            };
            let s = null,
                c = {},
                u = 1;

            function maybe(e) {
                try {
                    return e()
                } catch (e) {}
            }
            let l = "@wry/context:Slot",
                d = maybe(() => globalThis) || maybe(() => global) || Object.create(null),
                f = d[l] || Array[l] || function(e) {
                    try {
                        Object.defineProperty(d, l, {
                            value: e,
                            enumerable: !1,
                            writable: !1,
                            configurable: !0
                        })
                    } finally {
                        return e
                    }
                }(class {
                    constructor() {
                        this.id = ["slot", u++, Date.now(), Math.random().toString(36).slice(2)].join(":")
                    }
                    hasValue() {
                        for (let e = s; e; e = e.parent)
                            if (this.id in e.slots) {
                                let t = e.slots[this.id];
                                if (t === c) break;
                                return e !== s && (s.slots[this.id] = t), !0
                            }
                        return s && (s.slots[this.id] = c), !1
                    }
                    getValue() {
                        if (this.hasValue()) return s.slots[this.id]
                    }
                    withValue(e, t, r, n) {
                        let i = {
                                __proto__: null,
                                [this.id]: e
                            },
                            o = s;
                        s = {
                            parent: o,
                            slots: i
                        };
                        try {
                            return t.apply(n, r)
                        } finally {
                            s = o
                        }
                    }
                    static bind(e) {
                        let t = s;
                        return function() {
                            let r = s;
                            try {
                                return s = t, e.apply(this, arguments)
                            } finally {
                                s = r
                            }
                        }
                    }
                    static noContext(e, t, r) {
                        if (!s) return e.apply(r, t); {
                            let n = s;
                            try {
                                return s = null, e.apply(r, t)
                            } finally {
                                s = n
                            }
                        }
                    }
                }),
                {
                    bind: p,
                    noContext: y
                } = f,
                g = new f,
                {
                    hasOwnProperty: v
                } = Object.prototype,
                E = Array.from || function(e) {
                    let t = [];
                    return e.forEach(e => t.push(e)), t
                };

            function maybeUnsubscribe(e) {
                let {
                    unsubscribe: t
                } = e;
                "function" == typeof t && (e.unsubscribe = void 0, t())
            }
            let _ = [];

            function assert(e, t) {
                if (!e) throw Error(t || "assertion failure")
            }

            function valueIs(e, t) {
                let r = e.length;
                return r > 0 && r === t.length && e[r - 1] === t[r - 1]
            }

            function valueGet(e) {
                switch (e.length) {
                    case 0:
                        throw Error("unknown value");
                    case 1:
                        return e[0];
                    case 2:
                        throw e[1]
                }
            }
            let Entry = class Entry {
                constructor(e) {
                    this.fn = e, this.parents = new Set, this.childValues = new Map, this.dirtyChildren = null, this.dirty = !0, this.recomputing = !1, this.value = [], this.deps = null, ++Entry.count
                }
                peek() {
                    if (1 === this.value.length && !mightBeDirty(this)) return rememberParent(this), this.value[0]
                }
                recompute(e) {
                    var t;
                    return assert(!this.recomputing, "already recomputing"), rememberParent(this), mightBeDirty(this) && (forgetChildren(this), g.withValue(this, recomputeNewValue, [this, e]), function(e, t) {
                        if ("function" == typeof e.subscribe) try {
                            maybeUnsubscribe(e), e.unsubscribe = e.subscribe.apply(null, t)
                        } catch (t) {
                            return e.setDirty(), !1
                        }
                        return !0
                    }(this, e) && (this.dirty = !1, mightBeDirty(this) || (t = this, eachParent(t, reportCleanChild)))), valueGet(this.value)
                }
                setDirty() {
                    this.dirty || (this.dirty = !0, eachParent(this, reportDirtyChild), maybeUnsubscribe(this))
                }
                dispose() {
                    this.setDirty(), forgetChildren(this), eachParent(this, (e, t) => {
                        e.setDirty(), forgetChild(e, this)
                    })
                }
                forget() {
                    this.dispose()
                }
                dependOn(e) {
                    e.add(this), this.deps || (this.deps = _.pop() || new Set), this.deps.add(e)
                }
                forgetDeps() {
                    this.deps && (E(this.deps).forEach(e => e.delete(this)), this.deps.clear(), _.push(this.deps), this.deps = null)
                }
            };

            function rememberParent(e) {
                let t = g.getValue();
                if (t) return e.parents.add(t), t.childValues.has(e) || t.childValues.set(e, []), mightBeDirty(e) ? reportDirtyChild(t, e) : reportCleanChild(t, e), t
            }

            function recomputeNewValue(e, t) {
                let r;
                e.recomputing = !0;
                let {
                    normalizeResult: n
                } = e;
                n && 1 === e.value.length && (r = e.value.slice(0)), e.value.length = 0;
                try {
                    if (e.value[0] = e.fn.apply(null, t), n && r && !valueIs(r, e.value)) try {
                        e.value[0] = n(e.value[0], r[0])
                    } catch (e) {}
                } catch (t) {
                    e.value[1] = t
                }
                e.recomputing = !1
            }

            function mightBeDirty(e) {
                return e.dirty || !!(e.dirtyChildren && e.dirtyChildren.size)
            }

            function eachParent(e, t) {
                let r = e.parents.size;
                if (r) {
                    let n = E(e.parents);
                    for (let i = 0; i < r; ++i) t(n[i], e)
                }
            }

            function reportDirtyChild(e, t) {
                assert(e.childValues.has(t)), assert(mightBeDirty(t));
                let r = !mightBeDirty(e);
                if (e.dirtyChildren) {
                    if (e.dirtyChildren.has(t)) return
                } else e.dirtyChildren = _.pop() || new Set;
                e.dirtyChildren.add(t), r && eachParent(e, reportDirtyChild)
            }

            function reportCleanChild(e, t) {
                assert(e.childValues.has(t)), assert(!mightBeDirty(t));
                let r = e.childValues.get(t);
                0 === r.length ? e.childValues.set(t, t.value.slice(0)) : valueIs(r, t.value) || e.setDirty(), removeDirtyChild(e, t), mightBeDirty(e) || eachParent(e, reportCleanChild)
            }

            function removeDirtyChild(e, t) {
                let r = e.dirtyChildren;
                r && (r.delete(t), 0 === r.size && (_.length < 100 && _.push(r), e.dirtyChildren = null))
            }

            function forgetChildren(e) {
                e.childValues.size > 0 && e.childValues.forEach((t, r) => {
                    forgetChild(e, r)
                }), e.forgetDeps(), assert(null === e.dirtyChildren)
            }

            function forgetChild(e, t) {
                t.parents.delete(e), e.childValues.delete(t), removeDirtyChild(e, t)
            }
            Entry.count = 0;
            let P = {
                setDirty: !0,
                dispose: !0,
                forget: !0
            };

            function dep(e) {
                let t = new Map,
                    r = e && e.subscribe;

                function depend(e) {
                    let n = g.getValue();
                    if (n) {
                        let i = t.get(e);
                        i || t.set(e, i = new Set), n.dependOn(i), "function" == typeof r && (maybeUnsubscribe(i), i.unsubscribe = r(e))
                    }
                }
                return depend.dirty = function(e, r) {
                    let n = t.get(e);
                    if (n) {
                        let i = r && v.call(P, r) ? r : "setDirty";
                        E(n).forEach(e => e[i]()), t.delete(e), maybeUnsubscribe(n)
                    }
                }, depend
            }

            function defaultMakeCacheKey(...e) {
                let t = n || (n = new Trie("function" == typeof WeakMap));
                return t.lookupArray(e)
            }
            let T = new Set;

            function wrap(e, {
                max: t = 65536,
                keyArgs: r,
                makeCacheKey: n = defaultMakeCacheKey,
                normalizeResult: i,
                subscribe: o,
                cache: a = StrongCache
            } = Object.create(null)) {
                let s = "function" == typeof a ? new a(t, e => e.dispose()) : a,
                    optimistic = function() {
                        let t = n.apply(null, r ? r.apply(null, arguments) : arguments);
                        if (void 0 === t) return e.apply(null, arguments);
                        let a = s.get(t);
                        a || (s.set(t, a = new Entry(e)), a.normalizeResult = i, a.subscribe = o, a.forget = () => s.delete(t));
                        let c = a.recompute(Array.prototype.slice.call(arguments));
                        return s.set(t, a), T.add(s), g.hasValue() || (T.forEach(e => e.clean()), T.clear()), c
                    };

                function dirtyKey(e) {
                    let t = e && s.get(e);
                    t && t.setDirty()
                }

                function peekKey(e) {
                    let t = e && s.get(e);
                    if (t) return t.peek()
                }

                function forgetKey(e) {
                    return !!e && s.delete(e)
                }
                return Object.defineProperty(optimistic, "size", {
                    get: () => s.size,
                    configurable: !1,
                    enumerable: !1
                }), Object.freeze(optimistic.options = {
                    max: t,
                    keyArgs: r,
                    makeCacheKey: n,
                    normalizeResult: i,
                    subscribe: o,
                    cache: s
                }), optimistic.dirtyKey = dirtyKey, optimistic.dirty = function() {
                    dirtyKey(n.apply(null, arguments))
                }, optimistic.peekKey = peekKey, optimistic.peek = function() {
                    return peekKey(n.apply(null, arguments))
                }, optimistic.forgetKey = forgetKey, optimistic.forget = function() {
                    return forgetKey(n.apply(null, arguments))
                }, optimistic.makeCacheKey = n, optimistic.getKey = r ? function() {
                    return n.apply(null, r.apply(null, arguments))
                } : n, Object.freeze(optimistic)
            }
        },
        50741: function(e, t, r) {
            "use strict";
            r.d(t, {
                E: function() {
                    return allocUnsafe
                }
            });
            var n = r(7541);

            function allocUnsafe(e = 0) {
                return null != globalThis.Buffer && null != globalThis.Buffer.allocUnsafe ? (0, n.P)(globalThis.Buffer.allocUnsafe(e)) : new Uint8Array(e)
            }
        },
        72281: function(e, t, r) {
            "use strict";
            r.d(t, {
                z: function() {
                    return concat
                }
            });
            var n = r(50741),
                i = r(7541);

            function concat(e, t) {
                t || (t = e.reduce((e, t) => e + t.length, 0));
                let r = (0, n.E)(t),
                    o = 0;
                for (let t of e) r.set(t, o), o += t.length;
                return (0, i.P)(r)
            }
        },
        34901: function(e, t, r) {
            "use strict";
            r.d(t, {
                m: function() {
                    return fromString
                }
            });
            var n = r(85418),
                i = r(7541);

            function fromString(e, t = "utf8") {
                let r = n.Z[t];
                if (!r) throw Error(`Unsupported encoding "${t}"`);
                return ("utf8" === t || "utf-8" === t) && null != globalThis.Buffer && null != globalThis.Buffer.from ? (0, i.P)(globalThis.Buffer.from(e, "utf-8")) : r.decoder.decode(`${r.prefix}${e}`)
            }
        },
        71188: function(e, t, r) {
            "use strict";
            r.d(t, {
                BB: function() {
                    return o.B
                },
                mL: function() {
                    return i.m
                },
                zo: function() {
                    return n.z
                }
            });
            var n = r(72281),
                i = r(34901),
                o = r(21361)
        },
        21361: function(e, t, r) {
            "use strict";
            r.d(t, {
                B: function() {
                    return toString
                }
            });
            var n = r(85418);

            function toString(e, t = "utf8") {
                let r = n.Z[t];
                if (!r) throw Error(`Unsupported encoding "${t}"`);
                return ("utf8" === t || "utf-8" === t) && null != globalThis.Buffer && null != globalThis.Buffer.from ? globalThis.Buffer.from(e.buffer, e.byteOffset, e.byteLength).toString("utf8") : r.encoder.encode(e).substring(1)
            }
        },
        7541: function(e, t, r) {
            "use strict";

            function asUint8Array(e) {
                return null != globalThis.Buffer ? new Uint8Array(e.buffer, e.byteOffset, e.byteLength) : e
            }
            r.d(t, {
                P: function() {
                    return asUint8Array
                }
            })
        },
        85418: function(e, t, r) {
            "use strict";
            r.d(t, {
                Z: function() {
                    return eA
                }
            });
            var n = {};
            r.r(n), r.d(n, {
                identity: function() {
                    return E
                }
            });
            var i = {};
            r.r(i), r.d(i, {
                base2: function() {
                    return _
                }
            });
            var o = {};
            r.r(o), r.d(o, {
                base8: function() {
                    return P
                }
            });
            var a = {};
            r.r(a), r.d(a, {
                base10: function() {
                    return T
                }
            });
            var s = {};
            r.r(s), r.d(s, {
                base16: function() {
                    return x
                },
                base16upper: function() {
                    return A
                }
            });
            var c = {};
            r.r(c), r.d(c, {
                base32: function() {
                    return M
                },
                base32hex: function() {
                    return L
                },
                base32hexpad: function() {
                    return z
                },
                base32hexpadupper: function() {
                    return G
                },
                base32hexupper: function() {
                    return U
                },
                base32pad: function() {
                    return F
                },
                base32padupper: function() {
                    return N
                },
                base32upper: function() {
                    return B
                },
                base32z: function() {
                    return W
                }
            });
            var u = {};
            r.r(u), r.d(u, {
                base36: function() {
                    return V
                },
                base36upper: function() {
                    return Q
                }
            });
            var l = {};
            r.r(l), r.d(l, {
                base58btc: function() {
                    return K
                },
                base58flickr: function() {
                    return Y
                }
            });
            var d = {};
            r.r(d), r.d(d, {
                base64: function() {
                    return J
                },
                base64pad: function() {
                    return X
                },
                base64url: function() {
                    return er
                },
                base64urlpad: function() {
                    return en
                }
            });
            var f = {};
            r.r(f), r.d(f, {
                base256emoji: function() {
                    return es
                }
            });
            var p = {};
            r.r(p), r.d(p, {
                sha256: function() {
                    return eu
                },
                sha512: function() {
                    return el
                }
            });
            var y = {};
            r.r(y), r.d(y, {
                identity: function() {
                    return ed
                }
            });
            var g = {};
            r.r(g), r.d(g, {
                code: function() {
                    return ep
                },
                decode: function() {
                    return raw_decode
                },
                encode: function() {
                    return raw_encode
                },
                name: function() {
                    return ef
                }
            });
            var v = {};
            r.r(v), r.d(v, {
                code: function() {
                    return eb
                },
                decode: function() {
                    return json_decode
                },
                encode: function() {
                    return json_encode
                },
                name: function() {
                    return ey
                }
            });
            var base_x = function(e, t) {
                if (e.length >= 255) throw TypeError("Alphabet too long");
                for (var r = new Uint8Array(256), n = 0; n < r.length; n++) r[n] = 255;
                for (var i = 0; i < e.length; i++) {
                    var o = e.charAt(i),
                        a = o.charCodeAt(0);
                    if (255 !== r[a]) throw TypeError(o + " is ambiguous");
                    r[a] = i
                }
                var s = e.length,
                    c = e.charAt(0),
                    u = Math.log(s) / Math.log(256),
                    l = Math.log(256) / Math.log(s);

                function decodeUnsafe(e) {
                    if ("string" != typeof e) throw TypeError("Expected String");
                    if (0 === e.length) return new Uint8Array;
                    var t = 0;
                    if (" " !== e[0]) {
                        for (var n = 0, i = 0; e[t] === c;) n++, t++;
                        for (var o = (e.length - t) * u + 1 >>> 0, a = new Uint8Array(o); e[t];) {
                            var l = r[e.charCodeAt(t)];
                            if (255 === l) return;
                            for (var d = 0, f = o - 1;
                                (0 !== l || d < i) && -1 !== f; f--, d++) l += s * a[f] >>> 0, a[f] = l % 256 >>> 0, l = l / 256 >>> 0;
                            if (0 !== l) throw Error("Non-zero carry");
                            i = d, t++
                        }
                        if (" " !== e[t]) {
                            for (var p = o - i; p !== o && 0 === a[p];) p++;
                            for (var y = new Uint8Array(n + (o - p)), g = n; p !== o;) y[g++] = a[p++];
                            return y
                        }
                    }
                }
                return {
                    encode: function(t) {
                        if (t instanceof Uint8Array || (ArrayBuffer.isView(t) ? t = new Uint8Array(t.buffer, t.byteOffset, t.byteLength) : Array.isArray(t) && (t = Uint8Array.from(t))), !(t instanceof Uint8Array)) throw TypeError("Expected Uint8Array");
                        if (0 === t.length) return "";
                        for (var r = 0, n = 0, i = 0, o = t.length; i !== o && 0 === t[i];) i++, r++;
                        for (var a = (o - i) * l + 1 >>> 0, u = new Uint8Array(a); i !== o;) {
                            for (var d = t[i], f = 0, p = a - 1;
                                (0 !== d || f < n) && -1 !== p; p--, f++) d += 256 * u[p] >>> 0, u[p] = d % s >>> 0, d = d / s >>> 0;
                            if (0 !== d) throw Error("Non-zero carry");
                            n = f, i++
                        }
                        for (var y = a - n; y !== a && 0 === u[y];) y++;
                        for (var g = c.repeat(r); y < a; ++y) g += e.charAt(u[y]);
                        return g
                    },
                    decodeUnsafe: decodeUnsafe,
                    decode: function(e) {
                        var r = decodeUnsafe(e);
                        if (r) return r;
                        throw Error(`Non-${t} character`)
                    }
                }
            };
            new Uint8Array(0);
            let equals = (e, t) => {
                    if (e === t) return !0;
                    if (e.byteLength !== t.byteLength) return !1;
                    for (let r = 0; r < e.byteLength; r++)
                        if (e[r] !== t[r]) return !1;
                    return !0
                },
                coerce = e => {
                    if (e instanceof Uint8Array && "Uint8Array" === e.constructor.name) return e;
                    if (e instanceof ArrayBuffer) return new Uint8Array(e);
                    if (ArrayBuffer.isView(e)) return new Uint8Array(e.buffer, e.byteOffset, e.byteLength);
                    throw Error("Unknown type, must be binary type")
                },
                fromString = e => new TextEncoder().encode(e),
                bytes_toString = e => new TextDecoder().decode(e);
            let Encoder = class Encoder {
                constructor(e, t, r) {
                    this.name = e, this.prefix = t, this.baseEncode = r
                }
                encode(e) {
                    if (e instanceof Uint8Array) return `${this.prefix}${this.baseEncode(e)}`;
                    throw Error("Unknown type, must be binary type")
                }
            };
            let Decoder = class Decoder {
                constructor(e, t, r) {
                    if (this.name = e, this.prefix = t, void 0 === t.codePointAt(0)) throw Error("Invalid prefix character");
                    this.prefixCodePoint = t.codePointAt(0), this.baseDecode = r
                }
                decode(e) {
                    if ("string" == typeof e) {
                        if (e.codePointAt(0) !== this.prefixCodePoint) throw Error(`Unable to decode multibase string ${JSON.stringify(e)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);
                        return this.baseDecode(e.slice(this.prefix.length))
                    }
                    throw Error("Can only multibase decode strings")
                }
                or(e) {
                    return or(this, e)
                }
            };
            let ComposedDecoder = class ComposedDecoder {
                constructor(e) {
                    this.decoders = e
                }
                or(e) {
                    return or(this, e)
                }
                decode(e) {
                    let t = e[0],
                        r = this.decoders[t];
                    if (r) return r.decode(e);
                    throw RangeError(`Unable to decode multibase string ${JSON.stringify(e)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)
                }
            };
            let or = (e, t) => new ComposedDecoder({ ...e.decoders || {
                    [e.prefix]: e
                },
                ...t.decoders || {
                    [t.prefix]: t
                }
            });
            let Codec = class Codec {
                constructor(e, t, r, n) {
                    this.name = e, this.prefix = t, this.baseEncode = r, this.baseDecode = n, this.encoder = new Encoder(e, t, r), this.decoder = new Decoder(e, t, n)
                }
                encode(e) {
                    return this.encoder.encode(e)
                }
                decode(e) {
                    return this.decoder.decode(e)
                }
            };
            let from = ({
                    name: e,
                    prefix: t,
                    encode: r,
                    decode: n
                }) => new Codec(e, t, r, n),
                baseX = ({
                    prefix: e,
                    name: t,
                    alphabet: r
                }) => {
                    let {
                        encode: n,
                        decode: i
                    } = base_x(r, t);
                    return from({
                        prefix: e,
                        name: t,
                        encode: n,
                        decode: e => coerce(i(e))
                    })
                },
                decode = (e, t, r, n) => {
                    let i = {};
                    for (let e = 0; e < t.length; ++e) i[t[e]] = e;
                    let o = e.length;
                    for (;
                        "=" === e[o - 1];) --o;
                    let a = new Uint8Array(o * r / 8 | 0),
                        s = 0,
                        c = 0,
                        u = 0;
                    for (let t = 0; t < o; ++t) {
                        let o = i[e[t]];
                        if (void 0 === o) throw SyntaxError(`Non-${n} character`);
                        c = c << r | o, (s += r) >= 8 && (s -= 8, a[u++] = 255 & c >> s)
                    }
                    if (s >= r || 255 & c << 8 - s) throw SyntaxError("Unexpected end of data");
                    return a
                },
                encode = (e, t, r) => {
                    let n = "=" === t[t.length - 1],
                        i = (1 << r) - 1,
                        o = "",
                        a = 0,
                        s = 0;
                    for (let n = 0; n < e.length; ++n)
                        for (s = s << 8 | e[n], a += 8; a > r;) a -= r, o += t[i & s >> a];
                    if (a && (o += t[i & s << r - a]), n)
                        for (; o.length * r & 7;) o += "=";
                    return o
                },
                rfc4648 = ({
                    name: e,
                    prefix: t,
                    bitsPerChar: r,
                    alphabet: n
                }) => from({
                    prefix: t,
                    name: e,
                    encode: e => encode(e, n, r),
                    decode: t => decode(t, n, r, e)
                }),
                E = from({
                    prefix: "\x00",
                    name: "identity",
                    encode: e => bytes_toString(e),
                    decode: e => fromString(e)
                }),
                _ = rfc4648({
                    prefix: "0",
                    name: "base2",
                    alphabet: "01",
                    bitsPerChar: 1
                }),
                P = rfc4648({
                    prefix: "7",
                    name: "base8",
                    alphabet: "01234567",
                    bitsPerChar: 3
                }),
                T = baseX({
                    prefix: "9",
                    name: "base10",
                    alphabet: "0123456789"
                }),
                x = rfc4648({
                    prefix: "f",
                    name: "base16",
                    alphabet: "0123456789abcdef",
                    bitsPerChar: 4
                }),
                A = rfc4648({
                    prefix: "F",
                    name: "base16upper",
                    alphabet: "0123456789ABCDEF",
                    bitsPerChar: 4
                }),
                M = rfc4648({
                    prefix: "b",
                    name: "base32",
                    alphabet: "abcdefghijklmnopqrstuvwxyz234567",
                    bitsPerChar: 5
                }),
                B = rfc4648({
                    prefix: "B",
                    name: "base32upper",
                    alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",
                    bitsPerChar: 5
                }),
                F = rfc4648({
                    prefix: "c",
                    name: "base32pad",
                    alphabet: "abcdefghijklmnopqrstuvwxyz234567=",
                    bitsPerChar: 5
                }),
                N = rfc4648({
                    prefix: "C",
                    name: "base32padupper",
                    alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=",
                    bitsPerChar: 5
                }),
                L = rfc4648({
                    prefix: "v",
                    name: "base32hex",
                    alphabet: "0123456789abcdefghijklmnopqrstuv",
                    bitsPerChar: 5
                }),
                U = rfc4648({
                    prefix: "V",
                    name: "base32hexupper",
                    alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV",
                    bitsPerChar: 5
                }),
                z = rfc4648({
                    prefix: "t",
                    name: "base32hexpad",
                    alphabet: "0123456789abcdefghijklmnopqrstuv=",
                    bitsPerChar: 5
                }),
                G = rfc4648({
                    prefix: "T",
                    name: "base32hexpadupper",
                    alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV=",
                    bitsPerChar: 5
                }),
                W = rfc4648({
                    prefix: "h",
                    name: "base32z",
                    alphabet: "ybndrfg8ejkmcpqxot1uwisza345h769",
                    bitsPerChar: 5
                }),
                V = baseX({
                    prefix: "k",
                    name: "base36",
                    alphabet: "0123456789abcdefghijklmnopqrstuvwxyz"
                }),
                Q = baseX({
                    prefix: "K",
                    name: "base36upper",
                    alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"
                }),
                K = baseX({
                    name: "base58btc",
                    prefix: "z",
                    alphabet: "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"
                }),
                Y = baseX({
                    name: "base58flickr",
                    prefix: "Z",
                    alphabet: "123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"
                }),
                J = rfc4648({
                    prefix: "m",
                    name: "base64",
                    alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",
                    bitsPerChar: 6
                }),
                X = rfc4648({
                    prefix: "M",
                    name: "base64pad",
                    alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",
                    bitsPerChar: 6
                }),
                er = rfc4648({
                    prefix: "u",
                    name: "base64url",
                    alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_",
                    bitsPerChar: 6
                }),
                en = rfc4648({
                    prefix: "U",
                    name: "base64urlpad",
                    alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=",
                    bitsPerChar: 6
                }),
                ei = Array.from("\uD83D\uDE80\uD83E\uDE90☄\uD83D\uDEF0\uD83C\uDF0C\uD83C\uDF11\uD83C\uDF12\uD83C\uDF13\uD83C\uDF14\uD83C\uDF15\uD83C\uDF16\uD83C\uDF17\uD83C\uDF18\uD83C\uDF0D\uD83C\uDF0F\uD83C\uDF0E\uD83D\uDC09☀\uD83D\uDCBB\uD83D\uDDA5\uD83D\uDCBE\uD83D\uDCBF\uD83D\uDE02❤\uD83D\uDE0D\uD83E\uDD23\uD83D\uDE0A\uD83D\uDE4F\uD83D\uDC95\uD83D\uDE2D\uD83D\uDE18\uD83D\uDC4D\uD83D\uDE05\uD83D\uDC4F\uD83D\uDE01\uD83D\uDD25\uD83E\uDD70\uD83D\uDC94\uD83D\uDC96\uD83D\uDC99\uD83D\uDE22\uD83E\uDD14\uD83D\uDE06\uD83D\uDE44\uD83D\uDCAA\uD83D\uDE09☺\uD83D\uDC4C\uD83E\uDD17\uD83D\uDC9C\uD83D\uDE14\uD83D\uDE0E\uD83D\uDE07\uD83C\uDF39\uD83E\uDD26\uD83C\uDF89\uD83D\uDC9E✌✨\uD83E\uDD37\uD83D\uDE31\uD83D\uDE0C\uD83C\uDF38\uD83D\uDE4C\uD83D\uDE0B\uD83D\uDC97\uD83D\uDC9A\uD83D\uDE0F\uD83D\uDC9B\uD83D\uDE42\uD83D\uDC93\uD83E\uDD29\uD83D\uDE04\uD83D\uDE00\uD83D\uDDA4\uD83D\uDE03\uD83D\uDCAF\uD83D\uDE48\uD83D\uDC47\uD83C\uDFB6\uD83D\uDE12\uD83E\uDD2D❣\uD83D\uDE1C\uD83D\uDC8B\uD83D\uDC40\uD83D\uDE2A\uD83D\uDE11\uD83D\uDCA5\uD83D\uDE4B\uD83D\uDE1E\uD83D\uDE29\uD83D\uDE21\uD83E\uDD2A\uD83D\uDC4A\uD83E\uDD73\uD83D\uDE25\uD83E\uDD24\uD83D\uDC49\uD83D\uDC83\uD83D\uDE33✋\uD83D\uDE1A\uD83D\uDE1D\uD83D\uDE34\uD83C\uDF1F\uD83D\uDE2C\uD83D\uDE43\uD83C\uDF40\uD83C\uDF37\uD83D\uDE3B\uD83D\uDE13⭐✅\uD83E\uDD7A\uD83C\uDF08\uD83D\uDE08\uD83E\uDD18\uD83D\uDCA6✔\uD83D\uDE23\uD83C\uDFC3\uD83D\uDC90☹\uD83C\uDF8A\uD83D\uDC98\uD83D\uDE20☝\uD83D\uDE15\uD83C\uDF3A\uD83C\uDF82\uD83C\uDF3B\uD83D\uDE10\uD83D\uDD95\uD83D\uDC9D\uD83D\uDE4A\uD83D\uDE39\uD83D\uDDE3\uD83D\uDCAB\uD83D\uDC80\uD83D\uDC51\uD83C\uDFB5\uD83E\uDD1E\uD83D\uDE1B\uD83D\uDD34\uD83D\uDE24\uD83C\uDF3C\uD83D\uDE2B⚽\uD83E\uDD19☕\uD83C\uDFC6\uD83E\uDD2B\uD83D\uDC48\uD83D\uDE2E\uD83D\uDE46\uD83C\uDF7B\uD83C\uDF43\uD83D\uDC36\uD83D\uDC81\uD83D\uDE32\uD83C\uDF3F\uD83E\uDDE1\uD83C\uDF81⚡\uD83C\uDF1E\uD83C\uDF88❌✊\uD83D\uDC4B\uD83D\uDE30\uD83E\uDD28\uD83D\uDE36\uD83E\uDD1D\uD83D\uDEB6\uD83D\uDCB0\uD83C\uDF53\uD83D\uDCA2\uD83E\uDD1F\uD83D\uDE41\uD83D\uDEA8\uD83D\uDCA8\uD83E\uDD2C✈\uD83C\uDF80\uD83C\uDF7A\uD83E\uDD13\uD83D\uDE19\uD83D\uDC9F\uD83C\uDF31\uD83D\uDE16\uD83D\uDC76\uD83E\uDD74▶➡❓\uD83D\uDC8E\uD83D\uDCB8⬇\uD83D\uDE28\uD83C\uDF1A\uD83E\uDD8B\uD83D\uDE37\uD83D\uDD7A⚠\uD83D\uDE45\uD83D\uDE1F\uD83D\uDE35\uD83D\uDC4E\uD83E\uDD32\uD83E\uDD20\uD83E\uDD27\uD83D\uDCCC\uD83D\uDD35\uD83D\uDC85\uD83E\uDDD0\uD83D\uDC3E\uD83C\uDF52\uD83D\uDE17\uD83E\uDD11\uD83C\uDF0A\uD83E\uDD2F\uD83D\uDC37☎\uD83D\uDCA7\uD83D\uDE2F\uD83D\uDC86\uD83D\uDC46\uD83C\uDFA4\uD83D\uDE47\uD83C\uDF51❄\uD83C\uDF34\uD83D\uDCA3\uD83D\uDC38\uD83D\uDC8C\uD83D\uDCCD\uD83E\uDD40\uD83E\uDD22\uD83D\uDC45\uD83D\uDCA1\uD83D\uDCA9\uD83D\uDC50\uD83D\uDCF8\uD83D\uDC7B\uD83E\uDD10\uD83E\uDD2E\uD83C\uDFBC\uD83E\uDD75\uD83D\uDEA9\uD83C\uDF4E\uD83C\uDF4A\uD83D\uDC7C\uD83D\uDC8D\uD83D\uDCE3\uD83E\uDD42"),
                eo = ei.reduce((e, t, r) => (e[r] = t, e), []),
                ea = ei.reduce((e, t, r) => (e[t.codePointAt(0)] = r, e), []),
                es = from({
                    prefix: "\uD83D\uDE80",
                    name: "base256emoji",
                    encode: function(e) {
                        return e.reduce((e, t) => e += eo[t], "")
                    },
                    decode: function(e) {
                        let t = [];
                        for (let r of e) {
                            let e = ea[r.codePointAt(0)];
                            if (void 0 === e) throw Error(`Non-base256emoji character: ${r}`);
                            t.push(e)
                        }
                        return new Uint8Array(t)
                    }
                });

            function varint_encode(e, t, r) {
                t = t || [];
                for (var n = r = r || 0; e >= 2147483648;) t[r++] = 255 & e | 128, e /= 128;
                for (; - 128 & e;) t[r++] = 255 & e | 128, e >>>= 7;
                return t[r] = 0 | e, varint_encode.bytes = r - n + 1, t
            }

            function read(e, t) {
                var r, n = 0,
                    t = t || 0,
                    i = 0,
                    o = t,
                    a = e.length;
                do {
                    if (o >= a) throw read.bytes = 0, RangeError("Could not decode varint");
                    r = e[o++], n += i < 28 ? (127 & r) << i : (127 & r) * Math.pow(2, i), i += 7
                } while (r >= 128);
                return read.bytes = o - t, n
            }
            var ec = {
                encode: varint_encode,
                decode: read,
                encodingLength: function(e) {
                    return e < 128 ? 1 : e < 16384 ? 2 : e < 2097152 ? 3 : e < 268435456 ? 4 : e < 34359738368 ? 5 : e < 4398046511104 ? 6 : e < 562949953421312 ? 7 : e < 72057594037927940 ? 8 : e < 0x7fffffffffffffff ? 9 : 10
                }
            };
            let src_varint_decode = (e, t = 0) => {
                    let r = ec.decode(e, t);
                    return [r, ec.decode.bytes]
                },
                encodeTo = (e, t, r = 0) => (ec.encode(e, t, r), t),
                encodingLength = e => ec.encodingLength(e),
                create = (e, t) => {
                    let r = t.byteLength,
                        n = encodingLength(e),
                        i = n + encodingLength(r),
                        o = new Uint8Array(i + r);
                    return encodeTo(e, o, 0), encodeTo(r, o, n), o.set(t, i), new Digest(e, r, t, o)
                },
                digest_decode = e => {
                    let t = coerce(e),
                        [r, n] = src_varint_decode(t),
                        [i, o] = src_varint_decode(t.subarray(n)),
                        a = t.subarray(n + o);
                    if (a.byteLength !== i) throw Error("Incorrect length");
                    return new Digest(r, i, a, t)
                },
                digest_equals = (e, t) => e === t || e.code === t.code && e.size === t.size && equals(e.bytes, t.bytes);
            let Digest = class Digest {
                constructor(e, t, r, n) {
                    this.code = e, this.size = t, this.digest = r, this.bytes = n
                }
            };
            let hasher_from = ({
                name: e,
                code: t,
                encode: r
            }) => new Hasher(e, t, r);
            let Hasher = class Hasher {
                constructor(e, t, r) {
                    this.name = e, this.code = t, this.encode = r
                }
                digest(e) {
                    if (e instanceof Uint8Array) {
                        let t = this.encode(e);
                        return t instanceof Uint8Array ? create(this.code, t) : t.then(e => create(this.code, e))
                    }
                    throw Error("Unknown type, must be binary type")
                }
            };
            let sha = e => async t => new Uint8Array(await crypto.subtle.digest(e, t)),
                eu = hasher_from({
                    name: "sha2-256",
                    code: 18,
                    encode: sha("SHA-256")
                }),
                el = hasher_from({
                    name: "sha2-512",
                    code: 19,
                    encode: sha("SHA-512")
                }),
                ed = {
                    code: 0,
                    name: "identity",
                    encode: coerce,
                    digest: e => create(0, coerce(e))
                },
                ef = "raw",
                ep = 85,
                raw_encode = e => coerce(e),
                raw_decode = e => coerce(e),
                eh = new TextEncoder,
                em = new TextDecoder,
                ey = "json",
                eb = 512,
                json_encode = e => eh.encode(JSON.stringify(e)),
                json_decode = e => JSON.parse(em.decode(e));
            let CID = class CID {
                constructor(e, t, r, n) {
                    this.code = t, this.version = e, this.multihash = r, this.bytes = n, this.byteOffset = n.byteOffset, this.byteLength = n.byteLength, this.asCID = this, this._baseCache = new Map, Object.defineProperties(this, {
                        byteOffset: e_,
                        byteLength: e_,
                        code: ew,
                        version: ew,
                        multihash: ew,
                        bytes: ew,
                        _baseCache: e_,
                        asCID: e_
                    })
                }
                toV0() {
                    if (0 === this.version) return this; {
                        let {
                            code: e,
                            multihash: t
                        } = this;
                        if (e !== eg) throw Error("Cannot convert a non dag-pb CID to CIDv0");
                        if (t.code !== ev) throw Error("Cannot convert non sha2-256 multihash CID to CIDv0");
                        return CID.createV0(t)
                    }
                }
                toV1() {
                    switch (this.version) {
                        case 0:
                            {
                                let {
                                    code: e,
                                    digest: t
                                } = this.multihash,
                                r = create(e, t);
                                return CID.createV1(this.code, r)
                            }
                        case 1:
                            return this;
                        default:
                            throw Error(`Can not convert CID version ${this.version} to version 0. This is a bug please report`)
                    }
                }
                equals(e) {
                    return e && this.code === e.code && this.version === e.version && digest_equals(this.multihash, e.multihash)
                }
                toString(e) {
                    let {
                        bytes: t,
                        version: r,
                        _baseCache: n
                    } = this;
                    return 0 === r ? toStringV0(t, n, e || K.encoder) : toStringV1(t, n, e || M.encoder)
                }
                toJSON() {
                    return {
                        code: this.code,
                        version: this.version,
                        hash: this.multihash.bytes
                    }
                }
                get[Symbol.toStringTag]() {
                    return "CID"
                }[Symbol.for("nodejs.util.inspect.custom")]() {
                    return "CID(" + this.toString() + ")"
                }
                static isCID(e) {
                    return deprecate(/^0\.0/, eP), !!(e && (e[eE] || e.asCID === e))
                }
                get toBaseEncodedString() {
                    throw Error("Deprecated, use .toString()")
                }
                get codec() {
                    throw Error('"codec" property is deprecated, use integer "code" property instead')
                }
                get buffer() {
                    throw Error("Deprecated .buffer property, use .bytes to get Uint8Array instead")
                }
                get multibaseName() {
                    throw Error('"multibaseName" property is deprecated')
                }
                get prefix() {
                    throw Error('"prefix" property is deprecated')
                }
                static asCID(e) {
                    if (e instanceof CID) return e;
                    if (null != e && e.asCID === e) {
                        let {
                            version: t,
                            code: r,
                            multihash: n,
                            bytes: i
                        } = e;
                        return new CID(t, r, n, i || encodeCID(t, r, n.bytes))
                    }
                    if (null == e || !0 !== e[eE]) return null; {
                        let {
                            version: t,
                            multihash: r,
                            code: n
                        } = e, i = digest_decode(r);
                        return CID.create(t, n, i)
                    }
                }
                static create(e, t, r) {
                    if ("number" != typeof t) throw Error("String codecs are no longer supported");
                    switch (e) {
                        case 0:
                            if (t === eg) return new CID(e, t, r, r.bytes);
                            throw Error(`Version 0 CID must use dag-pb (code: ${eg}) block encoding`);
                        case 1:
                            {
                                let n = encodeCID(e, t, r.bytes);
                                return new CID(e, t, r, n)
                            }
                        default:
                            throw Error("Invalid version")
                    }
                }
                static createV0(e) {
                    return CID.create(0, eg, e)
                }
                static createV1(e, t) {
                    return CID.create(1, e, t)
                }
                static decode(e) {
                    let [t, r] = CID.decodeFirst(e);
                    if (r.length) throw Error("Incorrect length");
                    return t
                }
                static decodeFirst(e) {
                    let t = CID.inspectBytes(e),
                        r = t.size - t.multihashSize,
                        n = coerce(e.subarray(r, r + t.multihashSize));
                    if (n.byteLength !== t.multihashSize) throw Error("Incorrect length");
                    let i = n.subarray(t.multihashSize - t.digestSize),
                        o = new Digest(t.multihashCode, t.digestSize, i, n),
                        a = 0 === t.version ? CID.createV0(o) : CID.createV1(t.codec, o);
                    return [a, e.subarray(t.size)]
                }
                static inspectBytes(e) {
                    let t = 0,
                        next = () => {
                            let [r, n] = src_varint_decode(e.subarray(t));
                            return t += n, r
                        },
                        r = next(),
                        n = eg;
                    if (18 === r ? (r = 0, t = 0) : 1 === r && (n = next()), 0 !== r && 1 !== r) throw RangeError(`Invalid CID version ${r}`);
                    let i = t,
                        o = next(),
                        a = next(),
                        s = t + a;
                    return {
                        version: r,
                        codec: n,
                        multihashCode: o,
                        digestSize: a,
                        multihashSize: s - i,
                        size: s
                    }
                }
                static parse(e, t) {
                    let [r, n] = parseCIDtoBytes(e, t), i = CID.decode(n);
                    return i._baseCache.set(r, e), i
                }
            };
            let parseCIDtoBytes = (e, t) => {
                    switch (e[0]) {
                        case "Q":
                            return [K.prefix, (t || K).decode(`${K.prefix}${e}`)];
                        case K.prefix:
                            return [K.prefix, (t || K).decode(e)];
                        case M.prefix:
                            return [M.prefix, (t || M).decode(e)];
                        default:
                            if (null == t) throw Error("To parse non base32 or base58btc encoded CID multibase decoder must be provided");
                            return [e[0], t.decode(e)]
                    }
                },
                toStringV0 = (e, t, r) => {
                    let {
                        prefix: n
                    } = r;
                    if (n !== K.prefix) throw Error(`Cannot string encode V0 in ${r.name} encoding`);
                    let i = t.get(n);
                    if (null != i) return i; {
                        let i = r.encode(e).slice(1);
                        return t.set(n, i), i
                    }
                },
                toStringV1 = (e, t, r) => {
                    let {
                        prefix: n
                    } = r, i = t.get(n);
                    if (null != i) return i; {
                        let i = r.encode(e);
                        return t.set(n, i), i
                    }
                },
                eg = 112,
                ev = 18,
                encodeCID = (e, t, r) => {
                    let n = encodingLength(e),
                        i = n + encodingLength(t),
                        o = new Uint8Array(i + r.byteLength);
                    return encodeTo(e, o, 0), encodeTo(t, o, n), o.set(r, i), o
                },
                eE = Symbol.for("@ipld/js-cid/CID"),
                ew = {
                    writable: !1,
                    configurable: !1,
                    enumerable: !0
                },
                e_ = {
                    writable: !1,
                    enumerable: !1,
                    configurable: !1
                },
                deprecate = (e, t) => {
                    if (e.test("0.0.0-dev")) console.warn(t);
                    else throw Error(t)
                },
                eP = `CID.isCID(v) is deprecated and will be removed in the next major release.
Following code pattern:

if (CID.isCID(value)) {
  doSomethingWithCID(value)
}

Is replaced with:

const cid = CID.asCID(value)
if (cid) {
  // Make sure to use cid instead of value
  doSomethingWithCID(cid)
}
`,
                eO = { ...n,
                    ...i,
                    ...o,
                    ...a,
                    ...s,
                    ...c,
                    ...u,
                    ...l,
                    ...d,
                    ...f
                };
            ({ ...p,
                ...y
            });
            var eT = r(50741);

            function createCodec(e, t, r, n) {
                return {
                    name: e,
                    prefix: t,
                    encoder: {
                        name: e,
                        prefix: t,
                        encode: r
                    },
                    decoder: {
                        decode: n
                    }
                }
            }
            let ex = createCodec("utf8", "u", e => {
                    let t = new TextDecoder("utf8");
                    return "u" + t.decode(e)
                }, e => {
                    let t = new TextEncoder;
                    return t.encode(e.substring(1))
                }),
                eS = createCodec("ascii", "a", e => {
                    let t = "a";
                    for (let r = 0; r < e.length; r++) t += String.fromCharCode(e[r]);
                    return t
                }, e => {
                    e = e.substring(1);
                    let t = (0, eT.E)(e.length);
                    for (let r = 0; r < e.length; r++) t[r] = e.charCodeAt(r);
                    return t
                }),
                eI = {
                    utf8: ex,
                    "utf-8": ex,
                    hex: eO.base16,
                    latin1: eS,
                    ascii: eS,
                    binary: eS,
                    ...eO
                };
            var eA = eI
        },
        69292: function(e) {
            "use strict";
            e.exports = JSON.parse('{"name":"@safe-global/safe-apps-sdk","version":"8.1.0","description":"SDK developed to integrate third-party apps with Safe app.","main":"dist/src/index.js","typings":"dist/src/index.d.ts","_files":["dist/**/*","src/**/*","CHANGELOG.md","README.md"],"sideEffects":false,"keywords":["Safe","sdk","apps"],"scripts":{"test":"jest","format-dist":"sed -i \'\' \'s/\\"files\\":/\\"_files\\":/\' dist/package.json","build":"yarn rimraf dist && tsc && yarn format-dist"},"author":"Safe (https://safe.global)","license":"MIT","dependencies":{"@safe-global/safe-gateway-typescript-sdk":"^3.5.3","viem":"^1.0.0"},"repository":{"type":"git","url":"git+https://github.com/safe-global/safe-apps-sdk.git"},"bugs":{"url":"https://github.com/safe-global/safe-apps-sdk/issues"},"homepage":"https://github.com/safe-global/safe-apps-sdk#readme","publishConfig":{"access":"public"}}')
        }
    }
]);